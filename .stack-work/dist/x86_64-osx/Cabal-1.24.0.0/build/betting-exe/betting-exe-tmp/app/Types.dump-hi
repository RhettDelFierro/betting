
==================== FINAL INTERFACE ====================
2017-02-01 00:58:45.996231 UTC

interface main@main:Types 8001
  interface hash: d0644cccd21ab7d8634af6d17b626b86
  ABI hash: 98a7a616ff8f2acd0eefb0d3c0e5168b
  export-list hash: 83219fabebf386f01ef10be815bedda3
  orphan hash: 2c3abf952e662a993b1761afa70317dd
  flag hash: 8c8a5a2e85ae3bd50fc2b401b806d89b
  sig of: Nothing
  used TH splices: False
  where
exports:
  Types.teams
  Types.winningTeamDefault
  Types.AwayTeamGameResult
  Types.BoxScore
  Types.DayDiff
  Types.Defense{Types.Defense opp3FGA opp3FGM oppAST oppBLK oppFGA oppFGM oppFGP oppFTA oppFTM oppLosses oppOREB oppPF oppPTS oppREB oppSTL oppTOV oppWins}
  Types.GameDate
  Types.GameLogsByTeam{Types.GameLogsByTeam}
  Types.GameResult{Types.GameResult ast blk dreb fg3_pct fg3a fg3m fg_pct fga fgm ft_pct fta ftm game_ID game_date lo matchup minutes oreb pf pts reb stl team_ID tov w_pct wi wl}
  Types.Game_ID
  Types.HomeTeamGameResult
  Types.LosingTeamGameResult
  Types.Losses
  Types.NumGamesPlayed
  Types.Offense{Types.Offense assist blockedShots fieldGoalPercentage fieldGoalsAttempted fieldGoalsMade freeThrowsAttempted freeThrowsMade losses oRebounds personalFouls points stealsMade threePointersAttempted threePointersMade totalRebounds turnoversCommitted wins}
  Types.TeamABBR
  Types.TeamName
  Types.TeamStats{Types.TeamStats totalDefense totalOffense}
  Types.Team_ID
  Types.Teams
  Types.TotalGames
  Types.WinPct
  Types.WinningTeamGameResult
  Types.WinningTeamID
  Types.WinningTeamStats{Types.WinningTeamStats assists b2b blocks eFGPct fieldGoalPct fourInSix freeTAtt freeTMade home offReb pointDiff rebounds steals threeFGA threeFGM threeInFour turnovers}
  Types.Wins
module dependencies:
package dependencies: base-4.9.0.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Const
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.Read 817c914615ac8e308afc0c675fb3f671
import  -/  base-4.9.0.0:GHC.Show 952347a6ab730bcb25c0854d8bc6ca51
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  base-4.9.0.0:Text.ParserCombinators.ReadPrec 9512e2f4b227f507f87a150887202aed
import  -/  base-4.9.0.0:Text.Read.Lex fe3dd7b823826bf6870140c5363f9596
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  integer-gmp-1.0.0.1:GHC.Integer.Type 62c0e736506aac47ef40569f5b82e19d
b51f5ec8fe45da6d5c4e1c522ef1294f
  $fEqDefense :: GHC.Classes.Eq Types.Defense
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Types.Defense Types.$fEqDefense_$c== Types.$fEqDefense_$c/= -}
b51f5ec8fe45da6d5c4e1c522ef1294f
  $fEqDefense_$c/= ::
    Types.Defense -> Types.Defense -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Types.Defense) (b :: Types.Defense) ->
                 case Types.$fEqDefense_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
b51f5ec8fe45da6d5c4e1c522ef1294f
  $fEqDefense_$c== ::
    Types.Defense -> Types.Defense -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.Defense) (w1 :: Types.Defense) ->
                 case w of ww { Types.Defense ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ->
                 case ww1 of ww18 { GHC.Types.D# ww19 ->
                 case w1 of ww20 { Types.Defense ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ->
                 case ww21 of ww38 { GHC.Types.D# ww39 ->
                 Types.$w$c==
                   ww19
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww39
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37 } } } }) -}
2d8324793dbdb79a8c778099a20ae0ac
  $fEqGameLogsByTeam :: GHC.Classes.Eq Types.GameLogsByTeam
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Types.GameLogsByTeam
                  Types.$fEqGameLogsByTeam_$c==
                  Types.$fEqGameLogsByTeam_$c/= -}
2d8324793dbdb79a8c778099a20ae0ac
  $fEqGameLogsByTeam_$c/= ::
    Types.GameLogsByTeam -> Types.GameLogsByTeam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><S(S),1*U(1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Types.GameLogsByTeam) (b :: Types.GameLogsByTeam) ->
                 case a of wild { Types.GameLogsByTeam a1 ->
                 case b of wild1 { Types.GameLogsByTeam b1 ->
                 case GHC.Classes.$fEq[]_$c==
                        @ (Types.Team_ID, [Types.GameResult])
                        Types.$fEqGameLogsByTeam_$s$fEq(,)
                        a1
                        b1 of wild2 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } } }) -}
2d8324793dbdb79a8c778099a20ae0ac
  $fEqGameLogsByTeam_$c== ::
    Types.GameLogsByTeam -> Types.GameLogsByTeam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><S(S),1*U(1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Types.GameLogsByTeam) (ds1 :: Types.GameLogsByTeam) ->
                 case ds of wild { Types.GameLogsByTeam a1 ->
                 case ds1 of wild1 { Types.GameLogsByTeam b1 ->
                 GHC.Classes.$fEq[]_$c==
                   @ (Types.Team_ID, [Types.GameResult])
                   Types.$fEqGameLogsByTeam_$s$fEq(,)
                   a1
                   b1 } }) -}
c89979041795998c5551696fcb11825e
  $fEqGameLogsByTeam_$dEq :: GHC.Classes.Eq Types.GameResult
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) Types.$fEqGameResult -}
6ae20a7ccbbc233e78739f7337c155ff
  $fEqGameLogsByTeam_$dEq1 :: GHC.Classes.Eq GHC.Types.Int
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) GHC.Classes.$fEqInt -}
1839a340e0189e2e7ce1f4ec95a01d2c
  $fEqGameLogsByTeam_$s$fEq(,) ::
    GHC.Classes.Eq (GHC.Types.Int, [Types.GameResult])
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Types.Int, [Types.GameResult])
                  (GHC.Classes.$fEq(,)_$c==
                     @ GHC.Types.Int
                     @ [Types.GameResult]
                     Types.$fEqGameLogsByTeam_$dEq1
                     Types.$fEqGameLogsByTeam_$s$fOrd[]_$cp1Ord)
                  (GHC.Classes.$fEq(,)_$c/=
                     @ GHC.Types.Int
                     @ [Types.GameResult]
                     Types.$fEqGameLogsByTeam_$dEq1
                     Types.$fEqGameLogsByTeam_$s$fOrd[]_$cp1Ord) -}
c0434ecacc110de97856a0af2d958a95
  $fEqGameLogsByTeam_$s$fEq[] :: GHC.Classes.Eq [Types.GameResult]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [Types.GameResult]
                  (GHC.Classes.$fEq[]_$c==
                     @ Types.GameResult
                     Types.$fEqGameLogsByTeam_$dEq)
                  Types.$fEqGameLogsByTeam_$s$fEq[]_$c/= -}
5b5bb4c34c44b5541eab1b26c1bc9981
  $fEqGameLogsByTeam_$s$fEq[]_$c/= ::
    [Types.GameResult] -> [Types.GameResult] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: [Types.GameResult]) (y :: [Types.GameResult]) ->
                 GHC.Classes.not
                   (GHC.Classes.$fEq[]_$c==
                      @ Types.GameResult
                      Types.$fEqGameLogsByTeam_$dEq
                      x
                      y)) -}
826e6769a5e607f7add328888518fba4
  $fEqGameLogsByTeam_$s$fOrd[]_$cp1Ord ::
    GHC.Classes.Eq [Types.GameResult]
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Types.$fEqGameLogsByTeam_$s$fEq[] -}
9965cd3fb4a9830c83bfa78bfc630eec
  $fEqGameResult :: GHC.Classes.Eq Types.GameResult
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Types.GameResult
                  Types.$fEqGameResult_$c==
                  Types.$fEqGameResult_$c/= -}
9965cd3fb4a9830c83bfa78bfc630eec
  $fEqGameResult_$c/= ::
    Types.GameResult -> Types.GameResult -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U),1*U,1*U,1*U,1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S(S(S)LLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U),1*U,1*U,1*U,1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Types.GameResult) (b :: Types.GameResult) ->
                 case Types.$fEqGameResult_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
9965cd3fb4a9830c83bfa78bfc630eec
  $fEqGameResult_$c== ::
    Types.GameResult -> Types.GameResult -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U),1*U,1*U,1*U,1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S(S(S)LLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U),1*U,1*U,1*U,1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.GameResult) (w1 :: Types.GameResult) ->
                 case w of ww { Types.GameResult ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ->
                 case ww1 of ww28 { GHC.Types.I# ww29 ->
                 case w1 of ww30 { Types.GameResult ww31 ww32 ww33 ww34 ww35 ww36 ww37 ww38 ww39 ww40 ww41 ww42 ww43 ww44 ww45 ww46 ww47 ww48 ww49 ww50 ww51 ww52 ww53 ww54 ww55 ww56 ww57 ->
                 case ww31 of ww58 { GHC.Types.I# ww59 ->
                 Types.$w$c==1
                   ww29
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww59
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37
                   ww38
                   ww39
                   ww40
                   ww41
                   ww42
                   ww43
                   ww44
                   ww45
                   ww46
                   ww47
                   ww48
                   ww49
                   ww50
                   ww51
                   ww52
                   ww53
                   ww54
                   ww55
                   ww56
                   ww57 } } } }) -}
f6c970fdfe1dfab2838262c0307998c8
  $fEqOffense :: GHC.Classes.Eq Types.Offense
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Types.Offense Types.$fEqOffense_$c== Types.$fEqOffense_$c/= -}
f6c970fdfe1dfab2838262c0307998c8
  $fEqOffense_$c/= ::
    Types.Offense -> Types.Offense -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Types.Offense) (b :: Types.Offense) ->
                 case Types.$fEqOffense_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
f6c970fdfe1dfab2838262c0307998c8
  $fEqOffense_$c== ::
    Types.Offense -> Types.Offense -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.Offense) (w1 :: Types.Offense) ->
                 case w of ww { Types.Offense ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ->
                 case ww1 of ww18 { GHC.Types.D# ww19 ->
                 case w1 of ww20 { Types.Offense ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ->
                 case ww21 of ww38 { GHC.Types.D# ww39 ->
                 Types.$w$c==2
                   ww19
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww39
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37 } } } }) -}
57bc393b2aaecd16055f7506d52795b9
  $fEqTeamStats :: GHC.Classes.Eq Types.TeamStats
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Types.TeamStats
                  Types.$fEqTeamStats_$c==
                  Types.$fEqTeamStats_$c/= -}
57bc393b2aaecd16055f7506d52795b9
  $fEqTeamStats_$c/= ::
    Types.TeamStats -> Types.TeamStats -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S(S)LLLLLLLLLLLLLLLL)L),1*U(1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U)),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U)))><S(S(S(S)LLLLLLLLLLLLLLLL)L),1*U(1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U)),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U)))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.TeamStats) (w1 :: Types.TeamStats) ->
                 case w of ww { Types.TeamStats ww1 ww2 ->
                 case ww1 of ww3 { Types.Offense ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ->
                 case ww4 of ww21 { GHC.Types.D# ww22 ->
                 case w1 of ww23 { Types.TeamStats ww24 ww25 ->
                 case ww24 of ww26 { Types.Offense ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ww38 ww39 ww40 ww41 ww42 ww43 ->
                 case ww27 of ww44 { GHC.Types.D# ww45 ->
                 Types.$w$c/=
                   ww22
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww2
                   ww45
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37
                   ww38
                   ww39
                   ww40
                   ww41
                   ww42
                   ww43
                   ww25 } } } } } }) -}
57bc393b2aaecd16055f7506d52795b9
  $fEqTeamStats_$c== ::
    Types.TeamStats -> Types.TeamStats -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S(S)LLLLLLLLLLLLLLLL)L),1*U(1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U)),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U)))><S(S(S(S)LLLLLLLLLLLLLLLL)L),1*U(1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U)),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U)))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.TeamStats) (w1 :: Types.TeamStats) ->
                 case w of ww { Types.TeamStats ww1 ww2 ->
                 case ww1 of ww3 { Types.Offense ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ->
                 case ww4 of ww21 { GHC.Types.D# ww22 ->
                 case w1 of ww23 { Types.TeamStats ww24 ww25 ->
                 case ww24 of ww26 { Types.Offense ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ww38 ww39 ww40 ww41 ww42 ww43 ->
                 case ww27 of ww44 { GHC.Types.D# ww45 ->
                 Types.$w$c==3
                   ww22
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww2
                   ww45
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37
                   ww38
                   ww39
                   ww40
                   ww41
                   ww42
                   ww43
                   ww25 } } } } } }) -}
d22d45b904ef4ac038fed1728f0be333
  $fEqWinningTeamStats :: GHC.Classes.Eq Types.WinningTeamStats
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Types.WinningTeamStats
                  Types.$fEqWinningTeamStats_$c==
                  Types.$fEqWinningTeamStats_$c/= -}
d22d45b904ef4ac038fed1728f0be333
  $fEqWinningTeamStats_$c/= ::
    Types.WinningTeamStats -> Types.WinningTeamStats -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U,1*U,1*U)><S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Types.WinningTeamStats) (b :: Types.WinningTeamStats) ->
                 case Types.$fEqWinningTeamStats_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
d22d45b904ef4ac038fed1728f0be333
  $fEqWinningTeamStats_$c== ::
    Types.WinningTeamStats -> Types.WinningTeamStats -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U,1*U,1*U)><S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.WinningTeamStats) (w1 :: Types.WinningTeamStats) ->
                 case w of ww { Types.WinningTeamStats ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ->
                 case ww1 of ww18 { GHC.Types.D# ww19 ->
                 case w1 of ww20 { Types.WinningTeamStats ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ->
                 case ww21 of ww38 { GHC.Types.D# ww39 ->
                 Types.$w$c==4
                   ww19
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww39
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37 } } } }) -}
27fb66a5ecdedf195aef63ba3e40f51d
  $fEqWinningTeamStats_$dEq :: GHC.Classes.Eq [GHC.Types.Char]
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                GHC.Classes.$fEq[]_$s$fEq[]1 -}
d0e80651aa2e29892a01bd39a899657c
  $fEqWinningTeamStats_$s$fEq(,,) ::
    GHC.Classes.Eq ([GHC.Types.Char], GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ ([GHC.Types.Char], GHC.Types.Int, GHC.Types.Int)
                  (GHC.Classes.$fEq(,,)_$c==
                     @ [GHC.Types.Char]
                     @ GHC.Types.Int
                     @ GHC.Types.Int
                     Types.$fEqWinningTeamStats_$dEq
                     Types.$fEqGameLogsByTeam_$dEq1
                     Types.$fEqGameLogsByTeam_$dEq1)
                  Types.$fEqWinningTeamStats_$s$fEq(,,)_$c/= -}
d1f3ba4b32a9b000211cb445af12b2a6
  $fEqWinningTeamStats_$s$fEq(,,)_$c/= ::
    ([GHC.Types.Char], GHC.Types.Int, GHC.Types.Int)
    -> ([GHC.Types.Char], GHC.Types.Int, GHC.Types.Int)
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U(U),1*U(U))><S(SLL),1*U(1*U,1*U(U),1*U(U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a1 :: ([GHC.Types.Char], GHC.Types.Int, GHC.Types.Int))
                   (b1 :: ([GHC.Types.Char], GHC.Types.Int, GHC.Types.Int)) ->
                 case GHC.Classes.$fEq(,,)_$c==
                        @ [GHC.Types.Char]
                        @ GHC.Types.Int
                        @ GHC.Types.Int
                        Types.$fEqWinningTeamStats_$dEq
                        Types.$fEqGameLogsByTeam_$dEq1
                        Types.$fEqGameLogsByTeam_$dEq1
                        a1
                        b1 of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
b51f5ec8fe45da6d5c4e1c522ef1294f
  $fOrdDefense :: GHC.Classes.Ord Types.Defense
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Types.Defense
                  Types.$fEqDefense
                  Types.$fOrdDefense_$ccompare
                  Types.$fOrdDefense_$c<
                  Types.$fOrdDefense_$c<=
                  Types.$fOrdDefense_$c>
                  Types.$fOrdDefense_$c>=
                  Types.$fOrdDefense_$cmax
                  Types.$fOrdDefense_$cmin -}
b51f5ec8fe45da6d5c4e1c522ef1294f
  $fOrdDefense_$c< ::
    Types.Defense -> Types.Defense -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.Defense) (w1 :: Types.Defense) ->
                 case w of ww { Types.Defense ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ->
                 case ww1 of ww18 { GHC.Types.D# ww19 ->
                 case w1 of ww20 { Types.Defense ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ->
                 case ww21 of ww38 { GHC.Types.D# ww39 ->
                 Types.$w$c<
                   ww19
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww39
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37 } } } }) -}
b51f5ec8fe45da6d5c4e1c522ef1294f
  $fOrdDefense_$c<= ::
    Types.Defense -> Types.Defense -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.Defense) (w1 :: Types.Defense) ->
                 case w of ww { Types.Defense ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ->
                 case ww1 of ww18 { GHC.Types.D# ww19 ->
                 case w1 of ww20 { Types.Defense ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ->
                 case ww21 of ww38 { GHC.Types.D# ww39 ->
                 Types.$w$c<=
                   ww19
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww39
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37 } } } }) -}
b51f5ec8fe45da6d5c4e1c522ef1294f
  $fOrdDefense_$c> ::
    Types.Defense -> Types.Defense -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.Defense) (w1 :: Types.Defense) ->
                 case w of ww { Types.Defense ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ->
                 case ww1 of ww18 { GHC.Types.D# ww19 ->
                 case w1 of ww20 { Types.Defense ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ->
                 case ww21 of ww38 { GHC.Types.D# ww39 ->
                 Types.$w$c>
                   ww19
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww39
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37 } } } }) -}
b51f5ec8fe45da6d5c4e1c522ef1294f
  $fOrdDefense_$c>= ::
    Types.Defense -> Types.Defense -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.Defense) (w1 :: Types.Defense) ->
                 case w of ww { Types.Defense ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ->
                 case ww1 of ww18 { GHC.Types.D# ww19 ->
                 case w1 of ww20 { Types.Defense ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ->
                 case ww21 of ww38 { GHC.Types.D# ww39 ->
                 Types.$w$c>=
                   ww19
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww39
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37 } } } }) -}
b51f5ec8fe45da6d5c4e1c522ef1294f
  $fOrdDefense_$ccompare ::
    Types.Defense -> Types.Defense -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.Defense) (w1 :: Types.Defense) ->
                 case w of ww { Types.Defense ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ->
                 case ww1 of ww18 { GHC.Types.D# ww19 ->
                 case w1 of ww20 { Types.Defense ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ->
                 case ww21 of ww38 { GHC.Types.D# ww39 ->
                 Types.$w$ccompare
                   ww19
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww39
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37 } } } }) -}
b51f5ec8fe45da6d5c4e1c522ef1294f
  $fOrdDefense_$cmax ::
    Types.Defense -> Types.Defense -> Types.Defense
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLLLLLLLLLLLLL),U(U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U))><S(S(S)LLLLLLLLLLLLLLLL),U(U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U))>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Types.Defense) (y :: Types.Defense) ->
                 case Types.$fOrdDefense_$c<= x y of wild {
                   GHC.Types.False -> x GHC.Types.True -> y }) -}
b51f5ec8fe45da6d5c4e1c522ef1294f
  $fOrdDefense_$cmin ::
    Types.Defense -> Types.Defense -> Types.Defense
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLLLLLLLLLLLLL),U(U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U))><S(S(S)LLLLLLLLLLLLLLLL),U(U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U))>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Types.Defense) (y :: Types.Defense) ->
                 case Types.$fOrdDefense_$c<= x y of wild {
                   GHC.Types.False -> y GHC.Types.True -> x }) -}
2d8324793dbdb79a8c778099a20ae0ac
  $fOrdGameLogsByTeam :: GHC.Classes.Ord Types.GameLogsByTeam
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Types.GameLogsByTeam
                  Types.$fEqGameLogsByTeam
                  Types.$fOrdGameLogsByTeam_$ccompare
                  Types.$fOrdGameLogsByTeam_$c<
                  Types.$fOrdGameLogsByTeam_$c<=
                  Types.$fOrdGameLogsByTeam_$c>
                  Types.$fOrdGameLogsByTeam_$c>=
                  Types.$fOrdGameLogsByTeam_$cmax
                  Types.$fOrdGameLogsByTeam_$cmin -}
f8b2da25cc675a4a3345f24b5158da49
  $fOrdGameLogsByTeam1 :: GHC.Classes.Ord [Types.GameResult]
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Types.$fOrdGameLogsByTeam_$s$fOrd[] -}
2d8324793dbdb79a8c778099a20ae0ac
  $fOrdGameLogsByTeam_$c< ::
    Types.GameLogsByTeam -> Types.GameLogsByTeam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><S(S),1*U(1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Types.GameLogsByTeam) (b :: Types.GameLogsByTeam) ->
                 case a of wild { Types.GameLogsByTeam a1 ->
                 case b of wild1 { Types.GameLogsByTeam b1 ->
                 case GHC.Classes.$fOrd[]_$ccompare
                        @ (Types.Team_ID, [Types.GameResult])
                        Types.$fOrdGameLogsByTeam_$s$fOrd(,)
                        a1
                        b1 of wild2 {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True } } }) -}
2d8324793dbdb79a8c778099a20ae0ac
  $fOrdGameLogsByTeam_$c<= ::
    Types.GameLogsByTeam -> Types.GameLogsByTeam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><S(S),1*U(1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Types.GameLogsByTeam) (b :: Types.GameLogsByTeam) ->
                 case a of wild { Types.GameLogsByTeam a1 ->
                 case b of wild1 { Types.GameLogsByTeam b1 ->
                 case GHC.Classes.$fOrd[]_$ccompare
                        @ (Types.Team_ID, [Types.GameResult])
                        Types.$fOrdGameLogsByTeam_$s$fOrd(,)
                        a1
                        b1 of wild2 {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False } } }) -}
2d8324793dbdb79a8c778099a20ae0ac
  $fOrdGameLogsByTeam_$c> ::
    Types.GameLogsByTeam -> Types.GameLogsByTeam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><S(S),1*U(1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Types.GameLogsByTeam) (b :: Types.GameLogsByTeam) ->
                 case a of wild { Types.GameLogsByTeam a1 ->
                 case b of wild1 { Types.GameLogsByTeam b1 ->
                 case GHC.Classes.$fOrd[]_$ccompare
                        @ (Types.Team_ID, [Types.GameResult])
                        Types.$fOrdGameLogsByTeam_$s$fOrd(,)
                        a1
                        b1 of wild2 {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True } } }) -}
2d8324793dbdb79a8c778099a20ae0ac
  $fOrdGameLogsByTeam_$c>= ::
    Types.GameLogsByTeam -> Types.GameLogsByTeam -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><S(S),1*U(1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Types.GameLogsByTeam) (b :: Types.GameLogsByTeam) ->
                 case a of wild { Types.GameLogsByTeam a1 ->
                 case b of wild1 { Types.GameLogsByTeam b1 ->
                 case GHC.Classes.$fOrd[]_$ccompare
                        @ (Types.Team_ID, [Types.GameResult])
                        Types.$fOrdGameLogsByTeam_$s$fOrd(,)
                        a1
                        b1 of wild2 {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False } } }) -}
2d8324793dbdb79a8c778099a20ae0ac
  $fOrdGameLogsByTeam_$ccompare ::
    Types.GameLogsByTeam -> Types.GameLogsByTeam -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><S(S),1*U(1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Types.GameLogsByTeam) (b :: Types.GameLogsByTeam) ->
                 case a of wild { Types.GameLogsByTeam a1 ->
                 case b of wild1 { Types.GameLogsByTeam b1 ->
                 GHC.Classes.$fOrd[]_$ccompare
                   @ (Types.Team_ID, [Types.GameResult])
                   Types.$fOrdGameLogsByTeam_$s$fOrd(,)
                   a1
                   b1 } }) -}
2d8324793dbdb79a8c778099a20ae0ac
  $fOrdGameLogsByTeam_$cmax ::
    Types.GameLogsByTeam
    -> Types.GameLogsByTeam -> Types.GameLogsByTeam
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Types.GameLogsByTeam) (y :: Types.GameLogsByTeam) ->
                 case x of wild { Types.GameLogsByTeam a1 ->
                 case y of wild1 { Types.GameLogsByTeam b1 ->
                 case GHC.Classes.$fOrd[]_$ccompare
                        @ (Types.Team_ID, [Types.GameResult])
                        Types.$fOrdGameLogsByTeam_$s$fOrd(,)
                        a1
                        b1 of wild2 {
                   DEFAULT -> wild1 GHC.Types.GT -> wild } } }) -}
2d8324793dbdb79a8c778099a20ae0ac
  $fOrdGameLogsByTeam_$cmin ::
    Types.GameLogsByTeam
    -> Types.GameLogsByTeam -> Types.GameLogsByTeam
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Types.GameLogsByTeam) (y :: Types.GameLogsByTeam) ->
                 case x of wild { Types.GameLogsByTeam a1 ->
                 case y of wild1 { Types.GameLogsByTeam b1 ->
                 case GHC.Classes.$fOrd[]_$ccompare
                        @ (Types.Team_ID, [Types.GameResult])
                        Types.$fOrdGameLogsByTeam_$s$fOrd(,)
                        a1
                        b1 of wild2 {
                   DEFAULT -> wild GHC.Types.GT -> wild1 } } }) -}
7091db767ee25bf5a39df655530503f6
  $fOrdGameLogsByTeam_$s$fOrd(,) ::
    GHC.Classes.Ord (GHC.Types.Int, [Types.GameResult])
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Types.Int, [Types.GameResult])
                  Types.$fOrdGameLogsByTeam_$s$fOrd(,)_$cp1Ord
                  (GHC.Classes.$fOrd(,)_$ccompare
                     @ GHC.Types.Int
                     @ [Types.GameResult]
                     GHC.Classes.$fOrdInt
                     Types.$fOrdGameLogsByTeam1)
                  (GHC.Classes.$fOrd(,)_$c<
                     @ GHC.Types.Int
                     @ [Types.GameResult]
                     GHC.Classes.$fOrdInt
                     Types.$fOrdGameLogsByTeam1)
                  (GHC.Classes.$fOrd(,)_$c<=
                     @ GHC.Types.Int
                     @ [Types.GameResult]
                     GHC.Classes.$fOrdInt
                     Types.$fOrdGameLogsByTeam1)
                  (GHC.Classes.$fOrd(,)_$c>
                     @ GHC.Types.Int
                     @ [Types.GameResult]
                     GHC.Classes.$fOrdInt
                     Types.$fOrdGameLogsByTeam1)
                  (GHC.Classes.$fOrd(,)_$c>=
                     @ GHC.Types.Int
                     @ [Types.GameResult]
                     GHC.Classes.$fOrdInt
                     Types.$fOrdGameLogsByTeam1)
                  (GHC.Classes.$fOrd(,)_$cmax
                     @ GHC.Types.Int
                     @ [Types.GameResult]
                     GHC.Classes.$fOrdInt
                     Types.$fOrdGameLogsByTeam1)
                  (GHC.Classes.$fOrd(,)_$cmin
                     @ GHC.Types.Int
                     @ [Types.GameResult]
                     GHC.Classes.$fOrdInt
                     Types.$fOrdGameLogsByTeam1) -}
bd58b5213cd23bb80fa298876d6e0695
  $fOrdGameLogsByTeam_$s$fOrd(,)_$cp1Ord ::
    GHC.Classes.Eq (GHC.Types.Int, [Types.GameResult])
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Types.$fEqGameLogsByTeam_$s$fEq(,) -}
3acde4b41598a264fd612331e42c396e
  $fOrdGameLogsByTeam_$s$fOrd[] :: GHC.Classes.Ord [Types.GameResult]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [Types.GameResult]
                  Types.$fEqGameLogsByTeam_$s$fOrd[]_$cp1Ord
                  (GHC.Classes.$fOrd[]_$ccompare
                     @ Types.GameResult
                     Types.$fOrdGameResult)
                  Types.$fOrdGameLogsByTeam_$s$fOrd[]_$c<
                  Types.$fOrdGameLogsByTeam_$s$fOrd[]_$c<=
                  Types.$fOrdGameLogsByTeam_$s$fOrd[]_$c>
                  Types.$fOrdGameLogsByTeam_$s$fOrd[]_$c>=
                  Types.$fOrdGameLogsByTeam_$s$fOrd[]_$cmax
                  Types.$fOrdGameLogsByTeam_$s$fOrd[]_$cmin -}
8c4026a3a1b0842118330d7817d4a457
  $fOrdGameLogsByTeam_$s$fOrd[]_$c< ::
    [Types.GameResult] -> [Types.GameResult] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: [Types.GameResult]) (y :: [Types.GameResult]) ->
                 case GHC.Classes.$fOrd[]_$ccompare
                        @ Types.GameResult
                        Types.$fOrdGameResult
                        x
                        y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
a293457563ff3dc806f5bc7227cb2557
  $fOrdGameLogsByTeam_$s$fOrd[]_$c<= ::
    [Types.GameResult] -> [Types.GameResult] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: [Types.GameResult]) (y :: [Types.GameResult]) ->
                 case GHC.Classes.$fOrd[]_$ccompare
                        @ Types.GameResult
                        Types.$fOrdGameResult
                        x
                        y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
f87f2229158e6a5a46b63b2372705355
  $fOrdGameLogsByTeam_$s$fOrd[]_$c> ::
    [Types.GameResult] -> [Types.GameResult] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: [Types.GameResult]) (y :: [Types.GameResult]) ->
                 case GHC.Classes.$fOrd[]_$ccompare
                        @ Types.GameResult
                        Types.$fOrdGameResult
                        x
                        y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
9a4330997387f43718187d2e8aad6150
  $fOrdGameLogsByTeam_$s$fOrd[]_$c>= ::
    [Types.GameResult] -> [Types.GameResult] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: [Types.GameResult]) (y :: [Types.GameResult]) ->
                 case GHC.Classes.$fOrd[]_$ccompare
                        @ Types.GameResult
                        Types.$fOrdGameResult
                        x
                        y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
36166b52cc5e172315a854d2a6f7b694
  $fOrdGameLogsByTeam_$s$fOrd[]_$cmax ::
    [Types.GameResult] -> [Types.GameResult] -> [Types.GameResult]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: [Types.GameResult]) (y :: [Types.GameResult]) ->
                 case GHC.Classes.$fOrd[]_$ccompare
                        @ Types.GameResult
                        Types.$fOrdGameResult
                        x
                        y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
6158372f514efed6fea4d1145c2c3f2d
  $fOrdGameLogsByTeam_$s$fOrd[]_$cmin ::
    [Types.GameResult] -> [Types.GameResult] -> [Types.GameResult]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: [Types.GameResult]) (y :: [Types.GameResult]) ->
                 case GHC.Classes.$fOrd[]_$ccompare
                        @ Types.GameResult
                        Types.$fOrdGameResult
                        x
                        y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
9965cd3fb4a9830c83bfa78bfc630eec
  $fOrdGameResult :: GHC.Classes.Ord Types.GameResult
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Types.GameResult
                  Types.$fEqGameResult
                  Types.$fOrdGameResult_$ccompare
                  Types.$fOrdGameResult_$c<
                  Types.$fOrdGameResult_$c<=
                  Types.$fOrdGameResult_$c>
                  Types.$fOrdGameResult_$c>=
                  Types.$fOrdGameResult_$cmax
                  Types.$fOrdGameResult_$cmin -}
9965cd3fb4a9830c83bfa78bfc630eec
  $fOrdGameResult_$c< ::
    Types.GameResult -> Types.GameResult -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U),1*U,1*U,1*U,1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S(S(S)LLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U),1*U,1*U,1*U,1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.GameResult) (w1 :: Types.GameResult) ->
                 case w of ww { Types.GameResult ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ->
                 case ww1 of ww28 { GHC.Types.I# ww29 ->
                 case w1 of ww30 { Types.GameResult ww31 ww32 ww33 ww34 ww35 ww36 ww37 ww38 ww39 ww40 ww41 ww42 ww43 ww44 ww45 ww46 ww47 ww48 ww49 ww50 ww51 ww52 ww53 ww54 ww55 ww56 ww57 ->
                 case ww31 of ww58 { GHC.Types.I# ww59 ->
                 Types.$w$c<1
                   ww29
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww59
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37
                   ww38
                   ww39
                   ww40
                   ww41
                   ww42
                   ww43
                   ww44
                   ww45
                   ww46
                   ww47
                   ww48
                   ww49
                   ww50
                   ww51
                   ww52
                   ww53
                   ww54
                   ww55
                   ww56
                   ww57 } } } }) -}
9965cd3fb4a9830c83bfa78bfc630eec
  $fOrdGameResult_$c<= ::
    Types.GameResult -> Types.GameResult -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U),1*U,1*U,1*U,1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S(S(S)LLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U),1*U,1*U,1*U,1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.GameResult) (w1 :: Types.GameResult) ->
                 case w of ww { Types.GameResult ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ->
                 case ww1 of ww28 { GHC.Types.I# ww29 ->
                 case w1 of ww30 { Types.GameResult ww31 ww32 ww33 ww34 ww35 ww36 ww37 ww38 ww39 ww40 ww41 ww42 ww43 ww44 ww45 ww46 ww47 ww48 ww49 ww50 ww51 ww52 ww53 ww54 ww55 ww56 ww57 ->
                 case ww31 of ww58 { GHC.Types.I# ww59 ->
                 Types.$w$c<=1
                   ww29
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww59
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37
                   ww38
                   ww39
                   ww40
                   ww41
                   ww42
                   ww43
                   ww44
                   ww45
                   ww46
                   ww47
                   ww48
                   ww49
                   ww50
                   ww51
                   ww52
                   ww53
                   ww54
                   ww55
                   ww56
                   ww57 } } } }) -}
9965cd3fb4a9830c83bfa78bfc630eec
  $fOrdGameResult_$c> ::
    Types.GameResult -> Types.GameResult -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U),1*U,1*U,1*U,1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S(S(S)LLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U),1*U,1*U,1*U,1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.GameResult) (w1 :: Types.GameResult) ->
                 case w of ww { Types.GameResult ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ->
                 case ww1 of ww28 { GHC.Types.I# ww29 ->
                 case w1 of ww30 { Types.GameResult ww31 ww32 ww33 ww34 ww35 ww36 ww37 ww38 ww39 ww40 ww41 ww42 ww43 ww44 ww45 ww46 ww47 ww48 ww49 ww50 ww51 ww52 ww53 ww54 ww55 ww56 ww57 ->
                 case ww31 of ww58 { GHC.Types.I# ww59 ->
                 Types.$w$c>1
                   ww29
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww59
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37
                   ww38
                   ww39
                   ww40
                   ww41
                   ww42
                   ww43
                   ww44
                   ww45
                   ww46
                   ww47
                   ww48
                   ww49
                   ww50
                   ww51
                   ww52
                   ww53
                   ww54
                   ww55
                   ww56
                   ww57 } } } }) -}
9965cd3fb4a9830c83bfa78bfc630eec
  $fOrdGameResult_$c>= ::
    Types.GameResult -> Types.GameResult -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U),1*U,1*U,1*U,1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S(S(S)LLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U),1*U,1*U,1*U,1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.GameResult) (w1 :: Types.GameResult) ->
                 case w of ww { Types.GameResult ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ->
                 case ww1 of ww28 { GHC.Types.I# ww29 ->
                 case w1 of ww30 { Types.GameResult ww31 ww32 ww33 ww34 ww35 ww36 ww37 ww38 ww39 ww40 ww41 ww42 ww43 ww44 ww45 ww46 ww47 ww48 ww49 ww50 ww51 ww52 ww53 ww54 ww55 ww56 ww57 ->
                 case ww31 of ww58 { GHC.Types.I# ww59 ->
                 Types.$w$c>=1
                   ww29
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww59
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37
                   ww38
                   ww39
                   ww40
                   ww41
                   ww42
                   ww43
                   ww44
                   ww45
                   ww46
                   ww47
                   ww48
                   ww49
                   ww50
                   ww51
                   ww52
                   ww53
                   ww54
                   ww55
                   ww56
                   ww57 } } } }) -}
9965cd3fb4a9830c83bfa78bfc630eec
  $fOrdGameResult_$ccompare ::
    Types.GameResult -> Types.GameResult -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U),1*U,1*U,1*U,1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S(S(S)LLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U),1*U,1*U,1*U,1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.GameResult) (w1 :: Types.GameResult) ->
                 case w of ww { Types.GameResult ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ->
                 case ww1 of ww28 { GHC.Types.I# ww29 ->
                 case w1 of ww30 { Types.GameResult ww31 ww32 ww33 ww34 ww35 ww36 ww37 ww38 ww39 ww40 ww41 ww42 ww43 ww44 ww45 ww46 ww47 ww48 ww49 ww50 ww51 ww52 ww53 ww54 ww55 ww56 ww57 ->
                 case ww31 of ww58 { GHC.Types.I# ww59 ->
                 Types.$w$ccompare1
                   ww29
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww59
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37
                   ww38
                   ww39
                   ww40
                   ww41
                   ww42
                   ww43
                   ww44
                   ww45
                   ww46
                   ww47
                   ww48
                   ww49
                   ww50
                   ww51
                   ww52
                   ww53
                   ww54
                   ww55
                   ww56
                   ww57 } } } }) -}
9965cd3fb4a9830c83bfa78bfc630eec
  $fOrdGameResult_$cmax ::
    Types.GameResult -> Types.GameResult -> Types.GameResult
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLLLLLLLLLLLLLLLLLLLLLLL),U(U(U),U,U,U,U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U))><S(S(S)LLLLLLLLLLLLLLLLLLLLLLLLLL),U(U(U),U,U,U,U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U))>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Types.GameResult) (y :: Types.GameResult) ->
                 case Types.$fOrdGameResult_$c<= x y of wild {
                   GHC.Types.False -> x GHC.Types.True -> y }) -}
9965cd3fb4a9830c83bfa78bfc630eec
  $fOrdGameResult_$cmin ::
    Types.GameResult -> Types.GameResult -> Types.GameResult
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLLLLLLLLLLLLLLLLLLLLLLL),U(U(U),U,U,U,U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U))><S(S(S)LLLLLLLLLLLLLLLLLLLLLLLLLL),U(U(U),U,U,U,U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U))>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Types.GameResult) (y :: Types.GameResult) ->
                 case Types.$fOrdGameResult_$c<= x y of wild {
                   GHC.Types.False -> y GHC.Types.True -> x }) -}
f6c970fdfe1dfab2838262c0307998c8
  $fOrdOffense :: GHC.Classes.Ord Types.Offense
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Types.Offense
                  Types.$fEqOffense
                  Types.$fOrdOffense_$ccompare
                  Types.$fOrdOffense_$c<
                  Types.$fOrdOffense_$c<=
                  Types.$fOrdOffense_$c>
                  Types.$fOrdOffense_$c>=
                  Types.$fOrdOffense_$cmax
                  Types.$fOrdOffense_$cmin -}
f6c970fdfe1dfab2838262c0307998c8
  $fOrdOffense_$c< ::
    Types.Offense -> Types.Offense -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.Offense) (w1 :: Types.Offense) ->
                 case w of ww { Types.Offense ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ->
                 case ww1 of ww18 { GHC.Types.D# ww19 ->
                 case w1 of ww20 { Types.Offense ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ->
                 case ww21 of ww38 { GHC.Types.D# ww39 ->
                 Types.$w$c<2
                   ww19
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww39
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37 } } } }) -}
f6c970fdfe1dfab2838262c0307998c8
  $fOrdOffense_$c<= ::
    Types.Offense -> Types.Offense -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.Offense) (w1 :: Types.Offense) ->
                 case w of ww { Types.Offense ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ->
                 case ww1 of ww18 { GHC.Types.D# ww19 ->
                 case w1 of ww20 { Types.Offense ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ->
                 case ww21 of ww38 { GHC.Types.D# ww39 ->
                 Types.$w$c<=2
                   ww19
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww39
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37 } } } }) -}
f6c970fdfe1dfab2838262c0307998c8
  $fOrdOffense_$c> ::
    Types.Offense -> Types.Offense -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.Offense) (w1 :: Types.Offense) ->
                 case w of ww { Types.Offense ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ->
                 case ww1 of ww18 { GHC.Types.D# ww19 ->
                 case w1 of ww20 { Types.Offense ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ->
                 case ww21 of ww38 { GHC.Types.D# ww39 ->
                 Types.$w$c>2
                   ww19
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww39
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37 } } } }) -}
f6c970fdfe1dfab2838262c0307998c8
  $fOrdOffense_$c>= ::
    Types.Offense -> Types.Offense -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.Offense) (w1 :: Types.Offense) ->
                 case w of ww { Types.Offense ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ->
                 case ww1 of ww18 { GHC.Types.D# ww19 ->
                 case w1 of ww20 { Types.Offense ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ->
                 case ww21 of ww38 { GHC.Types.D# ww39 ->
                 Types.$w$c>=2
                   ww19
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww39
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37 } } } }) -}
f6c970fdfe1dfab2838262c0307998c8
  $fOrdOffense_$ccompare ::
    Types.Offense -> Types.Offense -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.Offense) (w1 :: Types.Offense) ->
                 case w of ww { Types.Offense ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ->
                 case ww1 of ww18 { GHC.Types.D# ww19 ->
                 case w1 of ww20 { Types.Offense ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ->
                 case ww21 of ww38 { GHC.Types.D# ww39 ->
                 Types.$w$ccompare2
                   ww19
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww39
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37 } } } }) -}
f6c970fdfe1dfab2838262c0307998c8
  $fOrdOffense_$cmax ::
    Types.Offense -> Types.Offense -> Types.Offense
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLLLLLLLLLLLLL),U(U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U))><S(S(S)LLLLLLLLLLLLLLLL),U(U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U))>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Types.Offense) (y :: Types.Offense) ->
                 case Types.$fOrdOffense_$c<= x y of wild {
                   GHC.Types.False -> x GHC.Types.True -> y }) -}
f6c970fdfe1dfab2838262c0307998c8
  $fOrdOffense_$cmin ::
    Types.Offense -> Types.Offense -> Types.Offense
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLLLLLLLLLLLLL),U(U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U))><S(S(S)LLLLLLLLLLLLLLLL),U(U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U))>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Types.Offense) (y :: Types.Offense) ->
                 case Types.$fOrdOffense_$c<= x y of wild {
                   GHC.Types.False -> y GHC.Types.True -> x }) -}
57bc393b2aaecd16055f7506d52795b9
  $fOrdTeamStats :: GHC.Classes.Ord Types.TeamStats
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Types.TeamStats
                  Types.$fEqTeamStats
                  Types.$fOrdTeamStats_$ccompare
                  Types.$fOrdTeamStats_$c<
                  Types.$fOrdTeamStats_$c<=
                  Types.$fOrdTeamStats_$c>
                  Types.$fOrdTeamStats_$c>=
                  Types.$fOrdTeamStats_$cmax
                  Types.$fOrdTeamStats_$cmin -}
57bc393b2aaecd16055f7506d52795b9
  $fOrdTeamStats_$c< ::
    Types.TeamStats -> Types.TeamStats -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S(S)LLLLLLLLLLLLLLLL)L),1*U(1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U)),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U)))><S(S(S(S)LLLLLLLLLLLLLLLL)L),1*U(1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U)),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U)))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.TeamStats) (w1 :: Types.TeamStats) ->
                 case w of ww { Types.TeamStats ww1 ww2 ->
                 case ww1 of ww3 { Types.Offense ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ->
                 case ww4 of ww21 { GHC.Types.D# ww22 ->
                 case w1 of ww23 { Types.TeamStats ww24 ww25 ->
                 case ww24 of ww26 { Types.Offense ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ww38 ww39 ww40 ww41 ww42 ww43 ->
                 case ww27 of ww44 { GHC.Types.D# ww45 ->
                 Types.$w$c<3
                   ww22
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww2
                   ww45
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37
                   ww38
                   ww39
                   ww40
                   ww41
                   ww42
                   ww43
                   ww25 } } } } } }) -}
57bc393b2aaecd16055f7506d52795b9
  $fOrdTeamStats_$c<= ::
    Types.TeamStats -> Types.TeamStats -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S(S)LLLLLLLLLLLLLLLL)L),1*U(1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U)),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U)))><S(S(S(S)LLLLLLLLLLLLLLLL)L),1*U(1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U)),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U)))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.TeamStats) (w1 :: Types.TeamStats) ->
                 case w of ww { Types.TeamStats ww1 ww2 ->
                 case ww1 of ww3 { Types.Offense ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ->
                 case ww4 of ww21 { GHC.Types.D# ww22 ->
                 case w1 of ww23 { Types.TeamStats ww24 ww25 ->
                 case ww24 of ww26 { Types.Offense ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ww38 ww39 ww40 ww41 ww42 ww43 ->
                 case ww27 of ww44 { GHC.Types.D# ww45 ->
                 Types.$w$c<=3
                   ww22
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww2
                   ww45
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37
                   ww38
                   ww39
                   ww40
                   ww41
                   ww42
                   ww43
                   ww25 } } } } } }) -}
57bc393b2aaecd16055f7506d52795b9
  $fOrdTeamStats_$c> ::
    Types.TeamStats -> Types.TeamStats -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S(S)LLLLLLLLLLLLLLLL)L),1*U(1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U)),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U)))><S(S(S(S)LLLLLLLLLLLLLLLL)L),1*U(1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U)),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U)))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.TeamStats) (w1 :: Types.TeamStats) ->
                 case w of ww { Types.TeamStats ww1 ww2 ->
                 case ww1 of ww3 { Types.Offense ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ->
                 case ww4 of ww21 { GHC.Types.D# ww22 ->
                 case w1 of ww23 { Types.TeamStats ww24 ww25 ->
                 case ww24 of ww26 { Types.Offense ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ww38 ww39 ww40 ww41 ww42 ww43 ->
                 case ww27 of ww44 { GHC.Types.D# ww45 ->
                 Types.$w$c>3
                   ww22
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww2
                   ww45
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37
                   ww38
                   ww39
                   ww40
                   ww41
                   ww42
                   ww43
                   ww25 } } } } } }) -}
57bc393b2aaecd16055f7506d52795b9
  $fOrdTeamStats_$c>= ::
    Types.TeamStats -> Types.TeamStats -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S(S)LLLLLLLLLLLLLLLL)L),1*U(1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U)),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U)))><S(S(S(S)LLLLLLLLLLLLLLLL)L),1*U(1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U)),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U)))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.TeamStats) (w1 :: Types.TeamStats) ->
                 case w of ww { Types.TeamStats ww1 ww2 ->
                 case ww1 of ww3 { Types.Offense ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ->
                 case ww4 of ww21 { GHC.Types.D# ww22 ->
                 case w1 of ww23 { Types.TeamStats ww24 ww25 ->
                 case ww24 of ww26 { Types.Offense ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ww38 ww39 ww40 ww41 ww42 ww43 ->
                 case ww27 of ww44 { GHC.Types.D# ww45 ->
                 Types.$w$c>=3
                   ww22
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww2
                   ww45
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37
                   ww38
                   ww39
                   ww40
                   ww41
                   ww42
                   ww43
                   ww25 } } } } } }) -}
57bc393b2aaecd16055f7506d52795b9
  $fOrdTeamStats_$ccompare ::
    Types.TeamStats -> Types.TeamStats -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S(S)LLLLLLLLLLLLLLLL)L),1*U(1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U)),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U)))><S(S(S(S)LLLLLLLLLLLLLLLL)L),1*U(1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U)),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U)))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.TeamStats) (w1 :: Types.TeamStats) ->
                 case w of ww { Types.TeamStats ww1 ww2 ->
                 case ww1 of ww3 { Types.Offense ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ->
                 case ww4 of ww21 { GHC.Types.D# ww22 ->
                 case w1 of ww23 { Types.TeamStats ww24 ww25 ->
                 case ww24 of ww26 { Types.Offense ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ww38 ww39 ww40 ww41 ww42 ww43 ->
                 case ww27 of ww44 { GHC.Types.D# ww45 ->
                 Types.$w$ccompare3
                   ww22
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww2
                   ww45
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37
                   ww38
                   ww39
                   ww40
                   ww41
                   ww42
                   ww43
                   ww25 } } } } } }) -}
57bc393b2aaecd16055f7506d52795b9
  $fOrdTeamStats_$cmax ::
    Types.TeamStats -> Types.TeamStats -> Types.TeamStats
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S(S)LLLLLLLLLLLLLLLL)L),1*U(U(U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U)),U(U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U)))><S(S(S(S)LLLLLLLLLLLLLLLL)L),1*U(U(U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U)),U(U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U)))>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.TeamStats) (w1 :: Types.TeamStats) ->
                 case w of ww { Types.TeamStats ww1 ww2 ->
                 case ww1 of ww3 { Types.Offense ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ->
                 case ww4 of ww21 { GHC.Types.D# ww22 ->
                 case w1 of ww23 { Types.TeamStats ww24 ww25 ->
                 case ww24 of ww26 { Types.Offense ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ww38 ww39 ww40 ww41 ww42 ww43 ->
                 case ww27 of ww44 { GHC.Types.D# ww45 ->
                 case Types.$w$cmax
                        ww22
                        ww5
                        ww6
                        ww7
                        ww8
                        ww9
                        ww10
                        ww11
                        ww12
                        ww13
                        ww14
                        ww15
                        ww16
                        ww17
                        ww18
                        ww19
                        ww20
                        ww2
                        ww45
                        ww28
                        ww29
                        ww30
                        ww31
                        ww32
                        ww33
                        ww34
                        ww35
                        ww36
                        ww37
                        ww38
                        ww39
                        ww40
                        ww41
                        ww42
                        ww43
                        ww25 of ww46 { (#,#) ww47 ww48 ->
                 Types.TeamStats ww47 ww48 } } } } } } }) -}
57bc393b2aaecd16055f7506d52795b9
  $fOrdTeamStats_$cmin ::
    Types.TeamStats -> Types.TeamStats -> Types.TeamStats
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S(S)LLLLLLLLLLLLLLLL)L),1*U(U(U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U)),U(U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U)))><S(S(S(S)LLLLLLLLLLLLLLLL)L),1*U(U(U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U)),U(U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U)))>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.TeamStats) (w1 :: Types.TeamStats) ->
                 case w of ww { Types.TeamStats ww1 ww2 ->
                 case ww1 of ww3 { Types.Offense ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ->
                 case ww4 of ww21 { GHC.Types.D# ww22 ->
                 case w1 of ww23 { Types.TeamStats ww24 ww25 ->
                 case ww24 of ww26 { Types.Offense ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ww38 ww39 ww40 ww41 ww42 ww43 ->
                 case ww27 of ww44 { GHC.Types.D# ww45 ->
                 case Types.$w$cmin
                        ww22
                        ww5
                        ww6
                        ww7
                        ww8
                        ww9
                        ww10
                        ww11
                        ww12
                        ww13
                        ww14
                        ww15
                        ww16
                        ww17
                        ww18
                        ww19
                        ww20
                        ww2
                        ww45
                        ww28
                        ww29
                        ww30
                        ww31
                        ww32
                        ww33
                        ww34
                        ww35
                        ww36
                        ww37
                        ww38
                        ww39
                        ww40
                        ww41
                        ww42
                        ww43
                        ww25 of ww46 { (#,#) ww47 ww48 ->
                 Types.TeamStats ww47 ww48 } } } } } } }) -}
d22d45b904ef4ac038fed1728f0be333
  $fOrdWinningTeamStats :: GHC.Classes.Ord Types.WinningTeamStats
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Types.WinningTeamStats
                  Types.$fEqWinningTeamStats
                  Types.$fOrdWinningTeamStats_$ccompare
                  Types.$fOrdWinningTeamStats_$c<
                  Types.$fOrdWinningTeamStats_$c<=
                  Types.$fOrdWinningTeamStats_$c>
                  Types.$fOrdWinningTeamStats_$c>=
                  Types.$fOrdWinningTeamStats_$cmax
                  Types.$fOrdWinningTeamStats_$cmin -}
d22d45b904ef4ac038fed1728f0be333
  $fOrdWinningTeamStats_$c< ::
    Types.WinningTeamStats -> Types.WinningTeamStats -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U,1*U,1*U)><S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.WinningTeamStats) (w1 :: Types.WinningTeamStats) ->
                 case w of ww { Types.WinningTeamStats ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ->
                 case ww1 of ww18 { GHC.Types.D# ww19 ->
                 case w1 of ww20 { Types.WinningTeamStats ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ->
                 case ww21 of ww38 { GHC.Types.D# ww39 ->
                 Types.$w$c<4
                   ww19
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww39
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37 } } } }) -}
d22d45b904ef4ac038fed1728f0be333
  $fOrdWinningTeamStats_$c<= ::
    Types.WinningTeamStats -> Types.WinningTeamStats -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U,1*U,1*U)><S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.WinningTeamStats) (w1 :: Types.WinningTeamStats) ->
                 case w of ww { Types.WinningTeamStats ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ->
                 case ww1 of ww18 { GHC.Types.D# ww19 ->
                 case w1 of ww20 { Types.WinningTeamStats ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ->
                 case ww21 of ww38 { GHC.Types.D# ww39 ->
                 Types.$w$c<=4
                   ww19
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww39
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37 } } } }) -}
d22d45b904ef4ac038fed1728f0be333
  $fOrdWinningTeamStats_$c> ::
    Types.WinningTeamStats -> Types.WinningTeamStats -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U,1*U,1*U)><S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.WinningTeamStats) (w1 :: Types.WinningTeamStats) ->
                 case w of ww { Types.WinningTeamStats ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ->
                 case ww1 of ww18 { GHC.Types.D# ww19 ->
                 case w1 of ww20 { Types.WinningTeamStats ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ->
                 case ww21 of ww38 { GHC.Types.D# ww39 ->
                 Types.$w$c>4
                   ww19
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww39
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37 } } } }) -}
d22d45b904ef4ac038fed1728f0be333
  $fOrdWinningTeamStats_$c>= ::
    Types.WinningTeamStats -> Types.WinningTeamStats -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U,1*U,1*U)><S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.WinningTeamStats) (w1 :: Types.WinningTeamStats) ->
                 case w of ww { Types.WinningTeamStats ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ->
                 case ww1 of ww18 { GHC.Types.D# ww19 ->
                 case w1 of ww20 { Types.WinningTeamStats ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ->
                 case ww21 of ww38 { GHC.Types.D# ww39 ->
                 Types.$w$c>=4
                   ww19
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww39
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37 } } } }) -}
d22d45b904ef4ac038fed1728f0be333
  $fOrdWinningTeamStats_$ccompare ::
    Types.WinningTeamStats
    -> Types.WinningTeamStats -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U,1*U,1*U)><S(S(S)LLLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.WinningTeamStats) (w1 :: Types.WinningTeamStats) ->
                 case w of ww { Types.WinningTeamStats ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ->
                 case ww1 of ww18 { GHC.Types.D# ww19 ->
                 case w1 of ww20 { Types.WinningTeamStats ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ->
                 case ww21 of ww38 { GHC.Types.D# ww39 ->
                 Types.$w$ccompare4
                   ww19
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww39
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37 } } } }) -}
d22d45b904ef4ac038fed1728f0be333
  $fOrdWinningTeamStats_$cmax ::
    Types.WinningTeamStats
    -> Types.WinningTeamStats -> Types.WinningTeamStats
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLLLLLLLLLLLLL),U(U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U,U,U)><S(S(S)LLLLLLLLLLLLLLLL),U(U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Types.WinningTeamStats) (y :: Types.WinningTeamStats) ->
                 case Types.$fOrdWinningTeamStats_$c<= x y of wild {
                   GHC.Types.False -> x GHC.Types.True -> y }) -}
d22d45b904ef4ac038fed1728f0be333
  $fOrdWinningTeamStats_$cmin ::
    Types.WinningTeamStats
    -> Types.WinningTeamStats -> Types.WinningTeamStats
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLLLLLLLLLLLLL),U(U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U,U,U)><S(S(S)LLLLLLLLLLLLLLLL),U(U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Types.WinningTeamStats) (y :: Types.WinningTeamStats) ->
                 case Types.$fOrdWinningTeamStats_$c<= x y of wild {
                   GHC.Types.False -> y GHC.Types.True -> x }) -}
1eb77ef9ef8b95ea85c9637293629e69
  $fOrdWinningTeamStats_$s$fOrd(,,) ::
    GHC.Classes.Ord ([GHC.Types.Char], GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ ([GHC.Types.Char], GHC.Types.Int, GHC.Types.Int)
                  Types.$fOrdWinningTeamStats_$s$fOrd(,,)_$cp1Ord
                  (GHC.Classes.$fOrd(,,)_$ccompare
                     @ [GHC.Types.Char]
                     @ GHC.Types.Int
                     @ GHC.Types.Int
                     GHC.Classes.$fOrd[]_$s$fOrd[]1
                     GHC.Classes.$fOrdInt
                     GHC.Classes.$fOrdInt)
                  (GHC.Classes.$fOrd(,,)_$c<
                     @ [GHC.Types.Char]
                     @ GHC.Types.Int
                     @ GHC.Types.Int
                     GHC.Classes.$fOrd[]_$s$fOrd[]1
                     GHC.Classes.$fOrdInt
                     GHC.Classes.$fOrdInt)
                  (GHC.Classes.$fOrd(,,)_$c<=
                     @ [GHC.Types.Char]
                     @ GHC.Types.Int
                     @ GHC.Types.Int
                     GHC.Classes.$fOrd[]_$s$fOrd[]1
                     GHC.Classes.$fOrdInt
                     GHC.Classes.$fOrdInt)
                  (GHC.Classes.$fOrd(,,)_$c>
                     @ [GHC.Types.Char]
                     @ GHC.Types.Int
                     @ GHC.Types.Int
                     GHC.Classes.$fOrd[]_$s$fOrd[]1
                     GHC.Classes.$fOrdInt
                     GHC.Classes.$fOrdInt)
                  (GHC.Classes.$fOrd(,,)_$c>=
                     @ [GHC.Types.Char]
                     @ GHC.Types.Int
                     @ GHC.Types.Int
                     GHC.Classes.$fOrd[]_$s$fOrd[]1
                     GHC.Classes.$fOrdInt
                     GHC.Classes.$fOrdInt)
                  Types.$fOrdWinningTeamStats_$s$fOrd(,,)_$cmax
                  Types.$fOrdWinningTeamStats_$s$fOrd(,,)_$cmin -}
5b6aa8ecd3161f8da6ae1935703b8a9b
  $fOrdWinningTeamStats_$s$fOrd(,,)_$cmax ::
    ([GHC.Types.Char], GHC.Types.Int, GHC.Types.Int)
    -> ([GHC.Types.Char], GHC.Types.Int, GHC.Types.Int)
    -> ([GHC.Types.Char], GHC.Types.Int, GHC.Types.Int)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(U,U(U),U(U))><S(SLL),1*U(U,U(U),U(U))>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: ([GHC.Types.Char], GHC.Types.Int, GHC.Types.Int))
                   (y :: ([GHC.Types.Char], GHC.Types.Int, GHC.Types.Int)) ->
                 case GHC.Classes.$fOrd(,,)_$c<=
                        @ [GHC.Types.Char]
                        @ GHC.Types.Int
                        @ GHC.Types.Int
                        GHC.Classes.$fOrd[]_$s$fOrd[]1
                        GHC.Classes.$fOrdInt
                        GHC.Classes.$fOrdInt
                        x
                        y of wild {
                   GHC.Types.False -> x GHC.Types.True -> y }) -}
9c5853664045a114143586008246338d
  $fOrdWinningTeamStats_$s$fOrd(,,)_$cmin ::
    ([GHC.Types.Char], GHC.Types.Int, GHC.Types.Int)
    -> ([GHC.Types.Char], GHC.Types.Int, GHC.Types.Int)
    -> ([GHC.Types.Char], GHC.Types.Int, GHC.Types.Int)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(U,U(U),U(U))><S(SLL),1*U(U,U(U),U(U))>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: ([GHC.Types.Char], GHC.Types.Int, GHC.Types.Int))
                   (y :: ([GHC.Types.Char], GHC.Types.Int, GHC.Types.Int)) ->
                 case GHC.Classes.$fOrd(,,)_$c<=
                        @ [GHC.Types.Char]
                        @ GHC.Types.Int
                        @ GHC.Types.Int
                        GHC.Classes.$fOrd[]_$s$fOrd[]1
                        GHC.Classes.$fOrdInt
                        GHC.Classes.$fOrdInt
                        x
                        y of wild {
                   GHC.Types.False -> y GHC.Types.True -> x }) -}
98556b580a14bb1247f33589755c00b4
  $fOrdWinningTeamStats_$s$fOrd(,,)_$cp1Ord ::
    GHC.Classes.Eq ([GHC.Types.Char], GHC.Types.Int, GHC.Types.Int)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Types.$fEqWinningTeamStats_$s$fEq(,,) -}
b51f5ec8fe45da6d5c4e1c522ef1294f
  $fReadDefense :: GHC.Read.Read Types.Defense
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Types.Defense
                  Types.$fReadDefense_$creadsPrec
                  Types.$fReadDefense_$creadList
                  Types.$fReadDefense_$creadPrec
                  Types.$fReadDefense_$creadListPrec -}
b51f5ec8fe45da6d5c4e1c522ef1294f
  $fReadDefense1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([Types.Defense] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: [Types.Defense] -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.$wlist
                   @ Types.Defense
                   Types.$fReadDefense2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Types.Defense>_R))
                   @ b
                   eta1) -}
b51f5ec8fe45da6d5c4e1c522ef1294f
  $fReadDefense2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP Types.Defense
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ Types.Defense
                   Types.$fReadDefense3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <Types.Defense>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <Types.Defense>_R)))) -}
b51f5ec8fe45da6d5c4e1c522ef1294f
  $fReadDefense3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Types.Defense -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,C(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (w1 :: Types.Defense -> Text.ParserCombinators.ReadP.P b) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Types.$w$creadPrec ww1 @ b w1 }) -}
b51f5ec8fe45da6d5c4e1c522ef1294f
  $fReadDefense4 :: Text.ParserCombinators.ReadP.P [Types.Defense]
  {- Unfolding: (GHC.Read.$wlist
                   @ Types.Defense
                   Types.$fReadDefense2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Types.Defense>_R))
                   @ [Types.Defense]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [Types.Defense])) -}
b51f5ec8fe45da6d5c4e1c522ef1294f
  $fReadDefense_$creadList ::
    Text.ParserCombinators.ReadP.ReadS [Types.Defense]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [Types.Defense]
                   Types.$fReadDefense4) -}
b51f5ec8fe45da6d5c4e1c522ef1294f
  $fReadDefense_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [Types.Defense]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Types.$fReadDefense1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <[Types.Defense]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                               <[Types.Defense]>_R))) -}
b51f5ec8fe45da6d5c4e1c522ef1294f
  $fReadDefense_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec Types.Defense
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Types.$fReadDefense2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <Types.Defense>_R)) -}
b51f5ec8fe45da6d5c4e1c522ef1294f
  $fReadDefense_$creadsPrec ::
    GHC.Types.Int -> Text.ParserCombinators.ReadP.ReadS Types.Defense
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ Types.Defense
                   ((GHC.Read.$fReadDouble10
                       @ Types.Defense
                       Types.$fReadDefense3
                         `cast`
                       (Trans
                            (<Text.ParserCombinators.ReadPrec.Prec>_R
                             ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                           <Types.Defense>_R))
                            (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                      <Types.Defense>_R)))
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0] <Types.Defense>_R)
                      @ Types.Defense
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ Types.Defense))) -}
2d8324793dbdb79a8c778099a20ae0ac
  $fReadGameLogsByTeam :: GHC.Read.Read Types.GameLogsByTeam
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Types.GameLogsByTeam
                  Types.$fReadGameLogsByTeam_$creadsPrec
                  Types.$fReadGameLogsByTeam_$creadList
                  Types.$fReadGameLogsByTeam_$creadPrec
                  Types.$fReadGameLogsByTeam_$creadListPrec -}
2d8324793dbdb79a8c778099a20ae0ac
  $fReadGameLogsByTeam1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([Types.GameLogsByTeam] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: [Types.GameLogsByTeam]
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.$wlist
                   @ Types.GameLogsByTeam
                   Types.$fReadGameLogsByTeam2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Types.GameLogsByTeam>_R))
                   @ b
                   eta1) -}
2d8324793dbdb79a8c778099a20ae0ac
  $fReadGameLogsByTeam2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP Types.GameLogsByTeam
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ Types.GameLogsByTeam
                   Types.$fReadGameLogsByTeam3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <Types.GameLogsByTeam>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <Types.GameLogsByTeam>_R)))) -}
2d8324793dbdb79a8c778099a20ae0ac
  $fReadGameLogsByTeam3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Types.GameLogsByTeam -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,C(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (w1 :: Types.GameLogsByTeam -> Text.ParserCombinators.ReadP.P b) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Types.$w$creadPrec1 ww1 @ b w1 }) -}
b00b0f810568622ba76f5b228e24c7f2
  $fReadGameLogsByTeam4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "GameLogsByTeam"#) -}
0d2f0897a90b53af9ee0cbe773ab62f0
  $fReadGameLogsByTeam5 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b1.
       ((GHC.Types.Int, [Types.GameResult])
        -> Text.ParserCombinators.ReadP.P b1)
       -> Text.ParserCombinators.ReadP.P b1
  {- Arity: 2,
     Unfolding: (\ (w2 :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b1
                   (w3 :: (GHC.Types.Int, [Types.GameResult])
                          -> Text.ParserCombinators.ReadP.P b1)[OneShot] ->
                 GHC.Read.$w$creadPrec
                   @ GHC.Types.Int
                   @ [Types.GameResult]
                   GHC.Read.$fReadInt
                   Types.$fReadGameLogsByTeam_$s$fRead[]
                   @ b1
                   w3) -}
2d8324793dbdb79a8c778099a20ae0ac
  $fReadGameLogsByTeam6 ::
    Text.ParserCombinators.ReadP.P [Types.GameLogsByTeam]
  {- Unfolding: (GHC.Read.$wlist
                   @ Types.GameLogsByTeam
                   Types.$fReadGameLogsByTeam2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Types.GameLogsByTeam>_R))
                   @ [Types.GameLogsByTeam]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [Types.GameLogsByTeam])) -}
2d8324793dbdb79a8c778099a20ae0ac
  $fReadGameLogsByTeam_$creadList ::
    Text.ParserCombinators.ReadP.ReadS [Types.GameLogsByTeam]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [Types.GameLogsByTeam]
                   Types.$fReadGameLogsByTeam6) -}
2d8324793dbdb79a8c778099a20ae0ac
  $fReadGameLogsByTeam_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [Types.GameLogsByTeam]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Types.$fReadGameLogsByTeam1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <[Types.GameLogsByTeam]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                               <[Types.GameLogsByTeam]>_R))) -}
2d8324793dbdb79a8c778099a20ae0ac
  $fReadGameLogsByTeam_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec Types.GameLogsByTeam
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Types.$fReadGameLogsByTeam2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <Types.GameLogsByTeam>_R)) -}
2d8324793dbdb79a8c778099a20ae0ac
  $fReadGameLogsByTeam_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS Types.GameLogsByTeam
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ Types.GameLogsByTeam
                   ((GHC.Read.$fReadDouble10
                       @ Types.GameLogsByTeam
                       Types.$fReadGameLogsByTeam3
                         `cast`
                       (Trans
                            (<Text.ParserCombinators.ReadPrec.Prec>_R
                             ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                           <Types.GameLogsByTeam>_R))
                            (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                      <Types.GameLogsByTeam>_R)))
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0] <Types.GameLogsByTeam>_R)
                      @ Types.GameLogsByTeam
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ Types.GameLogsByTeam))) -}
360032094095b96163792028ea0467c9
  $fReadGameLogsByTeam_$s$fRead[] :: GHC.Read.Read [Types.GameResult]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [Types.GameResult]
                  Types.$fReadGameLogsByTeam_$s$fRead[]_$creadsPrec
                  Types.$fReadGameLogsByTeam_$s$fRead[]_$creadList
                  Types.$fReadGameResult_$creadListPrec
                  (GHC.Read.$fRead[]_$creadListPrec
                     @ Types.GameResult
                     Types.$fReadGameResult) -}
2ed0051139306cadc31b8d655490770c
  $fReadGameLogsByTeam_$s$fRead[]_$creadList ::
    Text.ParserCombinators.ReadP.ReadS [[Types.GameResult]]
  {- Arity: 1,
     Unfolding: InlineRule (0, True, False)
                (Text.ParserCombinators.ReadP.run
                   @ [[Types.GameResult]]
                   (GHC.Read.list1
                      @ [Types.GameResult]
                      Types.$fReadGameResult_$creadListPrec
                      GHC.Read.$fRead(,)7
                      @ [[Types.GameResult]]
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ [[Types.GameResult]]))) -}
0275d38fd17a9b9e85e43e2fe43af70d
  $fReadGameLogsByTeam_$s$fRead[]_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS [Types.GameResult]
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ [Types.GameResult]
                   ((Types.$fReadGameResult_$creadListPrec
                       `cast`
                     (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <[Types.GameResult]>_R)
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0] <[Types.GameResult]>_R)
                      @ [Types.GameResult]
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ [Types.GameResult]))) -}
9965cd3fb4a9830c83bfa78bfc630eec
  $fReadGameResult :: GHC.Read.Read Types.GameResult
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Types.GameResult
                  Types.$fReadGameResult_$creadsPrec
                  Types.$fReadGameResult_$creadList
                  Types.$fReadGameResult_$creadPrec
                  Types.$fReadGameResult_$creadListPrec -}
9965cd3fb4a9830c83bfa78bfc630eec
  $fReadGameResult1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([Types.GameResult] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: [Types.GameResult] -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.$wlist
                   @ Types.GameResult
                   Types.$fReadGameResult2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Types.GameResult>_R))
                   @ b
                   eta1) -}
9965cd3fb4a9830c83bfa78bfc630eec
  $fReadGameResult2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP Types.GameResult
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ Types.GameResult
                   Types.$fReadGameResult3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <Types.GameResult>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <Types.GameResult>_R)))) -}
9965cd3fb4a9830c83bfa78bfc630eec
  $fReadGameResult3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Types.GameResult -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,C(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (w1 :: Types.GameResult -> Text.ParserCombinators.ReadP.P b) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Types.$w$creadPrec2 ww1 @ b w1 }) -}
9965cd3fb4a9830c83bfa78bfc630eec
  $fReadGameResult4 ::
    Text.ParserCombinators.ReadP.P [Types.GameResult]
  {- Unfolding: (GHC.Read.$wlist
                   @ Types.GameResult
                   Types.$fReadGameResult2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Types.GameResult>_R))
                   @ [Types.GameResult]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [Types.GameResult])) -}
9965cd3fb4a9830c83bfa78bfc630eec
  $fReadGameResult_$creadList ::
    Text.ParserCombinators.ReadP.ReadS [Types.GameResult]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [Types.GameResult]
                   Types.$fReadGameResult4) -}
9965cd3fb4a9830c83bfa78bfc630eec
  $fReadGameResult_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [Types.GameResult]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Types.$fReadGameResult1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <[Types.GameResult]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                               <[Types.GameResult]>_R))) -}
9965cd3fb4a9830c83bfa78bfc630eec
  $fReadGameResult_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec Types.GameResult
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Types.$fReadGameResult2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <Types.GameResult>_R)) -}
9965cd3fb4a9830c83bfa78bfc630eec
  $fReadGameResult_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS Types.GameResult
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ Types.GameResult
                   ((GHC.Read.$fReadDouble10
                       @ Types.GameResult
                       Types.$fReadGameResult3
                         `cast`
                       (Trans
                            (<Text.ParserCombinators.ReadPrec.Prec>_R
                             ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                           <Types.GameResult>_R))
                            (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                      <Types.GameResult>_R)))
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0] <Types.GameResult>_R)
                      @ Types.GameResult
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ Types.GameResult))) -}
f6c970fdfe1dfab2838262c0307998c8
  $fReadOffense :: GHC.Read.Read Types.Offense
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Types.Offense
                  Types.$fReadOffense_$creadsPrec
                  Types.$fReadOffense_$creadList
                  Types.$fReadOffense_$creadPrec
                  Types.$fReadOffense_$creadListPrec -}
f6c970fdfe1dfab2838262c0307998c8
  $fReadOffense1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([Types.Offense] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: [Types.Offense] -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.$wlist
                   @ Types.Offense
                   Types.$fReadOffense2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Types.Offense>_R))
                   @ b
                   eta1) -}
f6c970fdfe1dfab2838262c0307998c8
  $fReadOffense2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP Types.Offense
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ Types.Offense
                   Types.$fReadOffense3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <Types.Offense>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <Types.Offense>_R)))) -}
f6c970fdfe1dfab2838262c0307998c8
  $fReadOffense3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Types.Offense -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,C(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (w1 :: Types.Offense -> Text.ParserCombinators.ReadP.P b) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Types.$w$creadPrec3 ww1 @ b w1 }) -}
f6c970fdfe1dfab2838262c0307998c8
  $fReadOffense4 :: Text.ParserCombinators.ReadP.P [Types.Offense]
  {- Unfolding: (GHC.Read.$wlist
                   @ Types.Offense
                   Types.$fReadOffense2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Types.Offense>_R))
                   @ [Types.Offense]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [Types.Offense])) -}
f6c970fdfe1dfab2838262c0307998c8
  $fReadOffense_$creadList ::
    Text.ParserCombinators.ReadP.ReadS [Types.Offense]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [Types.Offense]
                   Types.$fReadOffense4) -}
f6c970fdfe1dfab2838262c0307998c8
  $fReadOffense_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [Types.Offense]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Types.$fReadOffense1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <[Types.Offense]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                               <[Types.Offense]>_R))) -}
f6c970fdfe1dfab2838262c0307998c8
  $fReadOffense_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec Types.Offense
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Types.$fReadOffense2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <Types.Offense>_R)) -}
f6c970fdfe1dfab2838262c0307998c8
  $fReadOffense_$creadsPrec ::
    GHC.Types.Int -> Text.ParserCombinators.ReadP.ReadS Types.Offense
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ Types.Offense
                   ((GHC.Read.$fReadDouble10
                       @ Types.Offense
                       Types.$fReadOffense3
                         `cast`
                       (Trans
                            (<Text.ParserCombinators.ReadPrec.Prec>_R
                             ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                           <Types.Offense>_R))
                            (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                      <Types.Offense>_R)))
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0] <Types.Offense>_R)
                      @ Types.Offense
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ Types.Offense))) -}
57bc393b2aaecd16055f7506d52795b9
  $fReadTeamStats :: GHC.Read.Read Types.TeamStats
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Types.TeamStats
                  Types.$fReadTeamStats_$creadsPrec
                  Types.$fReadTeamStats_$creadList
                  Types.$fReadTeamStats_$creadPrec
                  Types.$fReadTeamStats_$creadListPrec -}
57bc393b2aaecd16055f7506d52795b9
  $fReadTeamStats1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([Types.TeamStats] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: [Types.TeamStats] -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.$wlist
                   @ Types.TeamStats
                   Types.$fReadTeamStats2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Types.TeamStats>_R))
                   @ b
                   eta1) -}
57bc393b2aaecd16055f7506d52795b9
  $fReadTeamStats2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP Types.TeamStats
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ Types.TeamStats
                   Types.$fReadTeamStats3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <Types.TeamStats>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <Types.TeamStats>_R)))) -}
57bc393b2aaecd16055f7506d52795b9
  $fReadTeamStats3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Types.TeamStats -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,C(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (w1 :: Types.TeamStats -> Text.ParserCombinators.ReadP.P b) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Types.$w$creadPrec4 ww1 @ b w1 }) -}
57bc393b2aaecd16055f7506d52795b9
  $fReadTeamStats4 ::
    Text.ParserCombinators.ReadP.P [Types.TeamStats]
  {- Unfolding: (GHC.Read.$wlist
                   @ Types.TeamStats
                   Types.$fReadTeamStats2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Types.TeamStats>_R))
                   @ [Types.TeamStats]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [Types.TeamStats])) -}
57bc393b2aaecd16055f7506d52795b9
  $fReadTeamStats_$creadList ::
    Text.ParserCombinators.ReadP.ReadS [Types.TeamStats]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [Types.TeamStats]
                   Types.$fReadTeamStats4) -}
57bc393b2aaecd16055f7506d52795b9
  $fReadTeamStats_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [Types.TeamStats]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Types.$fReadTeamStats1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <[Types.TeamStats]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                               <[Types.TeamStats]>_R))) -}
57bc393b2aaecd16055f7506d52795b9
  $fReadTeamStats_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec Types.TeamStats
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Types.$fReadTeamStats2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <Types.TeamStats>_R)) -}
57bc393b2aaecd16055f7506d52795b9
  $fReadTeamStats_$creadsPrec ::
    GHC.Types.Int -> Text.ParserCombinators.ReadP.ReadS Types.TeamStats
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ Types.TeamStats
                   ((GHC.Read.$fReadDouble10
                       @ Types.TeamStats
                       Types.$fReadTeamStats3
                         `cast`
                       (Trans
                            (<Text.ParserCombinators.ReadPrec.Prec>_R
                             ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                           <Types.TeamStats>_R))
                            (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                      <Types.TeamStats>_R)))
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0] <Types.TeamStats>_R)
                      @ Types.TeamStats
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ Types.TeamStats))) -}
d22d45b904ef4ac038fed1728f0be333
  $fReadWinningTeamStats :: GHC.Read.Read Types.WinningTeamStats
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Types.WinningTeamStats
                  Types.$fReadWinningTeamStats_$creadsPrec
                  Types.$fReadWinningTeamStats_$creadList
                  Types.$fReadWinningTeamStats_$creadPrec
                  Types.$fReadWinningTeamStats_$creadListPrec -}
d22d45b904ef4ac038fed1728f0be333
  $fReadWinningTeamStats1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([Types.WinningTeamStats] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: [Types.WinningTeamStats]
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.$wlist
                   @ Types.WinningTeamStats
                   Types.$fReadWinningTeamStats2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Types.WinningTeamStats>_R))
                   @ b
                   eta1) -}
d22d45b904ef4ac038fed1728f0be333
  $fReadWinningTeamStats2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP Types.WinningTeamStats
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ Types.WinningTeamStats
                   Types.$fReadWinningTeamStats3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <Types.WinningTeamStats>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <Types.WinningTeamStats>_R)))) -}
d22d45b904ef4ac038fed1728f0be333
  $fReadWinningTeamStats3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Types.WinningTeamStats -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,C(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (w1 :: Types.WinningTeamStats
                          -> Text.ParserCombinators.ReadP.P b) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Types.$w$creadPrec5 ww1 @ b w1 }) -}
d22d45b904ef4ac038fed1728f0be333
  $fReadWinningTeamStats4 ::
    Text.ParserCombinators.ReadP.P [Types.WinningTeamStats]
  {- Unfolding: (GHC.Read.$wlist
                   @ Types.WinningTeamStats
                   Types.$fReadWinningTeamStats2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Types.WinningTeamStats>_R))
                   @ [Types.WinningTeamStats]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [Types.WinningTeamStats])) -}
d22d45b904ef4ac038fed1728f0be333
  $fReadWinningTeamStats_$creadList ::
    Text.ParserCombinators.ReadP.ReadS [Types.WinningTeamStats]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [Types.WinningTeamStats]
                   Types.$fReadWinningTeamStats4) -}
d22d45b904ef4ac038fed1728f0be333
  $fReadWinningTeamStats_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [Types.WinningTeamStats]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Types.$fReadWinningTeamStats1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <[Types.WinningTeamStats]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                               <[Types.WinningTeamStats]>_R))) -}
d22d45b904ef4ac038fed1728f0be333
  $fReadWinningTeamStats_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec Types.WinningTeamStats
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Types.$fReadWinningTeamStats2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <Types.WinningTeamStats>_R)) -}
d22d45b904ef4ac038fed1728f0be333
  $fReadWinningTeamStats_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS Types.WinningTeamStats
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ Types.WinningTeamStats
                   ((GHC.Read.$fReadDouble10
                       @ Types.WinningTeamStats
                       Types.$fReadWinningTeamStats3
                         `cast`
                       (Trans
                            (<Text.ParserCombinators.ReadPrec.Prec>_R
                             ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                           <Types.WinningTeamStats>_R))
                            (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                      <Types.WinningTeamStats>_R)))
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0]
                         <Types.WinningTeamStats>_R)
                      @ Types.WinningTeamStats
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ Types.WinningTeamStats))) -}
b51f5ec8fe45da6d5c4e1c522ef1294f
  $fShowDefense :: GHC.Show.Show Types.Defense
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Types.Defense
                  Types.$fShowDefense_$cshowsPrec
                  Types.$fShowDefense_$cshow
                  Types.$fShowDefense_$cshowList -}
b51f5ec8fe45da6d5c4e1c522ef1294f
  $fShowDefense1 :: Types.Defense -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: Types.Defense) ->
                 case w of ww { Types.Defense ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ->
                 Types.$w$cshowsPrec
                   0#
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17 }) -}
b51f5ec8fe45da6d5c4e1c522ef1294f
  $fShowDefense_$cshow :: Types.Defense -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Types.Defense) ->
                 Types.$fShowDefense_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
b51f5ec8fe45da6d5c4e1c522ef1294f
  $fShowDefense_$cshowList :: [Types.Defense] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Types.Defense
                   Types.$fShowDefense1) -}
b51f5ec8fe45da6d5c4e1c522ef1294f
  $fShowDefense_$cshowsPrec ::
    GHC.Types.Int -> Types.Defense -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Types.Defense) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Types.Defense ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ->
                 Types.$w$cshowsPrec
                   ww1
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19 } }) -}
2d8324793dbdb79a8c778099a20ae0ac
  $fShowGameLogsByTeam :: GHC.Show.Show Types.GameLogsByTeam
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Types.GameLogsByTeam
                  Types.$fShowGameLogsByTeam_$cshowsPrec
                  Types.$fShowGameLogsByTeam_$cshow
                  Types.$fShowGameLogsByTeam_$cshowList -}
2d8324793dbdb79a8c778099a20ae0ac
  $fShowGameLogsByTeam1 :: Types.GameLogsByTeam -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: Types.GameLogsByTeam)
                   (w1 :: GHC.Base.String) ->
                 case w of ww { Types.GameLogsByTeam ww1 ->
                 Types.$w$cshowsPrec1 0# ww1 w1 }) -}
5871dd18ab3b3490ffd0668ff0b19024
  $fShowGameLogsByTeam2 ::
    (GHC.Types.Int, [Types.GameResult])
    -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2,
     Unfolding: (\ (w3 :: (GHC.Types.Int, [Types.GameResult]))
                   (w4 :: GHC.Base.String)[OneShot] ->
                 case w3 of ww { (,) ww1 ww2 ->
                 GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows9
                   (case ww1 of ww4 { GHC.Types.I# ww3 ->
                    case GHC.Show.$wshowSignedInt
                           0#
                           ww3
                           (GHC.Types.:
                              @ GHC.Types.Char
                              GHC.Show.shows7
                              (GHC.Show.$fShow(,)_$sgo
                                 (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 w4)
                                 (\ (eta :: GHC.Base.String) ->
                                  GHC.Show.showList__
                                    @ Types.GameResult
                                    Types.$fShowGameLogsByTeam3
                                    ww2
                                    eta)
                                 (GHC.Types.[] @ GHC.Show.ShowS))) of ww5 { (#,#) ww6 ww7 ->
                    GHC.Types.: @ GHC.Types.Char ww6 ww7 } }) }) -}
9965cd3fb4a9830c83bfa78bfc630eec
  $fShowGameLogsByTeam3 :: Types.GameResult -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: Types.GameResult) ->
                 case w of ww { Types.GameResult ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ->
                 Types.$w$cshowsPrec2
                   0#
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27 }) -}
5521414c37c082e51c6696c406b686c9
  $fShowGameLogsByTeam4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "GameLogsByTeam "#) -}
2d8324793dbdb79a8c778099a20ae0ac
  $fShowGameLogsByTeam_$cshow ::
    Types.GameLogsByTeam -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Types.GameLogsByTeam) ->
                 case w of ww { Types.GameLogsByTeam ww1 -> Types.$w$cshow ww1 }) -}
2d8324793dbdb79a8c778099a20ae0ac
  $fShowGameLogsByTeam_$cshowList ::
    [Types.GameLogsByTeam] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Types.GameLogsByTeam
                   Types.$fShowGameLogsByTeam1) -}
2d8324793dbdb79a8c778099a20ae0ac
  $fShowGameLogsByTeam_$cshowsPrec ::
    GHC.Types.Int -> Types.GameLogsByTeam -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Types.GameLogsByTeam)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Types.GameLogsByTeam ww3 ->
                 Types.$w$cshowsPrec1 ww1 ww3 w2 } }) -}
9965cd3fb4a9830c83bfa78bfc630eec
  $fShowGameResult :: GHC.Show.Show Types.GameResult
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Types.GameResult
                  Types.$fShowGameResult_$cshowsPrec
                  Types.$fShowGameResult_$cshow
                  Types.$fShowGameResult_$cshowList -}
9965cd3fb4a9830c83bfa78bfc630eec
  $fShowGameResult_$cshow :: Types.GameResult -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(U(U),U,U,U,U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Types.GameResult) ->
                 Types.$fShowGameResult_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
9965cd3fb4a9830c83bfa78bfc630eec
  $fShowGameResult_$cshowList :: [Types.GameResult] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Types.GameResult
                   Types.$fShowGameLogsByTeam3) -}
9965cd3fb4a9830c83bfa78bfc630eec
  $fShowGameResult_$cshowsPrec ::
    GHC.Types.Int -> Types.GameResult -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(U(U),U,U,U,U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Types.GameResult) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Types.GameResult ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ->
                 Types.$w$cshowsPrec2
                   ww1
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29 } }) -}
f6c970fdfe1dfab2838262c0307998c8
  $fShowOffense :: GHC.Show.Show Types.Offense
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Types.Offense
                  Types.$fShowOffense_$cshowsPrec
                  Types.$fShowOffense_$cshow
                  Types.$fShowOffense_$cshowList -}
f6c970fdfe1dfab2838262c0307998c8
  $fShowOffense1 :: Types.Offense -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: Types.Offense) ->
                 case w of ww { Types.Offense ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ->
                 Types.$w$cshowsPrec3
                   0#
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17 }) -}
f6c970fdfe1dfab2838262c0307998c8
  $fShowOffense_$cshow :: Types.Offense -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Types.Offense) ->
                 Types.$fShowOffense_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
f6c970fdfe1dfab2838262c0307998c8
  $fShowOffense_$cshowList :: [Types.Offense] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Types.Offense
                   Types.$fShowOffense1) -}
f6c970fdfe1dfab2838262c0307998c8
  $fShowOffense_$cshowsPrec ::
    GHC.Types.Int -> Types.Offense -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Types.Offense) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Types.Offense ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ->
                 Types.$w$cshowsPrec3
                   ww1
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19 } }) -}
57bc393b2aaecd16055f7506d52795b9
  $fShowTeamStats :: GHC.Show.Show Types.TeamStats
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Types.TeamStats
                  Types.$fShowTeamStats_$cshowsPrec
                  Types.$fShowTeamStats_$cshow
                  Types.$fShowTeamStats_$cshowList -}
57bc393b2aaecd16055f7506d52795b9
  $fShowTeamStats1 :: Types.TeamStats -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: Types.TeamStats) ->
                 case w of ww { Types.TeamStats ww1 ww2 ->
                 Types.$w$cshowsPrec4 0# ww1 ww2 }) -}
3f92c39811b69e5156b2a6219e93a33e
  $fShowTeamStats2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "}"#) -}
9d3e0e90da9e61deb64a8e89cd697490
  $fShowTeamStats3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "totalDefense = "#) -}
89230a6be1a06d67be9c3e7035004bbd
  $fShowTeamStats4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ", "#) -}
e7848872755765d14ff47102a0c0669c
  $fShowTeamStats5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "totalOffense = "#) -}
4b7b331f00d929f40664a4e2c6ac2c94
  $fShowTeamStats6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TeamStats {"#) -}
57bc393b2aaecd16055f7506d52795b9
  $fShowTeamStats_$cshow :: Types.TeamStats -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U)),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U)))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Types.TeamStats) ->
                 Types.$fShowTeamStats_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
57bc393b2aaecd16055f7506d52795b9
  $fShowTeamStats_$cshowList :: [Types.TeamStats] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Types.TeamStats
                   Types.$fShowTeamStats1) -}
57bc393b2aaecd16055f7506d52795b9
  $fShowTeamStats_$cshowsPrec ::
    GHC.Types.Int -> Types.TeamStats -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U)),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U)))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Types.TeamStats) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Types.TeamStats ww3 ww4 ->
                 Types.$w$cshowsPrec4 ww1 ww3 ww4 } }) -}
d22d45b904ef4ac038fed1728f0be333
  $fShowWinningTeamStats :: GHC.Show.Show Types.WinningTeamStats
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Types.WinningTeamStats
                  Types.$fShowWinningTeamStats_$cshowsPrec
                  Types.$fShowWinningTeamStats_$cshow
                  Types.$fShowWinningTeamStats_$cshowList -}
d22d45b904ef4ac038fed1728f0be333
  $fShowWinningTeamStats1 :: Types.WinningTeamStats -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: Types.WinningTeamStats) ->
                 case w of ww { Types.WinningTeamStats ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ->
                 Types.$w$cshowsPrec5
                   0#
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17 }) -}
d22d45b904ef4ac038fed1728f0be333
  $fShowWinningTeamStats_$cshow ::
    Types.WinningTeamStats -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),U,U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Types.WinningTeamStats) ->
                 Types.$fShowWinningTeamStats_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
d22d45b904ef4ac038fed1728f0be333
  $fShowWinningTeamStats_$cshowList ::
    [Types.WinningTeamStats] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Types.WinningTeamStats
                   Types.$fShowWinningTeamStats1) -}
d22d45b904ef4ac038fed1728f0be333
  $fShowWinningTeamStats_$cshowsPrec ::
    GHC.Types.Int -> Types.WinningTeamStats -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Types.WinningTeamStats) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Types.WinningTeamStats ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ->
                 Types.$w$cshowsPrec5
                   ww1
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19 } }) -}
a7992e496669f377228f972bd1cf9daa
  $tc'Defense :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5037913215211976457##
                   6865748448464652364##
                   Types.$trModule
                   Types.$tc'Defense1) -}
6a7e1733055e64d797c7fdf4b39020a2
  $tc'Defense1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Defense"#) -}
1426ac5c8f9bc571951f7d99cfb985ab
  $tc'GameLogsByTeam :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17833247225982233875##
                   5057466362891357240##
                   Types.$trModule
                   Types.$tc'GameLogsByTeam1) -}
a9117bcb1a8a95de290937df8ecd37ce
  $tc'GameLogsByTeam1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GameLogsByTeam"#) -}
1f56f26b6239fe22b6804ad4b6e44dd4
  $tc'GameResult :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17283345345193043313##
                   8340654366874614393##
                   Types.$trModule
                   Types.$tc'GameResult1) -}
39936f06f4328b11ada3211cd169f38a
  $tc'GameResult1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GameResult"#) -}
27a7b6c404beade09ca00b2cb83f904f
  $tc'Offense :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4668026707489431490##
                   14379663753779550578##
                   Types.$trModule
                   Types.$tc'Offense1) -}
ad7043d2dd63144a18d16344511fe070
  $tc'Offense1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Offense"#) -}
d1d51d4d58fc99ce270364ffd0804109
  $tc'TeamStats :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3588681428308389284##
                   13845978627626311##
                   Types.$trModule
                   Types.$tc'TeamStats1) -}
e354fd3be976b5fd90a659bc82ae8db2
  $tc'TeamStats1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'TeamStats"#) -}
d5d4eaa2a1b77b2d27badf448e0b2386
  $tc'WinningTeamStats :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7776426982484843492##
                   2912225273967784882##
                   Types.$trModule
                   Types.$tc'WinningTeamStats1) -}
c20aaaf4628df4e61da74757921df220
  $tc'WinningTeamStats1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'WinningTeamStats"#) -}
248e102757729e0934b43efacc457b75
  $tcDefense :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3050217656770516932##
                   17755045245925814099##
                   Types.$trModule
                   Types.$tcDefense1) -}
b125120771a4188039d1c7f4090c0530
  $tcDefense1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Defense"#) -}
67b75e1052eb6609e362e624af15b763
  $tcGameLogsByTeam :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9363937016685718828##
                   12606715963410231171##
                   Types.$trModule
                   Types.$tcGameLogsByTeam1) -}
d4bc9b6152d12939fd16e7093c53ef8c
  $tcGameLogsByTeam1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "GameLogsByTeam"#) -}
798031c2dd89ed4894b5ef202c8dd393
  $tcGameResult :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9885841723666531127##
                   3507623935163782705##
                   Types.$trModule
                   Types.$tcGameResult1) -}
a1124aae1545511bfbfdac1fcb23040a
  $tcGameResult1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "GameResult"#) -}
a126db15b997ef14bd003b4ef5f80cc4
  $tcOffense :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   631304059114344540##
                   16068546086391108251##
                   Types.$trModule
                   Types.$tcOffense1) -}
a5b0ecab61cc9d03a8f2ef1adb122563
  $tcOffense1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Offense"#) -}
121f76ad6a5108bb83397cdf09fa0e64
  $tcTeamStats :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3848063912788467502##
                   4774863856270717470##
                   Types.$trModule
                   Types.$tcTeamStats1) -}
3505c4f08b97ab0bada7f06e0b552643
  $tcTeamStats1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "TeamStats"#) -}
c0ec1bc942cae10e3bb91211db22befd
  $tcWinningTeamStats :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13767791906749145700##
                   5898335423831508079##
                   Types.$trModule
                   Types.$tcWinningTeamStats1) -}
32e203244aa9cafdaff4f626d4b103bd
  $tcWinningTeamStats1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "WinningTeamStats"#) -}
1a5292c41cfb76ffc12733c6e453f427
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Types.$trModule2 Types.$trModule1) -}
ba03922dd37c9f7d4792154d65ea10bd
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Types"#) -}
353d80ee02cc3bb30df29a319dceae2a
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
37d4456b99432fa32598a707e8951f32
  $w$c/= ::
    GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> Types.Defense
    -> GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> Types.Defense
    -> GHC.Types.Bool
  {- Arity: 36, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Double#)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: GHC.Types.Double)
                   (ww3 :: GHC.Types.Double)
                   (ww4 :: GHC.Types.Double)
                   (ww5 :: GHC.Types.Double)
                   (ww6 :: GHC.Types.Double)
                   (ww7 :: GHC.Types.Double)
                   (ww8 :: GHC.Types.Double)
                   (ww9 :: GHC.Types.Double)
                   (ww10 :: GHC.Types.Double)
                   (ww11 :: GHC.Types.Double)
                   (ww12 :: GHC.Types.Double)
                   (ww13 :: GHC.Types.Double)
                   (ww14 :: GHC.Types.Double)
                   (ww15 :: GHC.Types.Double)
                   (ww16 :: GHC.Types.Double)
                   (ww17 :: Types.Defense)
                   (ww18 :: GHC.Prim.Double#)
                   (ww19 :: GHC.Types.Double)
                   (ww20 :: GHC.Types.Double)
                   (ww21 :: GHC.Types.Double)
                   (ww22 :: GHC.Types.Double)
                   (ww23 :: GHC.Types.Double)
                   (ww24 :: GHC.Types.Double)
                   (ww25 :: GHC.Types.Double)
                   (ww26 :: GHC.Types.Double)
                   (ww27 :: GHC.Types.Double)
                   (ww28 :: GHC.Types.Double)
                   (ww29 :: GHC.Types.Double)
                   (ww30 :: GHC.Types.Double)
                   (ww31 :: GHC.Types.Double)
                   (ww32 :: GHC.Types.Double)
                   (ww33 :: GHC.Types.Double)
                   (ww34 :: GHC.Types.Double)
                   (ww35 :: Types.Defense) ->
                 case Types.$w$c==2
                        ww
                        ww1
                        ww2
                        ww3
                        ww4
                        ww5
                        ww6
                        ww7
                        ww8
                        ww9
                        ww10
                        ww11
                        ww12
                        ww13
                        ww14
                        ww15
                        ww16
                        ww18
                        ww19
                        ww20
                        ww21
                        ww22
                        ww23
                        ww24
                        ww25
                        ww26
                        ww27
                        ww28
                        ww29
                        ww30
                        ww31
                        ww32
                        ww33
                        ww34 of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True
                   -> case ww17 of ww36 { Types.Defense ww37 ww38 ww39 ww40 ww41 ww42 ww43 ww44 ww45 ww46 ww47 ww48 ww49 ww50 ww51 ww52 ww53 ->
                      case ww37 of ww54 { GHC.Types.D# ww55 ->
                      case ww35 of ww56 { Types.Defense ww57 ww58 ww59 ww60 ww61 ww62 ww63 ww64 ww65 ww66 ww67 ww68 ww69 ww70 ww71 ww72 ww73 ->
                      case ww57 of ww74 { GHC.Types.D# ww75 ->
                      case Types.$w$c==
                             ww55
                             ww38
                             ww39
                             ww40
                             ww41
                             ww42
                             ww43
                             ww44
                             ww45
                             ww46
                             ww47
                             ww48
                             ww49
                             ww50
                             ww51
                             ww52
                             ww53
                             ww75
                             ww58
                             ww59
                             ww60
                             ww61
                             ww62
                             ww63
                             ww64
                             ww65
                             ww66
                             ww67
                             ww68
                             ww69
                             ww70
                             ww71
                             ww72
                             ww73 of wild1 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True -> GHC.Types.False } } } } } }) -}
575ae7fe99e5410ca67cf95889de09d0
  $w$c< ::
    GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Bool
  {- Arity: 34, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Double#)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: GHC.Types.Double)
                   (ww3 :: GHC.Types.Double)
                   (ww4 :: GHC.Types.Double)
                   (ww5 :: GHC.Types.Double)
                   (ww6 :: GHC.Types.Double)
                   (ww7 :: GHC.Types.Double)
                   (ww8 :: GHC.Types.Double)
                   (ww9 :: GHC.Types.Double)
                   (ww10 :: GHC.Types.Double)
                   (ww11 :: GHC.Types.Double)
                   (ww12 :: GHC.Types.Double)
                   (ww13 :: GHC.Types.Double)
                   (ww14 :: GHC.Types.Double)
                   (ww15 :: GHC.Types.Double)
                   (ww16 :: GHC.Types.Double)
                   (ww17 :: GHC.Prim.Double#)
                   (ww18 :: GHC.Types.Double)
                   (ww19 :: GHC.Types.Double)
                   (ww20 :: GHC.Types.Double)
                   (ww21 :: GHC.Types.Double)
                   (ww22 :: GHC.Types.Double)
                   (ww23 :: GHC.Types.Double)
                   (ww24 :: GHC.Types.Double)
                   (ww25 :: GHC.Types.Double)
                   (ww26 :: GHC.Types.Double)
                   (ww27 :: GHC.Types.Double)
                   (ww28 :: GHC.Types.Double)
                   (ww29 :: GHC.Types.Double)
                   (ww30 :: GHC.Types.Double)
                   (ww31 :: GHC.Types.Double)
                   (ww32 :: GHC.Types.Double)
                   (ww33 :: GHC.Types.Double) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<## ww ww17) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==## ww ww17) of wild3 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case ww1 of wild { GHC.Types.D# x ->
                           case ww18 of wild1 { GHC.Types.D# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<## x y) of wild4 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==## x y) of wild5 {
                                  GHC.Types.False -> GHC.Types.False
                                  GHC.Types.True
                                  -> case ww2 of wild6 { GHC.Types.D# x1 ->
                                     case ww19 of wild7 { GHC.Types.D# y1 ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.<## x1 y1) of wild8 {
                                       GHC.Types.False
                                       -> case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 (GHC.Prim.==## x1 y1) of wild9 {
                                            GHC.Types.False -> GHC.Types.False
                                            GHC.Types.True
                                            -> case ww3 of wild10 { GHC.Types.D# x2 ->
                                               case ww20 of wild11 { GHC.Types.D# y2 ->
                                               case GHC.Prim.tagToEnum#
                                                      @ GHC.Types.Bool
                                                      (GHC.Prim.<## x2 y2) of wild12 {
                                                 GHC.Types.False
                                                 -> case GHC.Prim.tagToEnum#
                                                           @ GHC.Types.Bool
                                                           (GHC.Prim.==## x2 y2) of wild13 {
                                                      GHC.Types.False -> GHC.Types.False
                                                      GHC.Types.True
                                                      -> case ww4 of wild14 { GHC.Types.D# x3 ->
                                                         case ww21 of wild15 { GHC.Types.D# y3 ->
                                                         case GHC.Prim.tagToEnum#
                                                                @ GHC.Types.Bool
                                                                (GHC.Prim.<## x3 y3) of wild16 {
                                                           GHC.Types.False
                                                           -> case GHC.Prim.tagToEnum#
                                                                     @ GHC.Types.Bool
                                                                     (GHC.Prim.==##
                                                                        x3
                                                                        y3) of wild17 {
                                                                GHC.Types.False -> GHC.Types.False
                                                                GHC.Types.True
                                                                -> case ww5 of wild18 { GHC.Types.D# x4 ->
                                                                   case ww22 of wild19 { GHC.Types.D# y4 ->
                                                                   case GHC.Prim.tagToEnum#
                                                                          @ GHC.Types.Bool
                                                                          (GHC.Prim.<##
                                                                             x4
                                                                             y4) of wild20 {
                                                                     GHC.Types.False
                                                                     -> case GHC.Prim.tagToEnum#
                                                                               @ GHC.Types.Bool
                                                                               (GHC.Prim.==##
                                                                                  x4
                                                                                  y4) of wild21 {
                                                                          GHC.Types.False
                                                                          -> GHC.Types.False
                                                                          GHC.Types.True
                                                                          -> case ww6 of wild22 { GHC.Types.D# x5 ->
                                                                             case ww23 of wild23 { GHC.Types.D# y5 ->
                                                                             case GHC.Prim.tagToEnum#
                                                                                    @ GHC.Types.Bool
                                                                                    (GHC.Prim.<##
                                                                                       x5
                                                                                       y5) of wild24 {
                                                                               GHC.Types.False
                                                                               -> case GHC.Prim.tagToEnum#
                                                                                         @ GHC.Types.Bool
                                                                                         (GHC.Prim.==##
                                                                                            x5
                                                                                            y5) of wild25 {
                                                                                    GHC.Types.False
                                                                                    -> GHC.Types.False
                                                                                    GHC.Types.True
                                                                                    -> case ww7 of wild26 { GHC.Types.D# x6 ->
                                                                                       case ww24 of wild27 { GHC.Types.D# y6 ->
                                                                                       case GHC.Prim.tagToEnum#
                                                                                              @ GHC.Types.Bool
                                                                                              (GHC.Prim.<##
                                                                                                 x6
                                                                                                 y6) of wild28 {
                                                                                         GHC.Types.False
                                                                                         -> case GHC.Prim.tagToEnum#
                                                                                                   @ GHC.Types.Bool
                                                                                                   (GHC.Prim.==##
                                                                                                      x6
                                                                                                      y6) of wild29 {
                                                                                              GHC.Types.False
                                                                                              -> GHC.Types.False
                                                                                              GHC.Types.True
                                                                                              -> case ww8 of wild30 { GHC.Types.D# x7 ->
                                                                                                 case ww25 of wild31 { GHC.Types.D# y7 ->
                                                                                                 case GHC.Prim.tagToEnum#
                                                                                                        @ GHC.Types.Bool
                                                                                                        (GHC.Prim.<##
                                                                                                           x7
                                                                                                           y7) of wild32 {
                                                                                                   GHC.Types.False
                                                                                                   -> case GHC.Prim.tagToEnum#
                                                                                                             @ GHC.Types.Bool
                                                                                                             (GHC.Prim.==##
                                                                                                                x7
                                                                                                                y7) of wild33 {
                                                                                                        GHC.Types.False
                                                                                                        -> GHC.Types.False
                                                                                                        GHC.Types.True
                                                                                                        -> case ww9 of wild34 { GHC.Types.D# x8 ->
                                                                                                           case ww26 of wild35 { GHC.Types.D# y8 ->
                                                                                                           case GHC.Prim.tagToEnum#
                                                                                                                  @ GHC.Types.Bool
                                                                                                                  (GHC.Prim.<##
                                                                                                                     x8
                                                                                                                     y8) of wild36 {
                                                                                                             GHC.Types.False
                                                                                                             -> case GHC.Prim.tagToEnum#
                                                                                                                       @ GHC.Types.Bool
                                                                                                                       (GHC.Prim.==##
                                                                                                                          x8
                                                                                                                          y8) of wild37 {
                                                                                                                  GHC.Types.False
                                                                                                                  -> GHC.Types.False
                                                                                                                  GHC.Types.True
                                                                                                                  -> case ww10 of wild38 { GHC.Types.D# x9 ->
                                                                                                                     case ww27 of wild39 { GHC.Types.D# y9 ->
                                                                                                                     case GHC.Prim.tagToEnum#
                                                                                                                            @ GHC.Types.Bool
                                                                                                                            (GHC.Prim.<##
                                                                                                                               x9
                                                                                                                               y9) of wild40 {
                                                                                                                       GHC.Types.False
                                                                                                                       -> case GHC.Prim.tagToEnum#
                                                                                                                                 @ GHC.Types.Bool
                                                                                                                                 (GHC.Prim.==##
                                                                                                                                    x9
                                                                                                                                    y9) of wild41 {
                                                                                                                            GHC.Types.False
                                                                                                                            -> GHC.Types.False
                                                                                                                            GHC.Types.True
                                                                                                                            -> case ww11 of wild42 { GHC.Types.D# x10 ->
                                                                                                                               case ww28 of wild43 { GHC.Types.D# y10 ->
                                                                                                                               case GHC.Prim.tagToEnum#
                                                                                                                                      @ GHC.Types.Bool
                                                                                                                                      (GHC.Prim.<##
                                                                                                                                         x10
                                                                                                                                         y10) of wild44 {
                                                                                                                                 GHC.Types.False
                                                                                                                                 -> case GHC.Prim.tagToEnum#
                                                                                                                                           @ GHC.Types.Bool
                                                                                                                                           (GHC.Prim.==##
                                                                                                                                              x10
                                                                                                                                              y10) of wild45 {
                                                                                                                                      GHC.Types.False
                                                                                                                                      -> GHC.Types.False
                                                                                                                                      GHC.Types.True
                                                                                                                                      -> case ww12 of wild46 { GHC.Types.D# x11 ->
                                                                                                                                         case ww29 of wild47 { GHC.Types.D# y11 ->
                                                                                                                                         case GHC.Prim.tagToEnum#
                                                                                                                                                @ GHC.Types.Bool
                                                                                                                                                (GHC.Prim.<##
                                                                                                                                                   x11
                                                                                                                                                   y11) of wild48 {
                                                                                                                                           GHC.Types.False
                                                                                                                                           -> case GHC.Prim.tagToEnum#
                                                                                                                                                     @ GHC.Types.Bool
                                                                                                                                                     (GHC.Prim.==##
                                                                                                                                                        x11
                                                                                                                                                        y11) of wild49 {
                                                                                                                                                GHC.Types.False
                                                                                                                                                -> GHC.Types.False
                                                                                                                                                GHC.Types.True
                                                                                                                                                -> case ww13 of wild50 { GHC.Types.D# x12 ->
                                                                                                                                                   case ww30 of wild51 { GHC.Types.D# y12 ->
                                                                                                                                                   case GHC.Prim.tagToEnum#
                                                                                                                                                          @ GHC.Types.Bool
                                                                                                                                                          (GHC.Prim.<##
                                                                                                                                                             x12
                                                                                                                                                             y12) of wild52 {
                                                                                                                                                     GHC.Types.False
                                                                                                                                                     -> case GHC.Prim.tagToEnum#
                                                                                                                                                               @ GHC.Types.Bool
                                                                                                                                                               (GHC.Prim.==##
                                                                                                                                                                  x12
                                                                                                                                                                  y12) of wild53 {
                                                                                                                                                          GHC.Types.False
                                                                                                                                                          -> GHC.Types.False
                                                                                                                                                          GHC.Types.True
                                                                                                                                                          -> case ww14 of wild54 { GHC.Types.D# x13 ->
                                                                                                                                                             case ww31 of wild55 { GHC.Types.D# y13 ->
                                                                                                                                                             case GHC.Prim.tagToEnum#
                                                                                                                                                                    @ GHC.Types.Bool
                                                                                                                                                                    (GHC.Prim.<##
                                                                                                                                                                       x13
                                                                                                                                                                       y13) of wild56 {
                                                                                                                                                               GHC.Types.False
                                                                                                                                                               -> case GHC.Prim.tagToEnum#
                                                                                                                                                                         @ GHC.Types.Bool
                                                                                                                                                                         (GHC.Prim.==##
                                                                                                                                                                            x13
                                                                                                                                                                            y13) of wild57 {
                                                                                                                                                                    GHC.Types.False
                                                                                                                                                                    -> GHC.Types.False
                                                                                                                                                                    GHC.Types.True
                                                                                                                                                                    -> case ww15 of wild58 { GHC.Types.D# x14 ->
                                                                                                                                                                       case ww32 of wild59 { GHC.Types.D# y14 ->
                                                                                                                                                                       case GHC.Prim.tagToEnum#
                                                                                                                                                                              @ GHC.Types.Bool
                                                                                                                                                                              (GHC.Prim.<##
                                                                                                                                                                                 x14
                                                                                                                                                                                 y14) of wild60 {
                                                                                                                                                                         GHC.Types.False
                                                                                                                                                                         -> case GHC.Prim.tagToEnum#
                                                                                                                                                                                   @ GHC.Types.Bool
                                                                                                                                                                                   (GHC.Prim.==##
                                                                                                                                                                                      x14
                                                                                                                                                                                      y14) of wild61 {
                                                                                                                                                                              GHC.Types.False
                                                                                                                                                                              -> GHC.Types.False
                                                                                                                                                                              GHC.Types.True
                                                                                                                                                                              -> GHC.Classes.$fOrdDouble_$c<
                                                                                                                                                                                   ww16
                                                                                                                                                                                   ww33 }
                                                                                                                                                                         GHC.Types.True
                                                                                                                                                                         -> GHC.Types.True } } } }
                                                                                                                                                               GHC.Types.True
                                                                                                                                                               -> GHC.Types.True } } } }
                                                                                                                                                     GHC.Types.True
                                                                                                                                                     -> GHC.Types.True } } } }
                                                                                                                                           GHC.Types.True
                                                                                                                                           -> GHC.Types.True } } } }
                                                                                                                                 GHC.Types.True
                                                                                                                                 -> GHC.Types.True } } } }
                                                                                                                       GHC.Types.True
                                                                                                                       -> GHC.Types.True } } } }
                                                                                                             GHC.Types.True
                                                                                                             -> GHC.Types.True } } } }
                                                                                                   GHC.Types.True
                                                                                                   -> GHC.Types.True } } } }
                                                                                         GHC.Types.True
                                                                                         -> GHC.Types.True } } } }
                                                                               GHC.Types.True
                                                                               -> GHC.Types.True } } } }
                                                                     GHC.Types.True
                                                                     -> GHC.Types.True } } } }
                                                           GHC.Types.True -> GHC.Types.True } } } }
                                                 GHC.Types.True -> GHC.Types.True } } } }
                                       GHC.Types.True -> GHC.Types.True } } } }
                             GHC.Types.True -> GHC.Types.True } } } }
                   GHC.Types.True -> GHC.Types.True }) -}
dd9ee7906175df225163f584c777b924
  $w$c<1 ::
    GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Char
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Float
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Float
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Float
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Char
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Float
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Float
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Float
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Bool
  {- Arity: 54, HasNoCafRefs,
     Strictness: <S,U><L,1*U><L,1*U><L,1*U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><S,U><L,1*U><L,1*U><L,1*U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0] -}
eabde280ef81f83d8cf0006c4e0be428
  $w$c<2 ::
    GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Bool
  {- Arity: 34, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Double#)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: GHC.Types.Double)
                   (ww3 :: GHC.Types.Double)
                   (ww4 :: GHC.Types.Double)
                   (ww5 :: GHC.Types.Double)
                   (ww6 :: GHC.Types.Double)
                   (ww7 :: GHC.Types.Double)
                   (ww8 :: GHC.Types.Double)
                   (ww9 :: GHC.Types.Double)
                   (ww10 :: GHC.Types.Double)
                   (ww11 :: GHC.Types.Double)
                   (ww12 :: GHC.Types.Double)
                   (ww13 :: GHC.Types.Double)
                   (ww14 :: GHC.Types.Double)
                   (ww15 :: GHC.Types.Double)
                   (ww16 :: GHC.Types.Double)
                   (ww17 :: GHC.Prim.Double#)
                   (ww18 :: GHC.Types.Double)
                   (ww19 :: GHC.Types.Double)
                   (ww20 :: GHC.Types.Double)
                   (ww21 :: GHC.Types.Double)
                   (ww22 :: GHC.Types.Double)
                   (ww23 :: GHC.Types.Double)
                   (ww24 :: GHC.Types.Double)
                   (ww25 :: GHC.Types.Double)
                   (ww26 :: GHC.Types.Double)
                   (ww27 :: GHC.Types.Double)
                   (ww28 :: GHC.Types.Double)
                   (ww29 :: GHC.Types.Double)
                   (ww30 :: GHC.Types.Double)
                   (ww31 :: GHC.Types.Double)
                   (ww32 :: GHC.Types.Double)
                   (ww33 :: GHC.Types.Double) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<## ww ww17) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==## ww ww17) of wild3 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case ww1 of wild { GHC.Types.D# x ->
                           case ww18 of wild1 { GHC.Types.D# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<## x y) of wild4 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==## x y) of wild5 {
                                  GHC.Types.False -> GHC.Types.False
                                  GHC.Types.True
                                  -> case ww2 of wild6 { GHC.Types.D# x1 ->
                                     case ww19 of wild7 { GHC.Types.D# y1 ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.<## x1 y1) of wild8 {
                                       GHC.Types.False
                                       -> case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 (GHC.Prim.==## x1 y1) of wild9 {
                                            GHC.Types.False -> GHC.Types.False
                                            GHC.Types.True
                                            -> case ww3 of wild10 { GHC.Types.D# x2 ->
                                               case ww20 of wild11 { GHC.Types.D# y2 ->
                                               case GHC.Prim.tagToEnum#
                                                      @ GHC.Types.Bool
                                                      (GHC.Prim.<## x2 y2) of wild12 {
                                                 GHC.Types.False
                                                 -> case GHC.Prim.tagToEnum#
                                                           @ GHC.Types.Bool
                                                           (GHC.Prim.==## x2 y2) of wild13 {
                                                      GHC.Types.False -> GHC.Types.False
                                                      GHC.Types.True
                                                      -> case ww4 of wild14 { GHC.Types.D# x3 ->
                                                         case ww21 of wild15 { GHC.Types.D# y3 ->
                                                         case GHC.Prim.tagToEnum#
                                                                @ GHC.Types.Bool
                                                                (GHC.Prim.<## x3 y3) of wild16 {
                                                           GHC.Types.False
                                                           -> case GHC.Prim.tagToEnum#
                                                                     @ GHC.Types.Bool
                                                                     (GHC.Prim.==##
                                                                        x3
                                                                        y3) of wild17 {
                                                                GHC.Types.False -> GHC.Types.False
                                                                GHC.Types.True
                                                                -> case ww5 of wild18 { GHC.Types.D# x4 ->
                                                                   case ww22 of wild19 { GHC.Types.D# y4 ->
                                                                   case GHC.Prim.tagToEnum#
                                                                          @ GHC.Types.Bool
                                                                          (GHC.Prim.<##
                                                                             x4
                                                                             y4) of wild20 {
                                                                     GHC.Types.False
                                                                     -> case GHC.Prim.tagToEnum#
                                                                               @ GHC.Types.Bool
                                                                               (GHC.Prim.==##
                                                                                  x4
                                                                                  y4) of wild21 {
                                                                          GHC.Types.False
                                                                          -> GHC.Types.False
                                                                          GHC.Types.True
                                                                          -> case ww6 of wild22 { GHC.Types.D# x5 ->
                                                                             case ww23 of wild23 { GHC.Types.D# y5 ->
                                                                             case GHC.Prim.tagToEnum#
                                                                                    @ GHC.Types.Bool
                                                                                    (GHC.Prim.<##
                                                                                       x5
                                                                                       y5) of wild24 {
                                                                               GHC.Types.False
                                                                               -> case GHC.Prim.tagToEnum#
                                                                                         @ GHC.Types.Bool
                                                                                         (GHC.Prim.==##
                                                                                            x5
                                                                                            y5) of wild25 {
                                                                                    GHC.Types.False
                                                                                    -> GHC.Types.False
                                                                                    GHC.Types.True
                                                                                    -> case ww7 of wild26 { GHC.Types.D# x6 ->
                                                                                       case ww24 of wild27 { GHC.Types.D# y6 ->
                                                                                       case GHC.Prim.tagToEnum#
                                                                                              @ GHC.Types.Bool
                                                                                              (GHC.Prim.<##
                                                                                                 x6
                                                                                                 y6) of wild28 {
                                                                                         GHC.Types.False
                                                                                         -> case GHC.Prim.tagToEnum#
                                                                                                   @ GHC.Types.Bool
                                                                                                   (GHC.Prim.==##
                                                                                                      x6
                                                                                                      y6) of wild29 {
                                                                                              GHC.Types.False
                                                                                              -> GHC.Types.False
                                                                                              GHC.Types.True
                                                                                              -> case ww8 of wild30 { GHC.Types.D# x7 ->
                                                                                                 case ww25 of wild31 { GHC.Types.D# y7 ->
                                                                                                 case GHC.Prim.tagToEnum#
                                                                                                        @ GHC.Types.Bool
                                                                                                        (GHC.Prim.<##
                                                                                                           x7
                                                                                                           y7) of wild32 {
                                                                                                   GHC.Types.False
                                                                                                   -> case GHC.Prim.tagToEnum#
                                                                                                             @ GHC.Types.Bool
                                                                                                             (GHC.Prim.==##
                                                                                                                x7
                                                                                                                y7) of wild33 {
                                                                                                        GHC.Types.False
                                                                                                        -> GHC.Types.False
                                                                                                        GHC.Types.True
                                                                                                        -> case ww9 of wild34 { GHC.Types.D# x8 ->
                                                                                                           case ww26 of wild35 { GHC.Types.D# y8 ->
                                                                                                           case GHC.Prim.tagToEnum#
                                                                                                                  @ GHC.Types.Bool
                                                                                                                  (GHC.Prim.<##
                                                                                                                     x8
                                                                                                                     y8) of wild36 {
                                                                                                             GHC.Types.False
                                                                                                             -> case GHC.Prim.tagToEnum#
                                                                                                                       @ GHC.Types.Bool
                                                                                                                       (GHC.Prim.==##
                                                                                                                          x8
                                                                                                                          y8) of wild37 {
                                                                                                                  GHC.Types.False
                                                                                                                  -> GHC.Types.False
                                                                                                                  GHC.Types.True
                                                                                                                  -> case ww10 of wild38 { GHC.Types.D# x9 ->
                                                                                                                     case ww27 of wild39 { GHC.Types.D# y9 ->
                                                                                                                     case GHC.Prim.tagToEnum#
                                                                                                                            @ GHC.Types.Bool
                                                                                                                            (GHC.Prim.<##
                                                                                                                               x9
                                                                                                                               y9) of wild40 {
                                                                                                                       GHC.Types.False
                                                                                                                       -> case GHC.Prim.tagToEnum#
                                                                                                                                 @ GHC.Types.Bool
                                                                                                                                 (GHC.Prim.==##
                                                                                                                                    x9
                                                                                                                                    y9) of wild41 {
                                                                                                                            GHC.Types.False
                                                                                                                            -> GHC.Types.False
                                                                                                                            GHC.Types.True
                                                                                                                            -> case ww11 of wild42 { GHC.Types.D# x10 ->
                                                                                                                               case ww28 of wild43 { GHC.Types.D# y10 ->
                                                                                                                               case GHC.Prim.tagToEnum#
                                                                                                                                      @ GHC.Types.Bool
                                                                                                                                      (GHC.Prim.<##
                                                                                                                                         x10
                                                                                                                                         y10) of wild44 {
                                                                                                                                 GHC.Types.False
                                                                                                                                 -> case GHC.Prim.tagToEnum#
                                                                                                                                           @ GHC.Types.Bool
                                                                                                                                           (GHC.Prim.==##
                                                                                                                                              x10
                                                                                                                                              y10) of wild45 {
                                                                                                                                      GHC.Types.False
                                                                                                                                      -> GHC.Types.False
                                                                                                                                      GHC.Types.True
                                                                                                                                      -> case ww12 of wild46 { GHC.Types.D# x11 ->
                                                                                                                                         case ww29 of wild47 { GHC.Types.D# y11 ->
                                                                                                                                         case GHC.Prim.tagToEnum#
                                                                                                                                                @ GHC.Types.Bool
                                                                                                                                                (GHC.Prim.<##
                                                                                                                                                   x11
                                                                                                                                                   y11) of wild48 {
                                                                                                                                           GHC.Types.False
                                                                                                                                           -> case GHC.Prim.tagToEnum#
                                                                                                                                                     @ GHC.Types.Bool
                                                                                                                                                     (GHC.Prim.==##
                                                                                                                                                        x11
                                                                                                                                                        y11) of wild49 {
                                                                                                                                                GHC.Types.False
                                                                                                                                                -> GHC.Types.False
                                                                                                                                                GHC.Types.True
                                                                                                                                                -> case ww13 of wild50 { GHC.Types.D# x12 ->
                                                                                                                                                   case ww30 of wild51 { GHC.Types.D# y12 ->
                                                                                                                                                   case GHC.Prim.tagToEnum#
                                                                                                                                                          @ GHC.Types.Bool
                                                                                                                                                          (GHC.Prim.<##
                                                                                                                                                             x12
                                                                                                                                                             y12) of wild52 {
                                                                                                                                                     GHC.Types.False
                                                                                                                                                     -> case GHC.Prim.tagToEnum#
                                                                                                                                                               @ GHC.Types.Bool
                                                                                                                                                               (GHC.Prim.==##
                                                                                                                                                                  x12
                                                                                                                                                                  y12) of wild53 {
                                                                                                                                                          GHC.Types.False
                                                                                                                                                          -> GHC.Types.False
                                                                                                                                                          GHC.Types.True
                                                                                                                                                          -> case ww14 of wild54 { GHC.Types.D# x13 ->
                                                                                                                                                             case ww31 of wild55 { GHC.Types.D# y13 ->
                                                                                                                                                             case GHC.Prim.tagToEnum#
                                                                                                                                                                    @ GHC.Types.Bool
                                                                                                                                                                    (GHC.Prim.<##
                                                                                                                                                                       x13
                                                                                                                                                                       y13) of wild56 {
                                                                                                                                                               GHC.Types.False
                                                                                                                                                               -> case GHC.Prim.tagToEnum#
                                                                                                                                                                         @ GHC.Types.Bool
                                                                                                                                                                         (GHC.Prim.==##
                                                                                                                                                                            x13
                                                                                                                                                                            y13) of wild57 {
                                                                                                                                                                    GHC.Types.False
                                                                                                                                                                    -> GHC.Types.False
                                                                                                                                                                    GHC.Types.True
                                                                                                                                                                    -> case ww15 of wild58 { GHC.Types.D# x14 ->
                                                                                                                                                                       case ww32 of wild59 { GHC.Types.D# y14 ->
                                                                                                                                                                       case GHC.Prim.tagToEnum#
                                                                                                                                                                              @ GHC.Types.Bool
                                                                                                                                                                              (GHC.Prim.<##
                                                                                                                                                                                 x14
                                                                                                                                                                                 y14) of wild60 {
                                                                                                                                                                         GHC.Types.False
                                                                                                                                                                         -> case GHC.Prim.tagToEnum#
                                                                                                                                                                                   @ GHC.Types.Bool
                                                                                                                                                                                   (GHC.Prim.==##
                                                                                                                                                                                      x14
                                                                                                                                                                                      y14) of wild61 {
                                                                                                                                                                              GHC.Types.False
                                                                                                                                                                              -> GHC.Types.False
                                                                                                                                                                              GHC.Types.True
                                                                                                                                                                              -> GHC.Classes.$fOrdDouble_$c<
                                                                                                                                                                                   ww16
                                                                                                                                                                                   ww33 }
                                                                                                                                                                         GHC.Types.True
                                                                                                                                                                         -> GHC.Types.True } } } }
                                                                                                                                                               GHC.Types.True
                                                                                                                                                               -> GHC.Types.True } } } }
                                                                                                                                                     GHC.Types.True
                                                                                                                                                     -> GHC.Types.True } } } }
                                                                                                                                           GHC.Types.True
                                                                                                                                           -> GHC.Types.True } } } }
                                                                                                                                 GHC.Types.True
                                                                                                                                 -> GHC.Types.True } } } }
                                                                                                                       GHC.Types.True
                                                                                                                       -> GHC.Types.True } } } }
                                                                                                             GHC.Types.True
                                                                                                             -> GHC.Types.True } } } }
                                                                                                   GHC.Types.True
                                                                                                   -> GHC.Types.True } } } }
                                                                                         GHC.Types.True
                                                                                         -> GHC.Types.True } } } }
                                                                               GHC.Types.True
                                                                               -> GHC.Types.True } } } }
                                                                     GHC.Types.True
                                                                     -> GHC.Types.True } } } }
                                                           GHC.Types.True -> GHC.Types.True } } } }
                                                 GHC.Types.True -> GHC.Types.True } } } }
                                       GHC.Types.True -> GHC.Types.True } } } }
                             GHC.Types.True -> GHC.Types.True } } } }
                   GHC.Types.True -> GHC.Types.True }) -}
b7645f6d4a453a0087f9fdcd2264f6da
  $w$c<3 ::
    GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> Types.Defense
    -> GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> Types.Defense
    -> GHC.Types.Bool
  {- Arity: 36, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Double#)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: GHC.Types.Double)
                   (ww3 :: GHC.Types.Double)
                   (ww4 :: GHC.Types.Double)
                   (ww5 :: GHC.Types.Double)
                   (ww6 :: GHC.Types.Double)
                   (ww7 :: GHC.Types.Double)
                   (ww8 :: GHC.Types.Double)
                   (ww9 :: GHC.Types.Double)
                   (ww10 :: GHC.Types.Double)
                   (ww11 :: GHC.Types.Double)
                   (ww12 :: GHC.Types.Double)
                   (ww13 :: GHC.Types.Double)
                   (ww14 :: GHC.Types.Double)
                   (ww15 :: GHC.Types.Double)
                   (ww16 :: GHC.Types.Double)
                   (ww17 :: Types.Defense)
                   (ww18 :: GHC.Prim.Double#)
                   (ww19 :: GHC.Types.Double)
                   (ww20 :: GHC.Types.Double)
                   (ww21 :: GHC.Types.Double)
                   (ww22 :: GHC.Types.Double)
                   (ww23 :: GHC.Types.Double)
                   (ww24 :: GHC.Types.Double)
                   (ww25 :: GHC.Types.Double)
                   (ww26 :: GHC.Types.Double)
                   (ww27 :: GHC.Types.Double)
                   (ww28 :: GHC.Types.Double)
                   (ww29 :: GHC.Types.Double)
                   (ww30 :: GHC.Types.Double)
                   (ww31 :: GHC.Types.Double)
                   (ww32 :: GHC.Types.Double)
                   (ww33 :: GHC.Types.Double)
                   (ww34 :: GHC.Types.Double)
                   (ww35 :: Types.Defense) ->
                 case Types.$w$ccompare2
                        ww
                        ww1
                        ww2
                        ww3
                        ww4
                        ww5
                        ww6
                        ww7
                        ww8
                        ww9
                        ww10
                        ww11
                        ww12
                        ww13
                        ww14
                        ww15
                        ww16
                        ww18
                        ww19
                        ww20
                        ww21
                        ww22
                        ww23
                        ww24
                        ww25
                        ww26
                        ww27
                        ww28
                        ww29
                        ww30
                        ww31
                        ww32
                        ww33
                        ww34 of wild {
                   GHC.Types.LT -> GHC.Types.True
                   GHC.Types.EQ -> Types.$fOrdDefense_$c< ww17 ww35
                   GHC.Types.GT -> GHC.Types.False }) -}
76275c7751fa55eabf729fa0d8825986
  $w$c<4 ::
    GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
    -> GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
    -> GHC.Types.Bool
  {- Arity: 34, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U><L,1*U><L,1*U><S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Double#)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: GHC.Types.Double)
                   (ww3 :: GHC.Types.Double)
                   (ww4 :: GHC.Types.Double)
                   (ww5 :: GHC.Types.Double)
                   (ww6 :: GHC.Types.Double)
                   (ww7 :: GHC.Types.Double)
                   (ww8 :: GHC.Types.Double)
                   (ww9 :: GHC.Types.Double)
                   (ww10 :: GHC.Types.Double)
                   (ww11 :: GHC.Types.Double)
                   (ww12 :: GHC.Types.Double)
                   (ww13 :: GHC.Types.Double)
                   (ww14 :: [(Types.TeamName, Types.Wins, Types.Losses)])
                   (ww15 :: [(Types.TeamName, Types.Wins, Types.Losses)])
                   (ww16 :: [(Types.TeamName, Types.Wins, Types.Losses)])
                   (ww17 :: GHC.Prim.Double#)
                   (ww18 :: GHC.Types.Double)
                   (ww19 :: GHC.Types.Double)
                   (ww20 :: GHC.Types.Double)
                   (ww21 :: GHC.Types.Double)
                   (ww22 :: GHC.Types.Double)
                   (ww23 :: GHC.Types.Double)
                   (ww24 :: GHC.Types.Double)
                   (ww25 :: GHC.Types.Double)
                   (ww26 :: GHC.Types.Double)
                   (ww27 :: GHC.Types.Double)
                   (ww28 :: GHC.Types.Double)
                   (ww29 :: GHC.Types.Double)
                   (ww30 :: GHC.Types.Double)
                   (ww31 :: [(Types.TeamName, Types.Wins, Types.Losses)])
                   (ww32 :: [(Types.TeamName, Types.Wins, Types.Losses)])
                   (ww33 :: [(Types.TeamName, Types.Wins, Types.Losses)]) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<## ww ww17) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==## ww ww17) of wild3 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case ww1 of wild { GHC.Types.D# x ->
                           case ww18 of wild1 { GHC.Types.D# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<## x y) of wild4 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==## x y) of wild5 {
                                  GHC.Types.False -> GHC.Types.False
                                  GHC.Types.True
                                  -> case ww2 of wild6 { GHC.Types.D# x1 ->
                                     case ww19 of wild7 { GHC.Types.D# y1 ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.<## x1 y1) of wild8 {
                                       GHC.Types.False
                                       -> case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 (GHC.Prim.==## x1 y1) of wild9 {
                                            GHC.Types.False -> GHC.Types.False
                                            GHC.Types.True
                                            -> case ww3 of wild10 { GHC.Types.D# x2 ->
                                               case ww20 of wild11 { GHC.Types.D# y2 ->
                                               case GHC.Prim.tagToEnum#
                                                      @ GHC.Types.Bool
                                                      (GHC.Prim.<## x2 y2) of wild12 {
                                                 GHC.Types.False
                                                 -> case GHC.Prim.tagToEnum#
                                                           @ GHC.Types.Bool
                                                           (GHC.Prim.==## x2 y2) of wild13 {
                                                      GHC.Types.False -> GHC.Types.False
                                                      GHC.Types.True
                                                      -> case ww4 of wild14 { GHC.Types.D# x3 ->
                                                         case ww21 of wild15 { GHC.Types.D# y3 ->
                                                         case GHC.Prim.tagToEnum#
                                                                @ GHC.Types.Bool
                                                                (GHC.Prim.<## x3 y3) of wild16 {
                                                           GHC.Types.False
                                                           -> case GHC.Prim.tagToEnum#
                                                                     @ GHC.Types.Bool
                                                                     (GHC.Prim.==##
                                                                        x3
                                                                        y3) of wild17 {
                                                                GHC.Types.False -> GHC.Types.False
                                                                GHC.Types.True
                                                                -> case ww5 of wild18 { GHC.Types.D# x4 ->
                                                                   case ww22 of wild19 { GHC.Types.D# y4 ->
                                                                   case GHC.Prim.tagToEnum#
                                                                          @ GHC.Types.Bool
                                                                          (GHC.Prim.<##
                                                                             x4
                                                                             y4) of wild20 {
                                                                     GHC.Types.False
                                                                     -> case GHC.Prim.tagToEnum#
                                                                               @ GHC.Types.Bool
                                                                               (GHC.Prim.==##
                                                                                  x4
                                                                                  y4) of wild21 {
                                                                          GHC.Types.False
                                                                          -> GHC.Types.False
                                                                          GHC.Types.True
                                                                          -> case ww6 of wild22 { GHC.Types.D# x5 ->
                                                                             case ww23 of wild23 { GHC.Types.D# y5 ->
                                                                             case GHC.Prim.tagToEnum#
                                                                                    @ GHC.Types.Bool
                                                                                    (GHC.Prim.<##
                                                                                       x5
                                                                                       y5) of wild24 {
                                                                               GHC.Types.False
                                                                               -> case GHC.Prim.tagToEnum#
                                                                                         @ GHC.Types.Bool
                                                                                         (GHC.Prim.==##
                                                                                            x5
                                                                                            y5) of wild25 {
                                                                                    GHC.Types.False
                                                                                    -> GHC.Types.False
                                                                                    GHC.Types.True
                                                                                    -> case ww7 of wild26 { GHC.Types.D# x6 ->
                                                                                       case ww24 of wild27 { GHC.Types.D# y6 ->
                                                                                       case GHC.Prim.tagToEnum#
                                                                                              @ GHC.Types.Bool
                                                                                              (GHC.Prim.<##
                                                                                                 x6
                                                                                                 y6) of wild28 {
                                                                                         GHC.Types.False
                                                                                         -> case GHC.Prim.tagToEnum#
                                                                                                   @ GHC.Types.Bool
                                                                                                   (GHC.Prim.==##
                                                                                                      x6
                                                                                                      y6) of wild29 {
                                                                                              GHC.Types.False
                                                                                              -> GHC.Types.False
                                                                                              GHC.Types.True
                                                                                              -> case ww8 of wild30 { GHC.Types.D# x7 ->
                                                                                                 case ww25 of wild31 { GHC.Types.D# y7 ->
                                                                                                 case GHC.Prim.tagToEnum#
                                                                                                        @ GHC.Types.Bool
                                                                                                        (GHC.Prim.<##
                                                                                                           x7
                                                                                                           y7) of wild32 {
                                                                                                   GHC.Types.False
                                                                                                   -> case GHC.Prim.tagToEnum#
                                                                                                             @ GHC.Types.Bool
                                                                                                             (GHC.Prim.==##
                                                                                                                x7
                                                                                                                y7) of wild33 {
                                                                                                        GHC.Types.False
                                                                                                        -> GHC.Types.False
                                                                                                        GHC.Types.True
                                                                                                        -> case ww9 of wild34 { GHC.Types.D# x8 ->
                                                                                                           case ww26 of wild35 { GHC.Types.D# y8 ->
                                                                                                           case GHC.Prim.tagToEnum#
                                                                                                                  @ GHC.Types.Bool
                                                                                                                  (GHC.Prim.<##
                                                                                                                     x8
                                                                                                                     y8) of wild36 {
                                                                                                             GHC.Types.False
                                                                                                             -> case GHC.Prim.tagToEnum#
                                                                                                                       @ GHC.Types.Bool
                                                                                                                       (GHC.Prim.==##
                                                                                                                          x8
                                                                                                                          y8) of wild37 {
                                                                                                                  GHC.Types.False
                                                                                                                  -> GHC.Types.False
                                                                                                                  GHC.Types.True
                                                                                                                  -> case ww10 of wild38 { GHC.Types.D# x9 ->
                                                                                                                     case ww27 of wild39 { GHC.Types.D# y9 ->
                                                                                                                     case GHC.Prim.tagToEnum#
                                                                                                                            @ GHC.Types.Bool
                                                                                                                            (GHC.Prim.<##
                                                                                                                               x9
                                                                                                                               y9) of wild40 {
                                                                                                                       GHC.Types.False
                                                                                                                       -> case GHC.Prim.tagToEnum#
                                                                                                                                 @ GHC.Types.Bool
                                                                                                                                 (GHC.Prim.==##
                                                                                                                                    x9
                                                                                                                                    y9) of wild41 {
                                                                                                                            GHC.Types.False
                                                                                                                            -> GHC.Types.False
                                                                                                                            GHC.Types.True
                                                                                                                            -> case ww11 of wild42 { GHC.Types.D# x10 ->
                                                                                                                               case ww28 of wild43 { GHC.Types.D# y10 ->
                                                                                                                               case GHC.Prim.tagToEnum#
                                                                                                                                      @ GHC.Types.Bool
                                                                                                                                      (GHC.Prim.<##
                                                                                                                                         x10
                                                                                                                                         y10) of wild44 {
                                                                                                                                 GHC.Types.False
                                                                                                                                 -> case GHC.Prim.tagToEnum#
                                                                                                                                           @ GHC.Types.Bool
                                                                                                                                           (GHC.Prim.==##
                                                                                                                                              x10
                                                                                                                                              y10) of wild45 {
                                                                                                                                      GHC.Types.False
                                                                                                                                      -> GHC.Types.False
                                                                                                                                      GHC.Types.True
                                                                                                                                      -> case ww12 of wild46 { GHC.Types.D# x11 ->
                                                                                                                                         case ww29 of wild47 { GHC.Types.D# y11 ->
                                                                                                                                         case GHC.Prim.tagToEnum#
                                                                                                                                                @ GHC.Types.Bool
                                                                                                                                                (GHC.Prim.<##
                                                                                                                                                   x11
                                                                                                                                                   y11) of wild48 {
                                                                                                                                           GHC.Types.False
                                                                                                                                           -> case GHC.Prim.tagToEnum#
                                                                                                                                                     @ GHC.Types.Bool
                                                                                                                                                     (GHC.Prim.==##
                                                                                                                                                        x11
                                                                                                                                                        y11) of wild49 {
                                                                                                                                                GHC.Types.False
                                                                                                                                                -> GHC.Types.False
                                                                                                                                                GHC.Types.True
                                                                                                                                                -> case ww13 of wild50 { GHC.Types.D# x12 ->
                                                                                                                                                   case ww30 of wild51 { GHC.Types.D# y12 ->
                                                                                                                                                   case GHC.Prim.tagToEnum#
                                                                                                                                                          @ GHC.Types.Bool
                                                                                                                                                          (GHC.Prim.<##
                                                                                                                                                             x12
                                                                                                                                                             y12) of wild52 {
                                                                                                                                                     GHC.Types.False
                                                                                                                                                     -> case GHC.Prim.tagToEnum#
                                                                                                                                                               @ GHC.Types.Bool
                                                                                                                                                               (GHC.Prim.==##
                                                                                                                                                                  x12
                                                                                                                                                                  y12) of wild53 {
                                                                                                                                                          GHC.Types.False
                                                                                                                                                          -> GHC.Types.False
                                                                                                                                                          GHC.Types.True
                                                                                                                                                          -> case GHC.Classes.$fOrd[]_$ccompare
                                                                                                                                                                    @ (Types.TeamName,
                                                                                                                                                                       Types.Wins,
                                                                                                                                                                       Types.Losses)
                                                                                                                                                                    Types.$fOrdWinningTeamStats_$s$fOrd(,,)
                                                                                                                                                                    ww14
                                                                                                                                                                    ww31 of wild54 {
                                                                                                                                                               GHC.Types.LT
                                                                                                                                                               -> GHC.Types.True
                                                                                                                                                               GHC.Types.EQ
                                                                                                                                                               -> case GHC.Classes.$fOrd[]_$ccompare
                                                                                                                                                                         @ (Types.TeamName,
                                                                                                                                                                            Types.Wins,
                                                                                                                                                                            Types.Losses)
                                                                                                                                                                         Types.$fOrdWinningTeamStats_$s$fOrd(,,)
                                                                                                                                                                         ww15
                                                                                                                                                                         ww32 of wild55 {
                                                                                                                                                                    GHC.Types.LT
                                                                                                                                                                    -> GHC.Types.True
                                                                                                                                                                    GHC.Types.EQ
                                                                                                                                                                    -> case GHC.Classes.$fOrd[]_$ccompare
                                                                                                                                                                              @ (Types.TeamName,
                                                                                                                                                                                 Types.Wins,
                                                                                                                                                                                 Types.Losses)
                                                                                                                                                                              Types.$fOrdWinningTeamStats_$s$fOrd(,,)
                                                                                                                                                                              ww16
                                                                                                                                                                              ww33 of wild56 {
                                                                                                                                                                         DEFAULT
                                                                                                                                                                         -> GHC.Types.False
                                                                                                                                                                         GHC.Types.LT
                                                                                                                                                                         -> GHC.Types.True }
                                                                                                                                                                    GHC.Types.GT
                                                                                                                                                                    -> GHC.Types.False }
                                                                                                                                                               GHC.Types.GT
                                                                                                                                                               -> GHC.Types.False } }
                                                                                                                                                     GHC.Types.True
                                                                                                                                                     -> GHC.Types.True } } } }
                                                                                                                                           GHC.Types.True
                                                                                                                                           -> GHC.Types.True } } } }
                                                                                                                                 GHC.Types.True
                                                                                                                                 -> GHC.Types.True } } } }
                                                                                                                       GHC.Types.True
                                                                                                                       -> GHC.Types.True } } } }
                                                                                                             GHC.Types.True
                                                                                                             -> GHC.Types.True } } } }
                                                                                                   GHC.Types.True
                                                                                                   -> GHC.Types.True } } } }
                                                                                         GHC.Types.True
                                                                                         -> GHC.Types.True } } } }
                                                                               GHC.Types.True
                                                                               -> GHC.Types.True } } } }
                                                                     GHC.Types.True
                                                                     -> GHC.Types.True } } } }
                                                           GHC.Types.True -> GHC.Types.True } } } }
                                                 GHC.Types.True -> GHC.Types.True } } } }
                                       GHC.Types.True -> GHC.Types.True } } } }
                             GHC.Types.True -> GHC.Types.True } } } }
                   GHC.Types.True -> GHC.Types.True }) -}
7225ea06f2ac2d7d79ca7b11ac043ea2
  $w$c<= ::
    GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Bool
  {- Arity: 34, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Double#)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: GHC.Types.Double)
                   (ww3 :: GHC.Types.Double)
                   (ww4 :: GHC.Types.Double)
                   (ww5 :: GHC.Types.Double)
                   (ww6 :: GHC.Types.Double)
                   (ww7 :: GHC.Types.Double)
                   (ww8 :: GHC.Types.Double)
                   (ww9 :: GHC.Types.Double)
                   (ww10 :: GHC.Types.Double)
                   (ww11 :: GHC.Types.Double)
                   (ww12 :: GHC.Types.Double)
                   (ww13 :: GHC.Types.Double)
                   (ww14 :: GHC.Types.Double)
                   (ww15 :: GHC.Types.Double)
                   (ww16 :: GHC.Types.Double)
                   (ww17 :: GHC.Prim.Double#)
                   (ww18 :: GHC.Types.Double)
                   (ww19 :: GHC.Types.Double)
                   (ww20 :: GHC.Types.Double)
                   (ww21 :: GHC.Types.Double)
                   (ww22 :: GHC.Types.Double)
                   (ww23 :: GHC.Types.Double)
                   (ww24 :: GHC.Types.Double)
                   (ww25 :: GHC.Types.Double)
                   (ww26 :: GHC.Types.Double)
                   (ww27 :: GHC.Types.Double)
                   (ww28 :: GHC.Types.Double)
                   (ww29 :: GHC.Types.Double)
                   (ww30 :: GHC.Types.Double)
                   (ww31 :: GHC.Types.Double)
                   (ww32 :: GHC.Types.Double)
                   (ww33 :: GHC.Types.Double) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<## ww ww17) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==## ww ww17) of wild3 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case ww1 of wild { GHC.Types.D# x ->
                           case ww18 of wild1 { GHC.Types.D# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<## x y) of wild4 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==## x y) of wild5 {
                                  GHC.Types.False -> GHC.Types.False
                                  GHC.Types.True
                                  -> case ww2 of wild6 { GHC.Types.D# x1 ->
                                     case ww19 of wild7 { GHC.Types.D# y1 ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.<## x1 y1) of wild8 {
                                       GHC.Types.False
                                       -> case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 (GHC.Prim.==## x1 y1) of wild9 {
                                            GHC.Types.False -> GHC.Types.False
                                            GHC.Types.True
                                            -> case ww3 of wild10 { GHC.Types.D# x2 ->
                                               case ww20 of wild11 { GHC.Types.D# y2 ->
                                               case GHC.Prim.tagToEnum#
                                                      @ GHC.Types.Bool
                                                      (GHC.Prim.<## x2 y2) of wild12 {
                                                 GHC.Types.False
                                                 -> case GHC.Prim.tagToEnum#
                                                           @ GHC.Types.Bool
                                                           (GHC.Prim.==## x2 y2) of wild13 {
                                                      GHC.Types.False -> GHC.Types.False
                                                      GHC.Types.True
                                                      -> case ww4 of wild14 { GHC.Types.D# x3 ->
                                                         case ww21 of wild15 { GHC.Types.D# y3 ->
                                                         case GHC.Prim.tagToEnum#
                                                                @ GHC.Types.Bool
                                                                (GHC.Prim.<## x3 y3) of wild16 {
                                                           GHC.Types.False
                                                           -> case GHC.Prim.tagToEnum#
                                                                     @ GHC.Types.Bool
                                                                     (GHC.Prim.==##
                                                                        x3
                                                                        y3) of wild17 {
                                                                GHC.Types.False -> GHC.Types.False
                                                                GHC.Types.True
                                                                -> case ww5 of wild18 { GHC.Types.D# x4 ->
                                                                   case ww22 of wild19 { GHC.Types.D# y4 ->
                                                                   case GHC.Prim.tagToEnum#
                                                                          @ GHC.Types.Bool
                                                                          (GHC.Prim.<##
                                                                             x4
                                                                             y4) of wild20 {
                                                                     GHC.Types.False
                                                                     -> case GHC.Prim.tagToEnum#
                                                                               @ GHC.Types.Bool
                                                                               (GHC.Prim.==##
                                                                                  x4
                                                                                  y4) of wild21 {
                                                                          GHC.Types.False
                                                                          -> GHC.Types.False
                                                                          GHC.Types.True
                                                                          -> case ww6 of wild22 { GHC.Types.D# x5 ->
                                                                             case ww23 of wild23 { GHC.Types.D# y5 ->
                                                                             case GHC.Prim.tagToEnum#
                                                                                    @ GHC.Types.Bool
                                                                                    (GHC.Prim.<##
                                                                                       x5
                                                                                       y5) of wild24 {
                                                                               GHC.Types.False
                                                                               -> case GHC.Prim.tagToEnum#
                                                                                         @ GHC.Types.Bool
                                                                                         (GHC.Prim.==##
                                                                                            x5
                                                                                            y5) of wild25 {
                                                                                    GHC.Types.False
                                                                                    -> GHC.Types.False
                                                                                    GHC.Types.True
                                                                                    -> case ww7 of wild26 { GHC.Types.D# x6 ->
                                                                                       case ww24 of wild27 { GHC.Types.D# y6 ->
                                                                                       case GHC.Prim.tagToEnum#
                                                                                              @ GHC.Types.Bool
                                                                                              (GHC.Prim.<##
                                                                                                 x6
                                                                                                 y6) of wild28 {
                                                                                         GHC.Types.False
                                                                                         -> case GHC.Prim.tagToEnum#
                                                                                                   @ GHC.Types.Bool
                                                                                                   (GHC.Prim.==##
                                                                                                      x6
                                                                                                      y6) of wild29 {
                                                                                              GHC.Types.False
                                                                                              -> GHC.Types.False
                                                                                              GHC.Types.True
                                                                                              -> case ww8 of wild30 { GHC.Types.D# x7 ->
                                                                                                 case ww25 of wild31 { GHC.Types.D# y7 ->
                                                                                                 case GHC.Prim.tagToEnum#
                                                                                                        @ GHC.Types.Bool
                                                                                                        (GHC.Prim.<##
                                                                                                           x7
                                                                                                           y7) of wild32 {
                                                                                                   GHC.Types.False
                                                                                                   -> case GHC.Prim.tagToEnum#
                                                                                                             @ GHC.Types.Bool
                                                                                                             (GHC.Prim.==##
                                                                                                                x7
                                                                                                                y7) of wild33 {
                                                                                                        GHC.Types.False
                                                                                                        -> GHC.Types.False
                                                                                                        GHC.Types.True
                                                                                                        -> case ww9 of wild34 { GHC.Types.D# x8 ->
                                                                                                           case ww26 of wild35 { GHC.Types.D# y8 ->
                                                                                                           case GHC.Prim.tagToEnum#
                                                                                                                  @ GHC.Types.Bool
                                                                                                                  (GHC.Prim.<##
                                                                                                                     x8
                                                                                                                     y8) of wild36 {
                                                                                                             GHC.Types.False
                                                                                                             -> case GHC.Prim.tagToEnum#
                                                                                                                       @ GHC.Types.Bool
                                                                                                                       (GHC.Prim.==##
                                                                                                                          x8
                                                                                                                          y8) of wild37 {
                                                                                                                  GHC.Types.False
                                                                                                                  -> GHC.Types.False
                                                                                                                  GHC.Types.True
                                                                                                                  -> case ww10 of wild38 { GHC.Types.D# x9 ->
                                                                                                                     case ww27 of wild39 { GHC.Types.D# y9 ->
                                                                                                                     case GHC.Prim.tagToEnum#
                                                                                                                            @ GHC.Types.Bool
                                                                                                                            (GHC.Prim.<##
                                                                                                                               x9
                                                                                                                               y9) of wild40 {
                                                                                                                       GHC.Types.False
                                                                                                                       -> case GHC.Prim.tagToEnum#
                                                                                                                                 @ GHC.Types.Bool
                                                                                                                                 (GHC.Prim.==##
                                                                                                                                    x9
                                                                                                                                    y9) of wild41 {
                                                                                                                            GHC.Types.False
                                                                                                                            -> GHC.Types.False
                                                                                                                            GHC.Types.True
                                                                                                                            -> case ww11 of wild42 { GHC.Types.D# x10 ->
                                                                                                                               case ww28 of wild43 { GHC.Types.D# y10 ->
                                                                                                                               case GHC.Prim.tagToEnum#
                                                                                                                                      @ GHC.Types.Bool
                                                                                                                                      (GHC.Prim.<##
                                                                                                                                         x10
                                                                                                                                         y10) of wild44 {
                                                                                                                                 GHC.Types.False
                                                                                                                                 -> case GHC.Prim.tagToEnum#
                                                                                                                                           @ GHC.Types.Bool
                                                                                                                                           (GHC.Prim.==##
                                                                                                                                              x10
                                                                                                                                              y10) of wild45 {
                                                                                                                                      GHC.Types.False
                                                                                                                                      -> GHC.Types.False
                                                                                                                                      GHC.Types.True
                                                                                                                                      -> case ww12 of wild46 { GHC.Types.D# x11 ->
                                                                                                                                         case ww29 of wild47 { GHC.Types.D# y11 ->
                                                                                                                                         case GHC.Prim.tagToEnum#
                                                                                                                                                @ GHC.Types.Bool
                                                                                                                                                (GHC.Prim.<##
                                                                                                                                                   x11
                                                                                                                                                   y11) of wild48 {
                                                                                                                                           GHC.Types.False
                                                                                                                                           -> case GHC.Prim.tagToEnum#
                                                                                                                                                     @ GHC.Types.Bool
                                                                                                                                                     (GHC.Prim.==##
                                                                                                                                                        x11
                                                                                                                                                        y11) of wild49 {
                                                                                                                                                GHC.Types.False
                                                                                                                                                -> GHC.Types.False
                                                                                                                                                GHC.Types.True
                                                                                                                                                -> case ww13 of wild50 { GHC.Types.D# x12 ->
                                                                                                                                                   case ww30 of wild51 { GHC.Types.D# y12 ->
                                                                                                                                                   case GHC.Prim.tagToEnum#
                                                                                                                                                          @ GHC.Types.Bool
                                                                                                                                                          (GHC.Prim.<##
                                                                                                                                                             x12
                                                                                                                                                             y12) of wild52 {
                                                                                                                                                     GHC.Types.False
                                                                                                                                                     -> case GHC.Prim.tagToEnum#
                                                                                                                                                               @ GHC.Types.Bool
                                                                                                                                                               (GHC.Prim.==##
                                                                                                                                                                  x12
                                                                                                                                                                  y12) of wild53 {
                                                                                                                                                          GHC.Types.False
                                                                                                                                                          -> GHC.Types.False
                                                                                                                                                          GHC.Types.True
                                                                                                                                                          -> case ww14 of wild54 { GHC.Types.D# x13 ->
                                                                                                                                                             case ww31 of wild55 { GHC.Types.D# y13 ->
                                                                                                                                                             case GHC.Prim.tagToEnum#
                                                                                                                                                                    @ GHC.Types.Bool
                                                                                                                                                                    (GHC.Prim.<##
                                                                                                                                                                       x13
                                                                                                                                                                       y13) of wild56 {
                                                                                                                                                               GHC.Types.False
                                                                                                                                                               -> case GHC.Prim.tagToEnum#
                                                                                                                                                                         @ GHC.Types.Bool
                                                                                                                                                                         (GHC.Prim.==##
                                                                                                                                                                            x13
                                                                                                                                                                            y13) of wild57 {
                                                                                                                                                                    GHC.Types.False
                                                                                                                                                                    -> GHC.Types.False
                                                                                                                                                                    GHC.Types.True
                                                                                                                                                                    -> case ww15 of wild58 { GHC.Types.D# x14 ->
                                                                                                                                                                       case ww32 of wild59 { GHC.Types.D# y14 ->
                                                                                                                                                                       case GHC.Prim.tagToEnum#
                                                                                                                                                                              @ GHC.Types.Bool
                                                                                                                                                                              (GHC.Prim.<##
                                                                                                                                                                                 x14
                                                                                                                                                                                 y14) of wild60 {
                                                                                                                                                                         GHC.Types.False
                                                                                                                                                                         -> case GHC.Prim.tagToEnum#
                                                                                                                                                                                   @ GHC.Types.Bool
                                                                                                                                                                                   (GHC.Prim.==##
                                                                                                                                                                                      x14
                                                                                                                                                                                      y14) of wild61 {
                                                                                                                                                                              GHC.Types.False
                                                                                                                                                                              -> GHC.Types.False
                                                                                                                                                                              GHC.Types.True
                                                                                                                                                                              -> GHC.Classes.$fOrdDouble_$c<=
                                                                                                                                                                                   ww16
                                                                                                                                                                                   ww33 }
                                                                                                                                                                         GHC.Types.True
                                                                                                                                                                         -> GHC.Types.True } } } }
                                                                                                                                                               GHC.Types.True
                                                                                                                                                               -> GHC.Types.True } } } }
                                                                                                                                                     GHC.Types.True
                                                                                                                                                     -> GHC.Types.True } } } }
                                                                                                                                           GHC.Types.True
                                                                                                                                           -> GHC.Types.True } } } }
                                                                                                                                 GHC.Types.True
                                                                                                                                 -> GHC.Types.True } } } }
                                                                                                                       GHC.Types.True
                                                                                                                       -> GHC.Types.True } } } }
                                                                                                             GHC.Types.True
                                                                                                             -> GHC.Types.True } } } }
                                                                                                   GHC.Types.True
                                                                                                   -> GHC.Types.True } } } }
                                                                                         GHC.Types.True
                                                                                         -> GHC.Types.True } } } }
                                                                               GHC.Types.True
                                                                               -> GHC.Types.True } } } }
                                                                     GHC.Types.True
                                                                     -> GHC.Types.True } } } }
                                                           GHC.Types.True -> GHC.Types.True } } } }
                                                 GHC.Types.True -> GHC.Types.True } } } }
                                       GHC.Types.True -> GHC.Types.True } } } }
                             GHC.Types.True -> GHC.Types.True } } } }
                   GHC.Types.True -> GHC.Types.True }) -}
a7449d20c9081e2cecd233ff76e00f0c
  $w$c<=1 ::
    GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Char
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Float
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Float
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Float
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Char
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Float
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Float
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Float
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Bool
  {- Arity: 54, HasNoCafRefs,
     Strictness: <S,U><L,1*U><L,1*U><L,1*U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><S,U><L,1*U><L,1*U><L,1*U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0] -}
b03842075205801e8e42fa3717ba87e4
  $w$c<=2 ::
    GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Bool
  {- Arity: 34, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Double#)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: GHC.Types.Double)
                   (ww3 :: GHC.Types.Double)
                   (ww4 :: GHC.Types.Double)
                   (ww5 :: GHC.Types.Double)
                   (ww6 :: GHC.Types.Double)
                   (ww7 :: GHC.Types.Double)
                   (ww8 :: GHC.Types.Double)
                   (ww9 :: GHC.Types.Double)
                   (ww10 :: GHC.Types.Double)
                   (ww11 :: GHC.Types.Double)
                   (ww12 :: GHC.Types.Double)
                   (ww13 :: GHC.Types.Double)
                   (ww14 :: GHC.Types.Double)
                   (ww15 :: GHC.Types.Double)
                   (ww16 :: GHC.Types.Double)
                   (ww17 :: GHC.Prim.Double#)
                   (ww18 :: GHC.Types.Double)
                   (ww19 :: GHC.Types.Double)
                   (ww20 :: GHC.Types.Double)
                   (ww21 :: GHC.Types.Double)
                   (ww22 :: GHC.Types.Double)
                   (ww23 :: GHC.Types.Double)
                   (ww24 :: GHC.Types.Double)
                   (ww25 :: GHC.Types.Double)
                   (ww26 :: GHC.Types.Double)
                   (ww27 :: GHC.Types.Double)
                   (ww28 :: GHC.Types.Double)
                   (ww29 :: GHC.Types.Double)
                   (ww30 :: GHC.Types.Double)
                   (ww31 :: GHC.Types.Double)
                   (ww32 :: GHC.Types.Double)
                   (ww33 :: GHC.Types.Double) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<## ww ww17) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==## ww ww17) of wild3 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case ww1 of wild { GHC.Types.D# x ->
                           case ww18 of wild1 { GHC.Types.D# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<## x y) of wild4 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==## x y) of wild5 {
                                  GHC.Types.False -> GHC.Types.False
                                  GHC.Types.True
                                  -> case ww2 of wild6 { GHC.Types.D# x1 ->
                                     case ww19 of wild7 { GHC.Types.D# y1 ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.<## x1 y1) of wild8 {
                                       GHC.Types.False
                                       -> case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 (GHC.Prim.==## x1 y1) of wild9 {
                                            GHC.Types.False -> GHC.Types.False
                                            GHC.Types.True
                                            -> case ww3 of wild10 { GHC.Types.D# x2 ->
                                               case ww20 of wild11 { GHC.Types.D# y2 ->
                                               case GHC.Prim.tagToEnum#
                                                      @ GHC.Types.Bool
                                                      (GHC.Prim.<## x2 y2) of wild12 {
                                                 GHC.Types.False
                                                 -> case GHC.Prim.tagToEnum#
                                                           @ GHC.Types.Bool
                                                           (GHC.Prim.==## x2 y2) of wild13 {
                                                      GHC.Types.False -> GHC.Types.False
                                                      GHC.Types.True
                                                      -> case ww4 of wild14 { GHC.Types.D# x3 ->
                                                         case ww21 of wild15 { GHC.Types.D# y3 ->
                                                         case GHC.Prim.tagToEnum#
                                                                @ GHC.Types.Bool
                                                                (GHC.Prim.<## x3 y3) of wild16 {
                                                           GHC.Types.False
                                                           -> case GHC.Prim.tagToEnum#
                                                                     @ GHC.Types.Bool
                                                                     (GHC.Prim.==##
                                                                        x3
                                                                        y3) of wild17 {
                                                                GHC.Types.False -> GHC.Types.False
                                                                GHC.Types.True
                                                                -> case ww5 of wild18 { GHC.Types.D# x4 ->
                                                                   case ww22 of wild19 { GHC.Types.D# y4 ->
                                                                   case GHC.Prim.tagToEnum#
                                                                          @ GHC.Types.Bool
                                                                          (GHC.Prim.<##
                                                                             x4
                                                                             y4) of wild20 {
                                                                     GHC.Types.False
                                                                     -> case GHC.Prim.tagToEnum#
                                                                               @ GHC.Types.Bool
                                                                               (GHC.Prim.==##
                                                                                  x4
                                                                                  y4) of wild21 {
                                                                          GHC.Types.False
                                                                          -> GHC.Types.False
                                                                          GHC.Types.True
                                                                          -> case ww6 of wild22 { GHC.Types.D# x5 ->
                                                                             case ww23 of wild23 { GHC.Types.D# y5 ->
                                                                             case GHC.Prim.tagToEnum#
                                                                                    @ GHC.Types.Bool
                                                                                    (GHC.Prim.<##
                                                                                       x5
                                                                                       y5) of wild24 {
                                                                               GHC.Types.False
                                                                               -> case GHC.Prim.tagToEnum#
                                                                                         @ GHC.Types.Bool
                                                                                         (GHC.Prim.==##
                                                                                            x5
                                                                                            y5) of wild25 {
                                                                                    GHC.Types.False
                                                                                    -> GHC.Types.False
                                                                                    GHC.Types.True
                                                                                    -> case ww7 of wild26 { GHC.Types.D# x6 ->
                                                                                       case ww24 of wild27 { GHC.Types.D# y6 ->
                                                                                       case GHC.Prim.tagToEnum#
                                                                                              @ GHC.Types.Bool
                                                                                              (GHC.Prim.<##
                                                                                                 x6
                                                                                                 y6) of wild28 {
                                                                                         GHC.Types.False
                                                                                         -> case GHC.Prim.tagToEnum#
                                                                                                   @ GHC.Types.Bool
                                                                                                   (GHC.Prim.==##
                                                                                                      x6
                                                                                                      y6) of wild29 {
                                                                                              GHC.Types.False
                                                                                              -> GHC.Types.False
                                                                                              GHC.Types.True
                                                                                              -> case ww8 of wild30 { GHC.Types.D# x7 ->
                                                                                                 case ww25 of wild31 { GHC.Types.D# y7 ->
                                                                                                 case GHC.Prim.tagToEnum#
                                                                                                        @ GHC.Types.Bool
                                                                                                        (GHC.Prim.<##
                                                                                                           x7
                                                                                                           y7) of wild32 {
                                                                                                   GHC.Types.False
                                                                                                   -> case GHC.Prim.tagToEnum#
                                                                                                             @ GHC.Types.Bool
                                                                                                             (GHC.Prim.==##
                                                                                                                x7
                                                                                                                y7) of wild33 {
                                                                                                        GHC.Types.False
                                                                                                        -> GHC.Types.False
                                                                                                        GHC.Types.True
                                                                                                        -> case ww9 of wild34 { GHC.Types.D# x8 ->
                                                                                                           case ww26 of wild35 { GHC.Types.D# y8 ->
                                                                                                           case GHC.Prim.tagToEnum#
                                                                                                                  @ GHC.Types.Bool
                                                                                                                  (GHC.Prim.<##
                                                                                                                     x8
                                                                                                                     y8) of wild36 {
                                                                                                             GHC.Types.False
                                                                                                             -> case GHC.Prim.tagToEnum#
                                                                                                                       @ GHC.Types.Bool
                                                                                                                       (GHC.Prim.==##
                                                                                                                          x8
                                                                                                                          y8) of wild37 {
                                                                                                                  GHC.Types.False
                                                                                                                  -> GHC.Types.False
                                                                                                                  GHC.Types.True
                                                                                                                  -> case ww10 of wild38 { GHC.Types.D# x9 ->
                                                                                                                     case ww27 of wild39 { GHC.Types.D# y9 ->
                                                                                                                     case GHC.Prim.tagToEnum#
                                                                                                                            @ GHC.Types.Bool
                                                                                                                            (GHC.Prim.<##
                                                                                                                               x9
                                                                                                                               y9) of wild40 {
                                                                                                                       GHC.Types.False
                                                                                                                       -> case GHC.Prim.tagToEnum#
                                                                                                                                 @ GHC.Types.Bool
                                                                                                                                 (GHC.Prim.==##
                                                                                                                                    x9
                                                                                                                                    y9) of wild41 {
                                                                                                                            GHC.Types.False
                                                                                                                            -> GHC.Types.False
                                                                                                                            GHC.Types.True
                                                                                                                            -> case ww11 of wild42 { GHC.Types.D# x10 ->
                                                                                                                               case ww28 of wild43 { GHC.Types.D# y10 ->
                                                                                                                               case GHC.Prim.tagToEnum#
                                                                                                                                      @ GHC.Types.Bool
                                                                                                                                      (GHC.Prim.<##
                                                                                                                                         x10
                                                                                                                                         y10) of wild44 {
                                                                                                                                 GHC.Types.False
                                                                                                                                 -> case GHC.Prim.tagToEnum#
                                                                                                                                           @ GHC.Types.Bool
                                                                                                                                           (GHC.Prim.==##
                                                                                                                                              x10
                                                                                                                                              y10) of wild45 {
                                                                                                                                      GHC.Types.False
                                                                                                                                      -> GHC.Types.False
                                                                                                                                      GHC.Types.True
                                                                                                                                      -> case ww12 of wild46 { GHC.Types.D# x11 ->
                                                                                                                                         case ww29 of wild47 { GHC.Types.D# y11 ->
                                                                                                                                         case GHC.Prim.tagToEnum#
                                                                                                                                                @ GHC.Types.Bool
                                                                                                                                                (GHC.Prim.<##
                                                                                                                                                   x11
                                                                                                                                                   y11) of wild48 {
                                                                                                                                           GHC.Types.False
                                                                                                                                           -> case GHC.Prim.tagToEnum#
                                                                                                                                                     @ GHC.Types.Bool
                                                                                                                                                     (GHC.Prim.==##
                                                                                                                                                        x11
                                                                                                                                                        y11) of wild49 {
                                                                                                                                                GHC.Types.False
                                                                                                                                                -> GHC.Types.False
                                                                                                                                                GHC.Types.True
                                                                                                                                                -> case ww13 of wild50 { GHC.Types.D# x12 ->
                                                                                                                                                   case ww30 of wild51 { GHC.Types.D# y12 ->
                                                                                                                                                   case GHC.Prim.tagToEnum#
                                                                                                                                                          @ GHC.Types.Bool
                                                                                                                                                          (GHC.Prim.<##
                                                                                                                                                             x12
                                                                                                                                                             y12) of wild52 {
                                                                                                                                                     GHC.Types.False
                                                                                                                                                     -> case GHC.Prim.tagToEnum#
                                                                                                                                                               @ GHC.Types.Bool
                                                                                                                                                               (GHC.Prim.==##
                                                                                                                                                                  x12
                                                                                                                                                                  y12) of wild53 {
                                                                                                                                                          GHC.Types.False
                                                                                                                                                          -> GHC.Types.False
                                                                                                                                                          GHC.Types.True
                                                                                                                                                          -> case ww14 of wild54 { GHC.Types.D# x13 ->
                                                                                                                                                             case ww31 of wild55 { GHC.Types.D# y13 ->
                                                                                                                                                             case GHC.Prim.tagToEnum#
                                                                                                                                                                    @ GHC.Types.Bool
                                                                                                                                                                    (GHC.Prim.<##
                                                                                                                                                                       x13
                                                                                                                                                                       y13) of wild56 {
                                                                                                                                                               GHC.Types.False
                                                                                                                                                               -> case GHC.Prim.tagToEnum#
                                                                                                                                                                         @ GHC.Types.Bool
                                                                                                                                                                         (GHC.Prim.==##
                                                                                                                                                                            x13
                                                                                                                                                                            y13) of wild57 {
                                                                                                                                                                    GHC.Types.False
                                                                                                                                                                    -> GHC.Types.False
                                                                                                                                                                    GHC.Types.True
                                                                                                                                                                    -> case ww15 of wild58 { GHC.Types.D# x14 ->
                                                                                                                                                                       case ww32 of wild59 { GHC.Types.D# y14 ->
                                                                                                                                                                       case GHC.Prim.tagToEnum#
                                                                                                                                                                              @ GHC.Types.Bool
                                                                                                                                                                              (GHC.Prim.<##
                                                                                                                                                                                 x14
                                                                                                                                                                                 y14) of wild60 {
                                                                                                                                                                         GHC.Types.False
                                                                                                                                                                         -> case GHC.Prim.tagToEnum#
                                                                                                                                                                                   @ GHC.Types.Bool
                                                                                                                                                                                   (GHC.Prim.==##
                                                                                                                                                                                      x14
                                                                                                                                                                                      y14) of wild61 {
                                                                                                                                                                              GHC.Types.False
                                                                                                                                                                              -> GHC.Types.False
                                                                                                                                                                              GHC.Types.True
                                                                                                                                                                              -> GHC.Classes.$fOrdDouble_$c<=
                                                                                                                                                                                   ww16
                                                                                                                                                                                   ww33 }
                                                                                                                                                                         GHC.Types.True
                                                                                                                                                                         -> GHC.Types.True } } } }
                                                                                                                                                               GHC.Types.True
                                                                                                                                                               -> GHC.Types.True } } } }
                                                                                                                                                     GHC.Types.True
                                                                                                                                                     -> GHC.Types.True } } } }
                                                                                                                                           GHC.Types.True
                                                                                                                                           -> GHC.Types.True } } } }
                                                                                                                                 GHC.Types.True
                                                                                                                                 -> GHC.Types.True } } } }
                                                                                                                       GHC.Types.True
                                                                                                                       -> GHC.Types.True } } } }
                                                                                                             GHC.Types.True
                                                                                                             -> GHC.Types.True } } } }
                                                                                                   GHC.Types.True
                                                                                                   -> GHC.Types.True } } } }
                                                                                         GHC.Types.True
                                                                                         -> GHC.Types.True } } } }
                                                                               GHC.Types.True
                                                                               -> GHC.Types.True } } } }
                                                                     GHC.Types.True
                                                                     -> GHC.Types.True } } } }
                                                           GHC.Types.True -> GHC.Types.True } } } }
                                                 GHC.Types.True -> GHC.Types.True } } } }
                                       GHC.Types.True -> GHC.Types.True } } } }
                             GHC.Types.True -> GHC.Types.True } } } }
                   GHC.Types.True -> GHC.Types.True }) -}
290536f548e6098658cfbeee5f0a8e2b
  $w$c<=3 ::
    GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> Types.Defense
    -> GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> Types.Defense
    -> GHC.Types.Bool
  {- Arity: 36, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Double#)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: GHC.Types.Double)
                   (ww3 :: GHC.Types.Double)
                   (ww4 :: GHC.Types.Double)
                   (ww5 :: GHC.Types.Double)
                   (ww6 :: GHC.Types.Double)
                   (ww7 :: GHC.Types.Double)
                   (ww8 :: GHC.Types.Double)
                   (ww9 :: GHC.Types.Double)
                   (ww10 :: GHC.Types.Double)
                   (ww11 :: GHC.Types.Double)
                   (ww12 :: GHC.Types.Double)
                   (ww13 :: GHC.Types.Double)
                   (ww14 :: GHC.Types.Double)
                   (ww15 :: GHC.Types.Double)
                   (ww16 :: GHC.Types.Double)
                   (ww17 :: Types.Defense)
                   (ww18 :: GHC.Prim.Double#)
                   (ww19 :: GHC.Types.Double)
                   (ww20 :: GHC.Types.Double)
                   (ww21 :: GHC.Types.Double)
                   (ww22 :: GHC.Types.Double)
                   (ww23 :: GHC.Types.Double)
                   (ww24 :: GHC.Types.Double)
                   (ww25 :: GHC.Types.Double)
                   (ww26 :: GHC.Types.Double)
                   (ww27 :: GHC.Types.Double)
                   (ww28 :: GHC.Types.Double)
                   (ww29 :: GHC.Types.Double)
                   (ww30 :: GHC.Types.Double)
                   (ww31 :: GHC.Types.Double)
                   (ww32 :: GHC.Types.Double)
                   (ww33 :: GHC.Types.Double)
                   (ww34 :: GHC.Types.Double)
                   (ww35 :: Types.Defense) ->
                 case Types.$w$ccompare2
                        ww
                        ww1
                        ww2
                        ww3
                        ww4
                        ww5
                        ww6
                        ww7
                        ww8
                        ww9
                        ww10
                        ww11
                        ww12
                        ww13
                        ww14
                        ww15
                        ww16
                        ww18
                        ww19
                        ww20
                        ww21
                        ww22
                        ww23
                        ww24
                        ww25
                        ww26
                        ww27
                        ww28
                        ww29
                        ww30
                        ww31
                        ww32
                        ww33
                        ww34 of wild {
                   GHC.Types.LT -> GHC.Types.True
                   GHC.Types.EQ -> Types.$fOrdDefense_$c<= ww17 ww35
                   GHC.Types.GT -> GHC.Types.False }) -}
da696ba736c7e8b064ff8a59572364da
  $w$c<=4 ::
    GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
    -> GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
    -> GHC.Types.Bool
  {- Arity: 34, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U><L,1*U><L,1*U><S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Double#)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: GHC.Types.Double)
                   (ww3 :: GHC.Types.Double)
                   (ww4 :: GHC.Types.Double)
                   (ww5 :: GHC.Types.Double)
                   (ww6 :: GHC.Types.Double)
                   (ww7 :: GHC.Types.Double)
                   (ww8 :: GHC.Types.Double)
                   (ww9 :: GHC.Types.Double)
                   (ww10 :: GHC.Types.Double)
                   (ww11 :: GHC.Types.Double)
                   (ww12 :: GHC.Types.Double)
                   (ww13 :: GHC.Types.Double)
                   (ww14 :: [(Types.TeamName, Types.Wins, Types.Losses)])
                   (ww15 :: [(Types.TeamName, Types.Wins, Types.Losses)])
                   (ww16 :: [(Types.TeamName, Types.Wins, Types.Losses)])
                   (ww17 :: GHC.Prim.Double#)
                   (ww18 :: GHC.Types.Double)
                   (ww19 :: GHC.Types.Double)
                   (ww20 :: GHC.Types.Double)
                   (ww21 :: GHC.Types.Double)
                   (ww22 :: GHC.Types.Double)
                   (ww23 :: GHC.Types.Double)
                   (ww24 :: GHC.Types.Double)
                   (ww25 :: GHC.Types.Double)
                   (ww26 :: GHC.Types.Double)
                   (ww27 :: GHC.Types.Double)
                   (ww28 :: GHC.Types.Double)
                   (ww29 :: GHC.Types.Double)
                   (ww30 :: GHC.Types.Double)
                   (ww31 :: [(Types.TeamName, Types.Wins, Types.Losses)])
                   (ww32 :: [(Types.TeamName, Types.Wins, Types.Losses)])
                   (ww33 :: [(Types.TeamName, Types.Wins, Types.Losses)]) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<## ww ww17) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==## ww ww17) of wild3 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case ww1 of wild { GHC.Types.D# x ->
                           case ww18 of wild1 { GHC.Types.D# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<## x y) of wild4 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==## x y) of wild5 {
                                  GHC.Types.False -> GHC.Types.False
                                  GHC.Types.True
                                  -> case ww2 of wild6 { GHC.Types.D# x1 ->
                                     case ww19 of wild7 { GHC.Types.D# y1 ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.<## x1 y1) of wild8 {
                                       GHC.Types.False
                                       -> case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 (GHC.Prim.==## x1 y1) of wild9 {
                                            GHC.Types.False -> GHC.Types.False
                                            GHC.Types.True
                                            -> case ww3 of wild10 { GHC.Types.D# x2 ->
                                               case ww20 of wild11 { GHC.Types.D# y2 ->
                                               case GHC.Prim.tagToEnum#
                                                      @ GHC.Types.Bool
                                                      (GHC.Prim.<## x2 y2) of wild12 {
                                                 GHC.Types.False
                                                 -> case GHC.Prim.tagToEnum#
                                                           @ GHC.Types.Bool
                                                           (GHC.Prim.==## x2 y2) of wild13 {
                                                      GHC.Types.False -> GHC.Types.False
                                                      GHC.Types.True
                                                      -> case ww4 of wild14 { GHC.Types.D# x3 ->
                                                         case ww21 of wild15 { GHC.Types.D# y3 ->
                                                         case GHC.Prim.tagToEnum#
                                                                @ GHC.Types.Bool
                                                                (GHC.Prim.<## x3 y3) of wild16 {
                                                           GHC.Types.False
                                                           -> case GHC.Prim.tagToEnum#
                                                                     @ GHC.Types.Bool
                                                                     (GHC.Prim.==##
                                                                        x3
                                                                        y3) of wild17 {
                                                                GHC.Types.False -> GHC.Types.False
                                                                GHC.Types.True
                                                                -> case ww5 of wild18 { GHC.Types.D# x4 ->
                                                                   case ww22 of wild19 { GHC.Types.D# y4 ->
                                                                   case GHC.Prim.tagToEnum#
                                                                          @ GHC.Types.Bool
                                                                          (GHC.Prim.<##
                                                                             x4
                                                                             y4) of wild20 {
                                                                     GHC.Types.False
                                                                     -> case GHC.Prim.tagToEnum#
                                                                               @ GHC.Types.Bool
                                                                               (GHC.Prim.==##
                                                                                  x4
                                                                                  y4) of wild21 {
                                                                          GHC.Types.False
                                                                          -> GHC.Types.False
                                                                          GHC.Types.True
                                                                          -> case ww6 of wild22 { GHC.Types.D# x5 ->
                                                                             case ww23 of wild23 { GHC.Types.D# y5 ->
                                                                             case GHC.Prim.tagToEnum#
                                                                                    @ GHC.Types.Bool
                                                                                    (GHC.Prim.<##
                                                                                       x5
                                                                                       y5) of wild24 {
                                                                               GHC.Types.False
                                                                               -> case GHC.Prim.tagToEnum#
                                                                                         @ GHC.Types.Bool
                                                                                         (GHC.Prim.==##
                                                                                            x5
                                                                                            y5) of wild25 {
                                                                                    GHC.Types.False
                                                                                    -> GHC.Types.False
                                                                                    GHC.Types.True
                                                                                    -> case ww7 of wild26 { GHC.Types.D# x6 ->
                                                                                       case ww24 of wild27 { GHC.Types.D# y6 ->
                                                                                       case GHC.Prim.tagToEnum#
                                                                                              @ GHC.Types.Bool
                                                                                              (GHC.Prim.<##
                                                                                                 x6
                                                                                                 y6) of wild28 {
                                                                                         GHC.Types.False
                                                                                         -> case GHC.Prim.tagToEnum#
                                                                                                   @ GHC.Types.Bool
                                                                                                   (GHC.Prim.==##
                                                                                                      x6
                                                                                                      y6) of wild29 {
                                                                                              GHC.Types.False
                                                                                              -> GHC.Types.False
                                                                                              GHC.Types.True
                                                                                              -> case ww8 of wild30 { GHC.Types.D# x7 ->
                                                                                                 case ww25 of wild31 { GHC.Types.D# y7 ->
                                                                                                 case GHC.Prim.tagToEnum#
                                                                                                        @ GHC.Types.Bool
                                                                                                        (GHC.Prim.<##
                                                                                                           x7
                                                                                                           y7) of wild32 {
                                                                                                   GHC.Types.False
                                                                                                   -> case GHC.Prim.tagToEnum#
                                                                                                             @ GHC.Types.Bool
                                                                                                             (GHC.Prim.==##
                                                                                                                x7
                                                                                                                y7) of wild33 {
                                                                                                        GHC.Types.False
                                                                                                        -> GHC.Types.False
                                                                                                        GHC.Types.True
                                                                                                        -> case ww9 of wild34 { GHC.Types.D# x8 ->
                                                                                                           case ww26 of wild35 { GHC.Types.D# y8 ->
                                                                                                           case GHC.Prim.tagToEnum#
                                                                                                                  @ GHC.Types.Bool
                                                                                                                  (GHC.Prim.<##
                                                                                                                     x8
                                                                                                                     y8) of wild36 {
                                                                                                             GHC.Types.False
                                                                                                             -> case GHC.Prim.tagToEnum#
                                                                                                                       @ GHC.Types.Bool
                                                                                                                       (GHC.Prim.==##
                                                                                                                          x8
                                                                                                                          y8) of wild37 {
                                                                                                                  GHC.Types.False
                                                                                                                  -> GHC.Types.False
                                                                                                                  GHC.Types.True
                                                                                                                  -> case ww10 of wild38 { GHC.Types.D# x9 ->
                                                                                                                     case ww27 of wild39 { GHC.Types.D# y9 ->
                                                                                                                     case GHC.Prim.tagToEnum#
                                                                                                                            @ GHC.Types.Bool
                                                                                                                            (GHC.Prim.<##
                                                                                                                               x9
                                                                                                                               y9) of wild40 {
                                                                                                                       GHC.Types.False
                                                                                                                       -> case GHC.Prim.tagToEnum#
                                                                                                                                 @ GHC.Types.Bool
                                                                                                                                 (GHC.Prim.==##
                                                                                                                                    x9
                                                                                                                                    y9) of wild41 {
                                                                                                                            GHC.Types.False
                                                                                                                            -> GHC.Types.False
                                                                                                                            GHC.Types.True
                                                                                                                            -> case ww11 of wild42 { GHC.Types.D# x10 ->
                                                                                                                               case ww28 of wild43 { GHC.Types.D# y10 ->
                                                                                                                               case GHC.Prim.tagToEnum#
                                                                                                                                      @ GHC.Types.Bool
                                                                                                                                      (GHC.Prim.<##
                                                                                                                                         x10
                                                                                                                                         y10) of wild44 {
                                                                                                                                 GHC.Types.False
                                                                                                                                 -> case GHC.Prim.tagToEnum#
                                                                                                                                           @ GHC.Types.Bool
                                                                                                                                           (GHC.Prim.==##
                                                                                                                                              x10
                                                                                                                                              y10) of wild45 {
                                                                                                                                      GHC.Types.False
                                                                                                                                      -> GHC.Types.False
                                                                                                                                      GHC.Types.True
                                                                                                                                      -> case ww12 of wild46 { GHC.Types.D# x11 ->
                                                                                                                                         case ww29 of wild47 { GHC.Types.D# y11 ->
                                                                                                                                         case GHC.Prim.tagToEnum#
                                                                                                                                                @ GHC.Types.Bool
                                                                                                                                                (GHC.Prim.<##
                                                                                                                                                   x11
                                                                                                                                                   y11) of wild48 {
                                                                                                                                           GHC.Types.False
                                                                                                                                           -> case GHC.Prim.tagToEnum#
                                                                                                                                                     @ GHC.Types.Bool
                                                                                                                                                     (GHC.Prim.==##
                                                                                                                                                        x11
                                                                                                                                                        y11) of wild49 {
                                                                                                                                                GHC.Types.False
                                                                                                                                                -> GHC.Types.False
                                                                                                                                                GHC.Types.True
                                                                                                                                                -> case ww13 of wild50 { GHC.Types.D# x12 ->
                                                                                                                                                   case ww30 of wild51 { GHC.Types.D# y12 ->
                                                                                                                                                   case GHC.Prim.tagToEnum#
                                                                                                                                                          @ GHC.Types.Bool
                                                                                                                                                          (GHC.Prim.<##
                                                                                                                                                             x12
                                                                                                                                                             y12) of wild52 {
                                                                                                                                                     GHC.Types.False
                                                                                                                                                     -> case GHC.Prim.tagToEnum#
                                                                                                                                                               @ GHC.Types.Bool
                                                                                                                                                               (GHC.Prim.==##
                                                                                                                                                                  x12
                                                                                                                                                                  y12) of wild53 {
                                                                                                                                                          GHC.Types.False
                                                                                                                                                          -> GHC.Types.False
                                                                                                                                                          GHC.Types.True
                                                                                                                                                          -> case GHC.Classes.$fOrd[]_$ccompare
                                                                                                                                                                    @ (Types.TeamName,
                                                                                                                                                                       Types.Wins,
                                                                                                                                                                       Types.Losses)
                                                                                                                                                                    Types.$fOrdWinningTeamStats_$s$fOrd(,,)
                                                                                                                                                                    ww14
                                                                                                                                                                    ww31 of wild54 {
                                                                                                                                                               GHC.Types.LT
                                                                                                                                                               -> GHC.Types.True
                                                                                                                                                               GHC.Types.EQ
                                                                                                                                                               -> case GHC.Classes.$fOrd[]_$ccompare
                                                                                                                                                                         @ (Types.TeamName,
                                                                                                                                                                            Types.Wins,
                                                                                                                                                                            Types.Losses)
                                                                                                                                                                         Types.$fOrdWinningTeamStats_$s$fOrd(,,)
                                                                                                                                                                         ww15
                                                                                                                                                                         ww32 of wild55 {
                                                                                                                                                                    GHC.Types.LT
                                                                                                                                                                    -> GHC.Types.True
                                                                                                                                                                    GHC.Types.EQ
                                                                                                                                                                    -> case GHC.Classes.$fOrd[]_$ccompare
                                                                                                                                                                              @ (Types.TeamName,
                                                                                                                                                                                 Types.Wins,
                                                                                                                                                                                 Types.Losses)
                                                                                                                                                                              Types.$fOrdWinningTeamStats_$s$fOrd(,,)
                                                                                                                                                                              ww16
                                                                                                                                                                              ww33 of wild56 {
                                                                                                                                                                         DEFAULT
                                                                                                                                                                         -> GHC.Types.True
                                                                                                                                                                         GHC.Types.GT
                                                                                                                                                                         -> GHC.Types.False }
                                                                                                                                                                    GHC.Types.GT
                                                                                                                                                                    -> GHC.Types.False }
                                                                                                                                                               GHC.Types.GT
                                                                                                                                                               -> GHC.Types.False } }
                                                                                                                                                     GHC.Types.True
                                                                                                                                                     -> GHC.Types.True } } } }
                                                                                                                                           GHC.Types.True
                                                                                                                                           -> GHC.Types.True } } } }
                                                                                                                                 GHC.Types.True
                                                                                                                                 -> GHC.Types.True } } } }
                                                                                                                       GHC.Types.True
                                                                                                                       -> GHC.Types.True } } } }
                                                                                                             GHC.Types.True
                                                                                                             -> GHC.Types.True } } } }
                                                                                                   GHC.Types.True
                                                                                                   -> GHC.Types.True } } } }
                                                                                         GHC.Types.True
                                                                                         -> GHC.Types.True } } } }
                                                                               GHC.Types.True
                                                                               -> GHC.Types.True } } } }
                                                                     GHC.Types.True
                                                                     -> GHC.Types.True } } } }
                                                           GHC.Types.True -> GHC.Types.True } } } }
                                                 GHC.Types.True -> GHC.Types.True } } } }
                                       GHC.Types.True -> GHC.Types.True } } } }
                             GHC.Types.True -> GHC.Types.True } } } }
                   GHC.Types.True -> GHC.Types.True }) -}
126b19eab1569aaa372b2da958e84258
  $w$c== ::
    GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Bool
  {- Arity: 34, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Double#)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: GHC.Types.Double)
                   (ww3 :: GHC.Types.Double)
                   (ww4 :: GHC.Types.Double)
                   (ww5 :: GHC.Types.Double)
                   (ww6 :: GHC.Types.Double)
                   (ww7 :: GHC.Types.Double)
                   (ww8 :: GHC.Types.Double)
                   (ww9 :: GHC.Types.Double)
                   (ww10 :: GHC.Types.Double)
                   (ww11 :: GHC.Types.Double)
                   (ww12 :: GHC.Types.Double)
                   (ww13 :: GHC.Types.Double)
                   (ww14 :: GHC.Types.Double)
                   (ww15 :: GHC.Types.Double)
                   (ww16 :: GHC.Types.Double)
                   (ww17 :: GHC.Prim.Double#)
                   (ww18 :: GHC.Types.Double)
                   (ww19 :: GHC.Types.Double)
                   (ww20 :: GHC.Types.Double)
                   (ww21 :: GHC.Types.Double)
                   (ww22 :: GHC.Types.Double)
                   (ww23 :: GHC.Types.Double)
                   (ww24 :: GHC.Types.Double)
                   (ww25 :: GHC.Types.Double)
                   (ww26 :: GHC.Types.Double)
                   (ww27 :: GHC.Types.Double)
                   (ww28 :: GHC.Types.Double)
                   (ww29 :: GHC.Types.Double)
                   (ww30 :: GHC.Types.Double)
                   (ww31 :: GHC.Types.Double)
                   (ww32 :: GHC.Types.Double)
                   (ww33 :: GHC.Types.Double) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==## ww ww17) of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case ww1 of wild1 { GHC.Types.D# x ->
                      case ww18 of wild2 { GHC.Types.D# y ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==## x y) of wild3 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case ww2 of wild4 { GHC.Types.D# x1 ->
                           case ww19 of wild5 { GHC.Types.D# y1 ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==## x1 y1) of wild6 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> case ww3 of wild7 { GHC.Types.D# x2 ->
                                case ww20 of wild8 { GHC.Types.D# y2 ->
                                case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==## x2 y2) of wild9 {
                                  GHC.Types.False -> GHC.Types.False
                                  GHC.Types.True
                                  -> case ww4 of wild10 { GHC.Types.D# x3 ->
                                     case ww21 of wild11 { GHC.Types.D# y3 ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.==## x3 y3) of wild12 {
                                       GHC.Types.False -> GHC.Types.False
                                       GHC.Types.True
                                       -> case ww5 of wild13 { GHC.Types.D# x4 ->
                                          case ww22 of wild14 { GHC.Types.D# y4 ->
                                          case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 (GHC.Prim.==## x4 y4) of wild15 {
                                            GHC.Types.False -> GHC.Types.False
                                            GHC.Types.True
                                            -> case ww6 of wild16 { GHC.Types.D# x5 ->
                                               case ww23 of wild17 { GHC.Types.D# y5 ->
                                               case GHC.Prim.tagToEnum#
                                                      @ GHC.Types.Bool
                                                      (GHC.Prim.==## x5 y5) of wild18 {
                                                 GHC.Types.False -> GHC.Types.False
                                                 GHC.Types.True
                                                 -> case ww7 of wild19 { GHC.Types.D# x6 ->
                                                    case ww24 of wild20 { GHC.Types.D# y6 ->
                                                    case GHC.Prim.tagToEnum#
                                                           @ GHC.Types.Bool
                                                           (GHC.Prim.==## x6 y6) of wild21 {
                                                      GHC.Types.False -> GHC.Types.False
                                                      GHC.Types.True
                                                      -> case ww8 of wild22 { GHC.Types.D# x7 ->
                                                         case ww25 of wild23 { GHC.Types.D# y7 ->
                                                         case GHC.Prim.tagToEnum#
                                                                @ GHC.Types.Bool
                                                                (GHC.Prim.==## x7 y7) of wild24 {
                                                           GHC.Types.False -> GHC.Types.False
                                                           GHC.Types.True
                                                           -> case ww9 of wild25 { GHC.Types.D# x8 ->
                                                              case ww26 of wild26 { GHC.Types.D# y8 ->
                                                              case GHC.Prim.tagToEnum#
                                                                     @ GHC.Types.Bool
                                                                     (GHC.Prim.==##
                                                                        x8
                                                                        y8) of wild27 {
                                                                GHC.Types.False -> GHC.Types.False
                                                                GHC.Types.True
                                                                -> case ww10 of wild28 { GHC.Types.D# x9 ->
                                                                   case ww27 of wild29 { GHC.Types.D# y9 ->
                                                                   case GHC.Prim.tagToEnum#
                                                                          @ GHC.Types.Bool
                                                                          (GHC.Prim.==##
                                                                             x9
                                                                             y9) of wild30 {
                                                                     GHC.Types.False
                                                                     -> GHC.Types.False
                                                                     GHC.Types.True
                                                                     -> case ww11 of wild31 { GHC.Types.D# x10 ->
                                                                        case ww28 of wild32 { GHC.Types.D# y10 ->
                                                                        case GHC.Prim.tagToEnum#
                                                                               @ GHC.Types.Bool
                                                                               (GHC.Prim.==##
                                                                                  x10
                                                                                  y10) of wild33 {
                                                                          GHC.Types.False
                                                                          -> GHC.Types.False
                                                                          GHC.Types.True
                                                                          -> case ww12 of wild34 { GHC.Types.D# x11 ->
                                                                             case ww29 of wild35 { GHC.Types.D# y11 ->
                                                                             case GHC.Prim.tagToEnum#
                                                                                    @ GHC.Types.Bool
                                                                                    (GHC.Prim.==##
                                                                                       x11
                                                                                       y11) of wild36 {
                                                                               GHC.Types.False
                                                                               -> GHC.Types.False
                                                                               GHC.Types.True
                                                                               -> case ww13 of wild37 { GHC.Types.D# x12 ->
                                                                                  case ww30 of wild38 { GHC.Types.D# y12 ->
                                                                                  case GHC.Prim.tagToEnum#
                                                                                         @ GHC.Types.Bool
                                                                                         (GHC.Prim.==##
                                                                                            x12
                                                                                            y12) of wild39 {
                                                                                    GHC.Types.False
                                                                                    -> GHC.Types.False
                                                                                    GHC.Types.True
                                                                                    -> case ww14 of wild40 { GHC.Types.D# x13 ->
                                                                                       case ww31 of wild41 { GHC.Types.D# y13 ->
                                                                                       case GHC.Prim.tagToEnum#
                                                                                              @ GHC.Types.Bool
                                                                                              (GHC.Prim.==##
                                                                                                 x13
                                                                                                 y13) of wild42 {
                                                                                         GHC.Types.False
                                                                                         -> GHC.Types.False
                                                                                         GHC.Types.True
                                                                                         -> case ww15 of wild43 { GHC.Types.D# x14 ->
                                                                                            case ww32 of wild44 { GHC.Types.D# y14 ->
                                                                                            case GHC.Prim.tagToEnum#
                                                                                                   @ GHC.Types.Bool
                                                                                                   (GHC.Prim.==##
                                                                                                      x14
                                                                                                      y14) of wild45 {
                                                                                              GHC.Types.False
                                                                                              -> GHC.Types.False
                                                                                              GHC.Types.True
                                                                                              -> GHC.Classes.eqDouble
                                                                                                   ww16
                                                                                                   ww33 } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } }) -}
9c2fc855628f165f00bf06bd8d7cd728
  $w$c==1 ::
    GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Char
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Float
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Float
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Float
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Char
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Float
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Float
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Float
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Bool
  {- Arity: 54, HasNoCafRefs,
     Strictness: <S,U><L,1*U><L,1*U><L,1*U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><S,U><L,1*U><L,1*U><L,1*U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0] -}
26610f257adaed20e6177a30a01e03d7
  $w$c==2 ::
    GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Bool
  {- Arity: 34, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Double#)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: GHC.Types.Double)
                   (ww3 :: GHC.Types.Double)
                   (ww4 :: GHC.Types.Double)
                   (ww5 :: GHC.Types.Double)
                   (ww6 :: GHC.Types.Double)
                   (ww7 :: GHC.Types.Double)
                   (ww8 :: GHC.Types.Double)
                   (ww9 :: GHC.Types.Double)
                   (ww10 :: GHC.Types.Double)
                   (ww11 :: GHC.Types.Double)
                   (ww12 :: GHC.Types.Double)
                   (ww13 :: GHC.Types.Double)
                   (ww14 :: GHC.Types.Double)
                   (ww15 :: GHC.Types.Double)
                   (ww16 :: GHC.Types.Double)
                   (ww17 :: GHC.Prim.Double#)
                   (ww18 :: GHC.Types.Double)
                   (ww19 :: GHC.Types.Double)
                   (ww20 :: GHC.Types.Double)
                   (ww21 :: GHC.Types.Double)
                   (ww22 :: GHC.Types.Double)
                   (ww23 :: GHC.Types.Double)
                   (ww24 :: GHC.Types.Double)
                   (ww25 :: GHC.Types.Double)
                   (ww26 :: GHC.Types.Double)
                   (ww27 :: GHC.Types.Double)
                   (ww28 :: GHC.Types.Double)
                   (ww29 :: GHC.Types.Double)
                   (ww30 :: GHC.Types.Double)
                   (ww31 :: GHC.Types.Double)
                   (ww32 :: GHC.Types.Double)
                   (ww33 :: GHC.Types.Double) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==## ww ww17) of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case ww1 of wild1 { GHC.Types.D# x ->
                      case ww18 of wild2 { GHC.Types.D# y ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==## x y) of wild3 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case ww2 of wild4 { GHC.Types.D# x1 ->
                           case ww19 of wild5 { GHC.Types.D# y1 ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==## x1 y1) of wild6 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> case ww3 of wild7 { GHC.Types.D# x2 ->
                                case ww20 of wild8 { GHC.Types.D# y2 ->
                                case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==## x2 y2) of wild9 {
                                  GHC.Types.False -> GHC.Types.False
                                  GHC.Types.True
                                  -> case ww4 of wild10 { GHC.Types.D# x3 ->
                                     case ww21 of wild11 { GHC.Types.D# y3 ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.==## x3 y3) of wild12 {
                                       GHC.Types.False -> GHC.Types.False
                                       GHC.Types.True
                                       -> case ww5 of wild13 { GHC.Types.D# x4 ->
                                          case ww22 of wild14 { GHC.Types.D# y4 ->
                                          case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 (GHC.Prim.==## x4 y4) of wild15 {
                                            GHC.Types.False -> GHC.Types.False
                                            GHC.Types.True
                                            -> case ww6 of wild16 { GHC.Types.D# x5 ->
                                               case ww23 of wild17 { GHC.Types.D# y5 ->
                                               case GHC.Prim.tagToEnum#
                                                      @ GHC.Types.Bool
                                                      (GHC.Prim.==## x5 y5) of wild18 {
                                                 GHC.Types.False -> GHC.Types.False
                                                 GHC.Types.True
                                                 -> case ww7 of wild19 { GHC.Types.D# x6 ->
                                                    case ww24 of wild20 { GHC.Types.D# y6 ->
                                                    case GHC.Prim.tagToEnum#
                                                           @ GHC.Types.Bool
                                                           (GHC.Prim.==## x6 y6) of wild21 {
                                                      GHC.Types.False -> GHC.Types.False
                                                      GHC.Types.True
                                                      -> case ww8 of wild22 { GHC.Types.D# x7 ->
                                                         case ww25 of wild23 { GHC.Types.D# y7 ->
                                                         case GHC.Prim.tagToEnum#
                                                                @ GHC.Types.Bool
                                                                (GHC.Prim.==## x7 y7) of wild24 {
                                                           GHC.Types.False -> GHC.Types.False
                                                           GHC.Types.True
                                                           -> case ww9 of wild25 { GHC.Types.D# x8 ->
                                                              case ww26 of wild26 { GHC.Types.D# y8 ->
                                                              case GHC.Prim.tagToEnum#
                                                                     @ GHC.Types.Bool
                                                                     (GHC.Prim.==##
                                                                        x8
                                                                        y8) of wild27 {
                                                                GHC.Types.False -> GHC.Types.False
                                                                GHC.Types.True
                                                                -> case ww10 of wild28 { GHC.Types.D# x9 ->
                                                                   case ww27 of wild29 { GHC.Types.D# y9 ->
                                                                   case GHC.Prim.tagToEnum#
                                                                          @ GHC.Types.Bool
                                                                          (GHC.Prim.==##
                                                                             x9
                                                                             y9) of wild30 {
                                                                     GHC.Types.False
                                                                     -> GHC.Types.False
                                                                     GHC.Types.True
                                                                     -> case ww11 of wild31 { GHC.Types.D# x10 ->
                                                                        case ww28 of wild32 { GHC.Types.D# y10 ->
                                                                        case GHC.Prim.tagToEnum#
                                                                               @ GHC.Types.Bool
                                                                               (GHC.Prim.==##
                                                                                  x10
                                                                                  y10) of wild33 {
                                                                          GHC.Types.False
                                                                          -> GHC.Types.False
                                                                          GHC.Types.True
                                                                          -> case ww12 of wild34 { GHC.Types.D# x11 ->
                                                                             case ww29 of wild35 { GHC.Types.D# y11 ->
                                                                             case GHC.Prim.tagToEnum#
                                                                                    @ GHC.Types.Bool
                                                                                    (GHC.Prim.==##
                                                                                       x11
                                                                                       y11) of wild36 {
                                                                               GHC.Types.False
                                                                               -> GHC.Types.False
                                                                               GHC.Types.True
                                                                               -> case ww13 of wild37 { GHC.Types.D# x12 ->
                                                                                  case ww30 of wild38 { GHC.Types.D# y12 ->
                                                                                  case GHC.Prim.tagToEnum#
                                                                                         @ GHC.Types.Bool
                                                                                         (GHC.Prim.==##
                                                                                            x12
                                                                                            y12) of wild39 {
                                                                                    GHC.Types.False
                                                                                    -> GHC.Types.False
                                                                                    GHC.Types.True
                                                                                    -> case ww14 of wild40 { GHC.Types.D# x13 ->
                                                                                       case ww31 of wild41 { GHC.Types.D# y13 ->
                                                                                       case GHC.Prim.tagToEnum#
                                                                                              @ GHC.Types.Bool
                                                                                              (GHC.Prim.==##
                                                                                                 x13
                                                                                                 y13) of wild42 {
                                                                                         GHC.Types.False
                                                                                         -> GHC.Types.False
                                                                                         GHC.Types.True
                                                                                         -> case ww15 of wild43 { GHC.Types.D# x14 ->
                                                                                            case ww32 of wild44 { GHC.Types.D# y14 ->
                                                                                            case GHC.Prim.tagToEnum#
                                                                                                   @ GHC.Types.Bool
                                                                                                   (GHC.Prim.==##
                                                                                                      x14
                                                                                                      y14) of wild45 {
                                                                                              GHC.Types.False
                                                                                              -> GHC.Types.False
                                                                                              GHC.Types.True
                                                                                              -> GHC.Classes.eqDouble
                                                                                                   ww16
                                                                                                   ww33 } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } }) -}
f32fbfd8e9aaa30898f89e366cd89923
  $w$c==3 ::
    GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> Types.Defense
    -> GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> Types.Defense
    -> GHC.Types.Bool
  {- Arity: 36, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Double#)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: GHC.Types.Double)
                   (ww3 :: GHC.Types.Double)
                   (ww4 :: GHC.Types.Double)
                   (ww5 :: GHC.Types.Double)
                   (ww6 :: GHC.Types.Double)
                   (ww7 :: GHC.Types.Double)
                   (ww8 :: GHC.Types.Double)
                   (ww9 :: GHC.Types.Double)
                   (ww10 :: GHC.Types.Double)
                   (ww11 :: GHC.Types.Double)
                   (ww12 :: GHC.Types.Double)
                   (ww13 :: GHC.Types.Double)
                   (ww14 :: GHC.Types.Double)
                   (ww15 :: GHC.Types.Double)
                   (ww16 :: GHC.Types.Double)
                   (ww17 :: Types.Defense)
                   (ww18 :: GHC.Prim.Double#)
                   (ww19 :: GHC.Types.Double)
                   (ww20 :: GHC.Types.Double)
                   (ww21 :: GHC.Types.Double)
                   (ww22 :: GHC.Types.Double)
                   (ww23 :: GHC.Types.Double)
                   (ww24 :: GHC.Types.Double)
                   (ww25 :: GHC.Types.Double)
                   (ww26 :: GHC.Types.Double)
                   (ww27 :: GHC.Types.Double)
                   (ww28 :: GHC.Types.Double)
                   (ww29 :: GHC.Types.Double)
                   (ww30 :: GHC.Types.Double)
                   (ww31 :: GHC.Types.Double)
                   (ww32 :: GHC.Types.Double)
                   (ww33 :: GHC.Types.Double)
                   (ww34 :: GHC.Types.Double)
                   (ww35 :: Types.Defense) ->
                 case Types.$w$c==2
                        ww
                        ww1
                        ww2
                        ww3
                        ww4
                        ww5
                        ww6
                        ww7
                        ww8
                        ww9
                        ww10
                        ww11
                        ww12
                        ww13
                        ww14
                        ww15
                        ww16
                        ww18
                        ww19
                        ww20
                        ww21
                        ww22
                        ww23
                        ww24
                        ww25
                        ww26
                        ww27
                        ww28
                        ww29
                        ww30
                        ww31
                        ww32
                        ww33
                        ww34 of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True -> Types.$fEqDefense_$c== ww17 ww35 }) -}
05b48883c3fd2ba73414c08a99884a22
  $w$c==4 ::
    GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
    -> GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
    -> GHC.Types.Bool
  {- Arity: 34, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U><L,1*U><L,1*U><S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Double#)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: GHC.Types.Double)
                   (ww3 :: GHC.Types.Double)
                   (ww4 :: GHC.Types.Double)
                   (ww5 :: GHC.Types.Double)
                   (ww6 :: GHC.Types.Double)
                   (ww7 :: GHC.Types.Double)
                   (ww8 :: GHC.Types.Double)
                   (ww9 :: GHC.Types.Double)
                   (ww10 :: GHC.Types.Double)
                   (ww11 :: GHC.Types.Double)
                   (ww12 :: GHC.Types.Double)
                   (ww13 :: GHC.Types.Double)
                   (ww14 :: [(Types.TeamName, Types.Wins, Types.Losses)])
                   (ww15 :: [(Types.TeamName, Types.Wins, Types.Losses)])
                   (ww16 :: [(Types.TeamName, Types.Wins, Types.Losses)])
                   (ww17 :: GHC.Prim.Double#)
                   (ww18 :: GHC.Types.Double)
                   (ww19 :: GHC.Types.Double)
                   (ww20 :: GHC.Types.Double)
                   (ww21 :: GHC.Types.Double)
                   (ww22 :: GHC.Types.Double)
                   (ww23 :: GHC.Types.Double)
                   (ww24 :: GHC.Types.Double)
                   (ww25 :: GHC.Types.Double)
                   (ww26 :: GHC.Types.Double)
                   (ww27 :: GHC.Types.Double)
                   (ww28 :: GHC.Types.Double)
                   (ww29 :: GHC.Types.Double)
                   (ww30 :: GHC.Types.Double)
                   (ww31 :: [(Types.TeamName, Types.Wins, Types.Losses)])
                   (ww32 :: [(Types.TeamName, Types.Wins, Types.Losses)])
                   (ww33 :: [(Types.TeamName, Types.Wins, Types.Losses)]) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==## ww ww17) of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case ww1 of wild1 { GHC.Types.D# x ->
                      case ww18 of wild2 { GHC.Types.D# y ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==## x y) of wild3 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case ww2 of wild4 { GHC.Types.D# x1 ->
                           case ww19 of wild5 { GHC.Types.D# y1 ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==## x1 y1) of wild6 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> case ww3 of wild7 { GHC.Types.D# x2 ->
                                case ww20 of wild8 { GHC.Types.D# y2 ->
                                case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==## x2 y2) of wild9 {
                                  GHC.Types.False -> GHC.Types.False
                                  GHC.Types.True
                                  -> case ww4 of wild10 { GHC.Types.D# x3 ->
                                     case ww21 of wild11 { GHC.Types.D# y3 ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.==## x3 y3) of wild12 {
                                       GHC.Types.False -> GHC.Types.False
                                       GHC.Types.True
                                       -> case ww5 of wild13 { GHC.Types.D# x4 ->
                                          case ww22 of wild14 { GHC.Types.D# y4 ->
                                          case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 (GHC.Prim.==## x4 y4) of wild15 {
                                            GHC.Types.False -> GHC.Types.False
                                            GHC.Types.True
                                            -> case ww6 of wild16 { GHC.Types.D# x5 ->
                                               case ww23 of wild17 { GHC.Types.D# y5 ->
                                               case GHC.Prim.tagToEnum#
                                                      @ GHC.Types.Bool
                                                      (GHC.Prim.==## x5 y5) of wild18 {
                                                 GHC.Types.False -> GHC.Types.False
                                                 GHC.Types.True
                                                 -> case ww7 of wild19 { GHC.Types.D# x6 ->
                                                    case ww24 of wild20 { GHC.Types.D# y6 ->
                                                    case GHC.Prim.tagToEnum#
                                                           @ GHC.Types.Bool
                                                           (GHC.Prim.==## x6 y6) of wild21 {
                                                      GHC.Types.False -> GHC.Types.False
                                                      GHC.Types.True
                                                      -> case ww8 of wild22 { GHC.Types.D# x7 ->
                                                         case ww25 of wild23 { GHC.Types.D# y7 ->
                                                         case GHC.Prim.tagToEnum#
                                                                @ GHC.Types.Bool
                                                                (GHC.Prim.==## x7 y7) of wild24 {
                                                           GHC.Types.False -> GHC.Types.False
                                                           GHC.Types.True
                                                           -> case ww9 of wild25 { GHC.Types.D# x8 ->
                                                              case ww26 of wild26 { GHC.Types.D# y8 ->
                                                              case GHC.Prim.tagToEnum#
                                                                     @ GHC.Types.Bool
                                                                     (GHC.Prim.==##
                                                                        x8
                                                                        y8) of wild27 {
                                                                GHC.Types.False -> GHC.Types.False
                                                                GHC.Types.True
                                                                -> case ww10 of wild28 { GHC.Types.D# x9 ->
                                                                   case ww27 of wild29 { GHC.Types.D# y9 ->
                                                                   case GHC.Prim.tagToEnum#
                                                                          @ GHC.Types.Bool
                                                                          (GHC.Prim.==##
                                                                             x9
                                                                             y9) of wild30 {
                                                                     GHC.Types.False
                                                                     -> GHC.Types.False
                                                                     GHC.Types.True
                                                                     -> case ww11 of wild31 { GHC.Types.D# x10 ->
                                                                        case ww28 of wild32 { GHC.Types.D# y10 ->
                                                                        case GHC.Prim.tagToEnum#
                                                                               @ GHC.Types.Bool
                                                                               (GHC.Prim.==##
                                                                                  x10
                                                                                  y10) of wild33 {
                                                                          GHC.Types.False
                                                                          -> GHC.Types.False
                                                                          GHC.Types.True
                                                                          -> case ww12 of wild34 { GHC.Types.D# x11 ->
                                                                             case ww29 of wild35 { GHC.Types.D# y11 ->
                                                                             case GHC.Prim.tagToEnum#
                                                                                    @ GHC.Types.Bool
                                                                                    (GHC.Prim.==##
                                                                                       x11
                                                                                       y11) of wild36 {
                                                                               GHC.Types.False
                                                                               -> GHC.Types.False
                                                                               GHC.Types.True
                                                                               -> case ww13 of wild37 { GHC.Types.D# x12 ->
                                                                                  case ww30 of wild38 { GHC.Types.D# y12 ->
                                                                                  case GHC.Prim.tagToEnum#
                                                                                         @ GHC.Types.Bool
                                                                                         (GHC.Prim.==##
                                                                                            x12
                                                                                            y12) of wild39 {
                                                                                    GHC.Types.False
                                                                                    -> GHC.Types.False
                                                                                    GHC.Types.True
                                                                                    -> case GHC.Classes.$fEq[]_$c==
                                                                                              @ (Types.TeamName,
                                                                                                 Types.Wins,
                                                                                                 Types.Losses)
                                                                                              Types.$fEqWinningTeamStats_$s$fEq(,,)
                                                                                              ww14
                                                                                              ww31 of wild40 {
                                                                                         GHC.Types.False
                                                                                         -> GHC.Types.False
                                                                                         GHC.Types.True
                                                                                         -> case GHC.Classes.$fEq[]_$c==
                                                                                                   @ (Types.TeamName,
                                                                                                      Types.Wins,
                                                                                                      Types.Losses)
                                                                                                   Types.$fEqWinningTeamStats_$s$fEq(,,)
                                                                                                   ww15
                                                                                                   ww32 of wild41 {
                                                                                              GHC.Types.False
                                                                                              -> GHC.Types.False
                                                                                              GHC.Types.True
                                                                                              -> GHC.Classes.$fEq[]_$c==
                                                                                                   @ (Types.TeamName,
                                                                                                      Types.Wins,
                                                                                                      Types.Losses)
                                                                                                   Types.$fEqWinningTeamStats_$s$fEq(,,)
                                                                                                   ww16
                                                                                                   ww33 } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } }) -}
f7e9985925711856a17087158db7edba
  $w$c> ::
    GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Bool
  {- Arity: 34, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Double#)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: GHC.Types.Double)
                   (ww3 :: GHC.Types.Double)
                   (ww4 :: GHC.Types.Double)
                   (ww5 :: GHC.Types.Double)
                   (ww6 :: GHC.Types.Double)
                   (ww7 :: GHC.Types.Double)
                   (ww8 :: GHC.Types.Double)
                   (ww9 :: GHC.Types.Double)
                   (ww10 :: GHC.Types.Double)
                   (ww11 :: GHC.Types.Double)
                   (ww12 :: GHC.Types.Double)
                   (ww13 :: GHC.Types.Double)
                   (ww14 :: GHC.Types.Double)
                   (ww15 :: GHC.Types.Double)
                   (ww16 :: GHC.Types.Double)
                   (ww17 :: GHC.Prim.Double#)
                   (ww18 :: GHC.Types.Double)
                   (ww19 :: GHC.Types.Double)
                   (ww20 :: GHC.Types.Double)
                   (ww21 :: GHC.Types.Double)
                   (ww22 :: GHC.Types.Double)
                   (ww23 :: GHC.Types.Double)
                   (ww24 :: GHC.Types.Double)
                   (ww25 :: GHC.Types.Double)
                   (ww26 :: GHC.Types.Double)
                   (ww27 :: GHC.Types.Double)
                   (ww28 :: GHC.Types.Double)
                   (ww29 :: GHC.Types.Double)
                   (ww30 :: GHC.Types.Double)
                   (ww31 :: GHC.Types.Double)
                   (ww32 :: GHC.Types.Double)
                   (ww33 :: GHC.Types.Double) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<## ww ww17) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==## ww ww17) of wild3 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True
                        -> case ww1 of wild { GHC.Types.D# x ->
                           case ww18 of wild1 { GHC.Types.D# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<## x y) of wild4 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==## x y) of wild5 {
                                  GHC.Types.False -> GHC.Types.True
                                  GHC.Types.True
                                  -> case ww2 of wild6 { GHC.Types.D# x1 ->
                                     case ww19 of wild7 { GHC.Types.D# y1 ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.<## x1 y1) of wild8 {
                                       GHC.Types.False
                                       -> case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 (GHC.Prim.==## x1 y1) of wild9 {
                                            GHC.Types.False -> GHC.Types.True
                                            GHC.Types.True
                                            -> case ww3 of wild10 { GHC.Types.D# x2 ->
                                               case ww20 of wild11 { GHC.Types.D# y2 ->
                                               case GHC.Prim.tagToEnum#
                                                      @ GHC.Types.Bool
                                                      (GHC.Prim.<## x2 y2) of wild12 {
                                                 GHC.Types.False
                                                 -> case GHC.Prim.tagToEnum#
                                                           @ GHC.Types.Bool
                                                           (GHC.Prim.==## x2 y2) of wild13 {
                                                      GHC.Types.False -> GHC.Types.True
                                                      GHC.Types.True
                                                      -> case ww4 of wild14 { GHC.Types.D# x3 ->
                                                         case ww21 of wild15 { GHC.Types.D# y3 ->
                                                         case GHC.Prim.tagToEnum#
                                                                @ GHC.Types.Bool
                                                                (GHC.Prim.<## x3 y3) of wild16 {
                                                           GHC.Types.False
                                                           -> case GHC.Prim.tagToEnum#
                                                                     @ GHC.Types.Bool
                                                                     (GHC.Prim.==##
                                                                        x3
                                                                        y3) of wild17 {
                                                                GHC.Types.False -> GHC.Types.True
                                                                GHC.Types.True
                                                                -> case ww5 of wild18 { GHC.Types.D# x4 ->
                                                                   case ww22 of wild19 { GHC.Types.D# y4 ->
                                                                   case GHC.Prim.tagToEnum#
                                                                          @ GHC.Types.Bool
                                                                          (GHC.Prim.<##
                                                                             x4
                                                                             y4) of wild20 {
                                                                     GHC.Types.False
                                                                     -> case GHC.Prim.tagToEnum#
                                                                               @ GHC.Types.Bool
                                                                               (GHC.Prim.==##
                                                                                  x4
                                                                                  y4) of wild21 {
                                                                          GHC.Types.False
                                                                          -> GHC.Types.True
                                                                          GHC.Types.True
                                                                          -> case ww6 of wild22 { GHC.Types.D# x5 ->
                                                                             case ww23 of wild23 { GHC.Types.D# y5 ->
                                                                             case GHC.Prim.tagToEnum#
                                                                                    @ GHC.Types.Bool
                                                                                    (GHC.Prim.<##
                                                                                       x5
                                                                                       y5) of wild24 {
                                                                               GHC.Types.False
                                                                               -> case GHC.Prim.tagToEnum#
                                                                                         @ GHC.Types.Bool
                                                                                         (GHC.Prim.==##
                                                                                            x5
                                                                                            y5) of wild25 {
                                                                                    GHC.Types.False
                                                                                    -> GHC.Types.True
                                                                                    GHC.Types.True
                                                                                    -> case ww7 of wild26 { GHC.Types.D# x6 ->
                                                                                       case ww24 of wild27 { GHC.Types.D# y6 ->
                                                                                       case GHC.Prim.tagToEnum#
                                                                                              @ GHC.Types.Bool
                                                                                              (GHC.Prim.<##
                                                                                                 x6
                                                                                                 y6) of wild28 {
                                                                                         GHC.Types.False
                                                                                         -> case GHC.Prim.tagToEnum#
                                                                                                   @ GHC.Types.Bool
                                                                                                   (GHC.Prim.==##
                                                                                                      x6
                                                                                                      y6) of wild29 {
                                                                                              GHC.Types.False
                                                                                              -> GHC.Types.True
                                                                                              GHC.Types.True
                                                                                              -> case ww8 of wild30 { GHC.Types.D# x7 ->
                                                                                                 case ww25 of wild31 { GHC.Types.D# y7 ->
                                                                                                 case GHC.Prim.tagToEnum#
                                                                                                        @ GHC.Types.Bool
                                                                                                        (GHC.Prim.<##
                                                                                                           x7
                                                                                                           y7) of wild32 {
                                                                                                   GHC.Types.False
                                                                                                   -> case GHC.Prim.tagToEnum#
                                                                                                             @ GHC.Types.Bool
                                                                                                             (GHC.Prim.==##
                                                                                                                x7
                                                                                                                y7) of wild33 {
                                                                                                        GHC.Types.False
                                                                                                        -> GHC.Types.True
                                                                                                        GHC.Types.True
                                                                                                        -> case ww9 of wild34 { GHC.Types.D# x8 ->
                                                                                                           case ww26 of wild35 { GHC.Types.D# y8 ->
                                                                                                           case GHC.Prim.tagToEnum#
                                                                                                                  @ GHC.Types.Bool
                                                                                                                  (GHC.Prim.<##
                                                                                                                     x8
                                                                                                                     y8) of wild36 {
                                                                                                             GHC.Types.False
                                                                                                             -> case GHC.Prim.tagToEnum#
                                                                                                                       @ GHC.Types.Bool
                                                                                                                       (GHC.Prim.==##
                                                                                                                          x8
                                                                                                                          y8) of wild37 {
                                                                                                                  GHC.Types.False
                                                                                                                  -> GHC.Types.True
                                                                                                                  GHC.Types.True
                                                                                                                  -> case ww10 of wild38 { GHC.Types.D# x9 ->
                                                                                                                     case ww27 of wild39 { GHC.Types.D# y9 ->
                                                                                                                     case GHC.Prim.tagToEnum#
                                                                                                                            @ GHC.Types.Bool
                                                                                                                            (GHC.Prim.<##
                                                                                                                               x9
                                                                                                                               y9) of wild40 {
                                                                                                                       GHC.Types.False
                                                                                                                       -> case GHC.Prim.tagToEnum#
                                                                                                                                 @ GHC.Types.Bool
                                                                                                                                 (GHC.Prim.==##
                                                                                                                                    x9
                                                                                                                                    y9) of wild41 {
                                                                                                                            GHC.Types.False
                                                                                                                            -> GHC.Types.True
                                                                                                                            GHC.Types.True
                                                                                                                            -> case ww11 of wild42 { GHC.Types.D# x10 ->
                                                                                                                               case ww28 of wild43 { GHC.Types.D# y10 ->
                                                                                                                               case GHC.Prim.tagToEnum#
                                                                                                                                      @ GHC.Types.Bool
                                                                                                                                      (GHC.Prim.<##
                                                                                                                                         x10
                                                                                                                                         y10) of wild44 {
                                                                                                                                 GHC.Types.False
                                                                                                                                 -> case GHC.Prim.tagToEnum#
                                                                                                                                           @ GHC.Types.Bool
                                                                                                                                           (GHC.Prim.==##
                                                                                                                                              x10
                                                                                                                                              y10) of wild45 {
                                                                                                                                      GHC.Types.False
                                                                                                                                      -> GHC.Types.True
                                                                                                                                      GHC.Types.True
                                                                                                                                      -> case ww12 of wild46 { GHC.Types.D# x11 ->
                                                                                                                                         case ww29 of wild47 { GHC.Types.D# y11 ->
                                                                                                                                         case GHC.Prim.tagToEnum#
                                                                                                                                                @ GHC.Types.Bool
                                                                                                                                                (GHC.Prim.<##
                                                                                                                                                   x11
                                                                                                                                                   y11) of wild48 {
                                                                                                                                           GHC.Types.False
                                                                                                                                           -> case GHC.Prim.tagToEnum#
                                                                                                                                                     @ GHC.Types.Bool
                                                                                                                                                     (GHC.Prim.==##
                                                                                                                                                        x11
                                                                                                                                                        y11) of wild49 {
                                                                                                                                                GHC.Types.False
                                                                                                                                                -> GHC.Types.True
                                                                                                                                                GHC.Types.True
                                                                                                                                                -> case ww13 of wild50 { GHC.Types.D# x12 ->
                                                                                                                                                   case ww30 of wild51 { GHC.Types.D# y12 ->
                                                                                                                                                   case GHC.Prim.tagToEnum#
                                                                                                                                                          @ GHC.Types.Bool
                                                                                                                                                          (GHC.Prim.<##
                                                                                                                                                             x12
                                                                                                                                                             y12) of wild52 {
                                                                                                                                                     GHC.Types.False
                                                                                                                                                     -> case GHC.Prim.tagToEnum#
                                                                                                                                                               @ GHC.Types.Bool
                                                                                                                                                               (GHC.Prim.==##
                                                                                                                                                                  x12
                                                                                                                                                                  y12) of wild53 {
                                                                                                                                                          GHC.Types.False
                                                                                                                                                          -> GHC.Types.True
                                                                                                                                                          GHC.Types.True
                                                                                                                                                          -> case ww14 of wild54 { GHC.Types.D# x13 ->
                                                                                                                                                             case ww31 of wild55 { GHC.Types.D# y13 ->
                                                                                                                                                             case GHC.Prim.tagToEnum#
                                                                                                                                                                    @ GHC.Types.Bool
                                                                                                                                                                    (GHC.Prim.<##
                                                                                                                                                                       x13
                                                                                                                                                                       y13) of wild56 {
                                                                                                                                                               GHC.Types.False
                                                                                                                                                               -> case GHC.Prim.tagToEnum#
                                                                                                                                                                         @ GHC.Types.Bool
                                                                                                                                                                         (GHC.Prim.==##
                                                                                                                                                                            x13
                                                                                                                                                                            y13) of wild57 {
                                                                                                                                                                    GHC.Types.False
                                                                                                                                                                    -> GHC.Types.True
                                                                                                                                                                    GHC.Types.True
                                                                                                                                                                    -> case ww15 of wild58 { GHC.Types.D# x14 ->
                                                                                                                                                                       case ww32 of wild59 { GHC.Types.D# y14 ->
                                                                                                                                                                       case GHC.Prim.tagToEnum#
                                                                                                                                                                              @ GHC.Types.Bool
                                                                                                                                                                              (GHC.Prim.<##
                                                                                                                                                                                 x14
                                                                                                                                                                                 y14) of wild60 {
                                                                                                                                                                         GHC.Types.False
                                                                                                                                                                         -> case GHC.Prim.tagToEnum#
                                                                                                                                                                                   @ GHC.Types.Bool
                                                                                                                                                                                   (GHC.Prim.==##
                                                                                                                                                                                      x14
                                                                                                                                                                                      y14) of wild61 {
                                                                                                                                                                              GHC.Types.False
                                                                                                                                                                              -> GHC.Types.True
                                                                                                                                                                              GHC.Types.True
                                                                                                                                                                              -> GHC.Classes.$fOrdDouble_$c>
                                                                                                                                                                                   ww16
                                                                                                                                                                                   ww33 }
                                                                                                                                                                         GHC.Types.True
                                                                                                                                                                         -> GHC.Types.False } } } }
                                                                                                                                                               GHC.Types.True
                                                                                                                                                               -> GHC.Types.False } } } }
                                                                                                                                                     GHC.Types.True
                                                                                                                                                     -> GHC.Types.False } } } }
                                                                                                                                           GHC.Types.True
                                                                                                                                           -> GHC.Types.False } } } }
                                                                                                                                 GHC.Types.True
                                                                                                                                 -> GHC.Types.False } } } }
                                                                                                                       GHC.Types.True
                                                                                                                       -> GHC.Types.False } } } }
                                                                                                             GHC.Types.True
                                                                                                             -> GHC.Types.False } } } }
                                                                                                   GHC.Types.True
                                                                                                   -> GHC.Types.False } } } }
                                                                                         GHC.Types.True
                                                                                         -> GHC.Types.False } } } }
                                                                               GHC.Types.True
                                                                               -> GHC.Types.False } } } }
                                                                     GHC.Types.True
                                                                     -> GHC.Types.False } } } }
                                                           GHC.Types.True -> GHC.Types.False } } } }
                                                 GHC.Types.True -> GHC.Types.False } } } }
                                       GHC.Types.True -> GHC.Types.False } } } }
                             GHC.Types.True -> GHC.Types.False } } } }
                   GHC.Types.True -> GHC.Types.False }) -}
6c7a8834cf050f15025e3fd021981f0f
  $w$c>1 ::
    GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Char
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Float
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Float
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Float
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Char
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Float
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Float
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Float
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Bool
  {- Arity: 54, HasNoCafRefs,
     Strictness: <S,U><L,1*U><L,1*U><L,1*U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><S,U><L,1*U><L,1*U><L,1*U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0] -}
9c984935e5a4c7cdb6f98f85362f7444
  $w$c>2 ::
    GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Bool
  {- Arity: 34, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Double#)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: GHC.Types.Double)
                   (ww3 :: GHC.Types.Double)
                   (ww4 :: GHC.Types.Double)
                   (ww5 :: GHC.Types.Double)
                   (ww6 :: GHC.Types.Double)
                   (ww7 :: GHC.Types.Double)
                   (ww8 :: GHC.Types.Double)
                   (ww9 :: GHC.Types.Double)
                   (ww10 :: GHC.Types.Double)
                   (ww11 :: GHC.Types.Double)
                   (ww12 :: GHC.Types.Double)
                   (ww13 :: GHC.Types.Double)
                   (ww14 :: GHC.Types.Double)
                   (ww15 :: GHC.Types.Double)
                   (ww16 :: GHC.Types.Double)
                   (ww17 :: GHC.Prim.Double#)
                   (ww18 :: GHC.Types.Double)
                   (ww19 :: GHC.Types.Double)
                   (ww20 :: GHC.Types.Double)
                   (ww21 :: GHC.Types.Double)
                   (ww22 :: GHC.Types.Double)
                   (ww23 :: GHC.Types.Double)
                   (ww24 :: GHC.Types.Double)
                   (ww25 :: GHC.Types.Double)
                   (ww26 :: GHC.Types.Double)
                   (ww27 :: GHC.Types.Double)
                   (ww28 :: GHC.Types.Double)
                   (ww29 :: GHC.Types.Double)
                   (ww30 :: GHC.Types.Double)
                   (ww31 :: GHC.Types.Double)
                   (ww32 :: GHC.Types.Double)
                   (ww33 :: GHC.Types.Double) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<## ww ww17) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==## ww ww17) of wild3 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True
                        -> case ww1 of wild { GHC.Types.D# x ->
                           case ww18 of wild1 { GHC.Types.D# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<## x y) of wild4 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==## x y) of wild5 {
                                  GHC.Types.False -> GHC.Types.True
                                  GHC.Types.True
                                  -> case ww2 of wild6 { GHC.Types.D# x1 ->
                                     case ww19 of wild7 { GHC.Types.D# y1 ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.<## x1 y1) of wild8 {
                                       GHC.Types.False
                                       -> case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 (GHC.Prim.==## x1 y1) of wild9 {
                                            GHC.Types.False -> GHC.Types.True
                                            GHC.Types.True
                                            -> case ww3 of wild10 { GHC.Types.D# x2 ->
                                               case ww20 of wild11 { GHC.Types.D# y2 ->
                                               case GHC.Prim.tagToEnum#
                                                      @ GHC.Types.Bool
                                                      (GHC.Prim.<## x2 y2) of wild12 {
                                                 GHC.Types.False
                                                 -> case GHC.Prim.tagToEnum#
                                                           @ GHC.Types.Bool
                                                           (GHC.Prim.==## x2 y2) of wild13 {
                                                      GHC.Types.False -> GHC.Types.True
                                                      GHC.Types.True
                                                      -> case ww4 of wild14 { GHC.Types.D# x3 ->
                                                         case ww21 of wild15 { GHC.Types.D# y3 ->
                                                         case GHC.Prim.tagToEnum#
                                                                @ GHC.Types.Bool
                                                                (GHC.Prim.<## x3 y3) of wild16 {
                                                           GHC.Types.False
                                                           -> case GHC.Prim.tagToEnum#
                                                                     @ GHC.Types.Bool
                                                                     (GHC.Prim.==##
                                                                        x3
                                                                        y3) of wild17 {
                                                                GHC.Types.False -> GHC.Types.True
                                                                GHC.Types.True
                                                                -> case ww5 of wild18 { GHC.Types.D# x4 ->
                                                                   case ww22 of wild19 { GHC.Types.D# y4 ->
                                                                   case GHC.Prim.tagToEnum#
                                                                          @ GHC.Types.Bool
                                                                          (GHC.Prim.<##
                                                                             x4
                                                                             y4) of wild20 {
                                                                     GHC.Types.False
                                                                     -> case GHC.Prim.tagToEnum#
                                                                               @ GHC.Types.Bool
                                                                               (GHC.Prim.==##
                                                                                  x4
                                                                                  y4) of wild21 {
                                                                          GHC.Types.False
                                                                          -> GHC.Types.True
                                                                          GHC.Types.True
                                                                          -> case ww6 of wild22 { GHC.Types.D# x5 ->
                                                                             case ww23 of wild23 { GHC.Types.D# y5 ->
                                                                             case GHC.Prim.tagToEnum#
                                                                                    @ GHC.Types.Bool
                                                                                    (GHC.Prim.<##
                                                                                       x5
                                                                                       y5) of wild24 {
                                                                               GHC.Types.False
                                                                               -> case GHC.Prim.tagToEnum#
                                                                                         @ GHC.Types.Bool
                                                                                         (GHC.Prim.==##
                                                                                            x5
                                                                                            y5) of wild25 {
                                                                                    GHC.Types.False
                                                                                    -> GHC.Types.True
                                                                                    GHC.Types.True
                                                                                    -> case ww7 of wild26 { GHC.Types.D# x6 ->
                                                                                       case ww24 of wild27 { GHC.Types.D# y6 ->
                                                                                       case GHC.Prim.tagToEnum#
                                                                                              @ GHC.Types.Bool
                                                                                              (GHC.Prim.<##
                                                                                                 x6
                                                                                                 y6) of wild28 {
                                                                                         GHC.Types.False
                                                                                         -> case GHC.Prim.tagToEnum#
                                                                                                   @ GHC.Types.Bool
                                                                                                   (GHC.Prim.==##
                                                                                                      x6
                                                                                                      y6) of wild29 {
                                                                                              GHC.Types.False
                                                                                              -> GHC.Types.True
                                                                                              GHC.Types.True
                                                                                              -> case ww8 of wild30 { GHC.Types.D# x7 ->
                                                                                                 case ww25 of wild31 { GHC.Types.D# y7 ->
                                                                                                 case GHC.Prim.tagToEnum#
                                                                                                        @ GHC.Types.Bool
                                                                                                        (GHC.Prim.<##
                                                                                                           x7
                                                                                                           y7) of wild32 {
                                                                                                   GHC.Types.False
                                                                                                   -> case GHC.Prim.tagToEnum#
                                                                                                             @ GHC.Types.Bool
                                                                                                             (GHC.Prim.==##
                                                                                                                x7
                                                                                                                y7) of wild33 {
                                                                                                        GHC.Types.False
                                                                                                        -> GHC.Types.True
                                                                                                        GHC.Types.True
                                                                                                        -> case ww9 of wild34 { GHC.Types.D# x8 ->
                                                                                                           case ww26 of wild35 { GHC.Types.D# y8 ->
                                                                                                           case GHC.Prim.tagToEnum#
                                                                                                                  @ GHC.Types.Bool
                                                                                                                  (GHC.Prim.<##
                                                                                                                     x8
                                                                                                                     y8) of wild36 {
                                                                                                             GHC.Types.False
                                                                                                             -> case GHC.Prim.tagToEnum#
                                                                                                                       @ GHC.Types.Bool
                                                                                                                       (GHC.Prim.==##
                                                                                                                          x8
                                                                                                                          y8) of wild37 {
                                                                                                                  GHC.Types.False
                                                                                                                  -> GHC.Types.True
                                                                                                                  GHC.Types.True
                                                                                                                  -> case ww10 of wild38 { GHC.Types.D# x9 ->
                                                                                                                     case ww27 of wild39 { GHC.Types.D# y9 ->
                                                                                                                     case GHC.Prim.tagToEnum#
                                                                                                                            @ GHC.Types.Bool
                                                                                                                            (GHC.Prim.<##
                                                                                                                               x9
                                                                                                                               y9) of wild40 {
                                                                                                                       GHC.Types.False
                                                                                                                       -> case GHC.Prim.tagToEnum#
                                                                                                                                 @ GHC.Types.Bool
                                                                                                                                 (GHC.Prim.==##
                                                                                                                                    x9
                                                                                                                                    y9) of wild41 {
                                                                                                                            GHC.Types.False
                                                                                                                            -> GHC.Types.True
                                                                                                                            GHC.Types.True
                                                                                                                            -> case ww11 of wild42 { GHC.Types.D# x10 ->
                                                                                                                               case ww28 of wild43 { GHC.Types.D# y10 ->
                                                                                                                               case GHC.Prim.tagToEnum#
                                                                                                                                      @ GHC.Types.Bool
                                                                                                                                      (GHC.Prim.<##
                                                                                                                                         x10
                                                                                                                                         y10) of wild44 {
                                                                                                                                 GHC.Types.False
                                                                                                                                 -> case GHC.Prim.tagToEnum#
                                                                                                                                           @ GHC.Types.Bool
                                                                                                                                           (GHC.Prim.==##
                                                                                                                                              x10
                                                                                                                                              y10) of wild45 {
                                                                                                                                      GHC.Types.False
                                                                                                                                      -> GHC.Types.True
                                                                                                                                      GHC.Types.True
                                                                                                                                      -> case ww12 of wild46 { GHC.Types.D# x11 ->
                                                                                                                                         case ww29 of wild47 { GHC.Types.D# y11 ->
                                                                                                                                         case GHC.Prim.tagToEnum#
                                                                                                                                                @ GHC.Types.Bool
                                                                                                                                                (GHC.Prim.<##
                                                                                                                                                   x11
                                                                                                                                                   y11) of wild48 {
                                                                                                                                           GHC.Types.False
                                                                                                                                           -> case GHC.Prim.tagToEnum#
                                                                                                                                                     @ GHC.Types.Bool
                                                                                                                                                     (GHC.Prim.==##
                                                                                                                                                        x11
                                                                                                                                                        y11) of wild49 {
                                                                                                                                                GHC.Types.False
                                                                                                                                                -> GHC.Types.True
                                                                                                                                                GHC.Types.True
                                                                                                                                                -> case ww13 of wild50 { GHC.Types.D# x12 ->
                                                                                                                                                   case ww30 of wild51 { GHC.Types.D# y12 ->
                                                                                                                                                   case GHC.Prim.tagToEnum#
                                                                                                                                                          @ GHC.Types.Bool
                                                                                                                                                          (GHC.Prim.<##
                                                                                                                                                             x12
                                                                                                                                                             y12) of wild52 {
                                                                                                                                                     GHC.Types.False
                                                                                                                                                     -> case GHC.Prim.tagToEnum#
                                                                                                                                                               @ GHC.Types.Bool
                                                                                                                                                               (GHC.Prim.==##
                                                                                                                                                                  x12
                                                                                                                                                                  y12) of wild53 {
                                                                                                                                                          GHC.Types.False
                                                                                                                                                          -> GHC.Types.True
                                                                                                                                                          GHC.Types.True
                                                                                                                                                          -> case ww14 of wild54 { GHC.Types.D# x13 ->
                                                                                                                                                             case ww31 of wild55 { GHC.Types.D# y13 ->
                                                                                                                                                             case GHC.Prim.tagToEnum#
                                                                                                                                                                    @ GHC.Types.Bool
                                                                                                                                                                    (GHC.Prim.<##
                                                                                                                                                                       x13
                                                                                                                                                                       y13) of wild56 {
                                                                                                                                                               GHC.Types.False
                                                                                                                                                               -> case GHC.Prim.tagToEnum#
                                                                                                                                                                         @ GHC.Types.Bool
                                                                                                                                                                         (GHC.Prim.==##
                                                                                                                                                                            x13
                                                                                                                                                                            y13) of wild57 {
                                                                                                                                                                    GHC.Types.False
                                                                                                                                                                    -> GHC.Types.True
                                                                                                                                                                    GHC.Types.True
                                                                                                                                                                    -> case ww15 of wild58 { GHC.Types.D# x14 ->
                                                                                                                                                                       case ww32 of wild59 { GHC.Types.D# y14 ->
                                                                                                                                                                       case GHC.Prim.tagToEnum#
                                                                                                                                                                              @ GHC.Types.Bool
                                                                                                                                                                              (GHC.Prim.<##
                                                                                                                                                                                 x14
                                                                                                                                                                                 y14) of wild60 {
                                                                                                                                                                         GHC.Types.False
                                                                                                                                                                         -> case GHC.Prim.tagToEnum#
                                                                                                                                                                                   @ GHC.Types.Bool
                                                                                                                                                                                   (GHC.Prim.==##
                                                                                                                                                                                      x14
                                                                                                                                                                                      y14) of wild61 {
                                                                                                                                                                              GHC.Types.False
                                                                                                                                                                              -> GHC.Types.True
                                                                                                                                                                              GHC.Types.True
                                                                                                                                                                              -> GHC.Classes.$fOrdDouble_$c>
                                                                                                                                                                                   ww16
                                                                                                                                                                                   ww33 }
                                                                                                                                                                         GHC.Types.True
                                                                                                                                                                         -> GHC.Types.False } } } }
                                                                                                                                                               GHC.Types.True
                                                                                                                                                               -> GHC.Types.False } } } }
                                                                                                                                                     GHC.Types.True
                                                                                                                                                     -> GHC.Types.False } } } }
                                                                                                                                           GHC.Types.True
                                                                                                                                           -> GHC.Types.False } } } }
                                                                                                                                 GHC.Types.True
                                                                                                                                 -> GHC.Types.False } } } }
                                                                                                                       GHC.Types.True
                                                                                                                       -> GHC.Types.False } } } }
                                                                                                             GHC.Types.True
                                                                                                             -> GHC.Types.False } } } }
                                                                                                   GHC.Types.True
                                                                                                   -> GHC.Types.False } } } }
                                                                                         GHC.Types.True
                                                                                         -> GHC.Types.False } } } }
                                                                               GHC.Types.True
                                                                               -> GHC.Types.False } } } }
                                                                     GHC.Types.True
                                                                     -> GHC.Types.False } } } }
                                                           GHC.Types.True -> GHC.Types.False } } } }
                                                 GHC.Types.True -> GHC.Types.False } } } }
                                       GHC.Types.True -> GHC.Types.False } } } }
                             GHC.Types.True -> GHC.Types.False } } } }
                   GHC.Types.True -> GHC.Types.False }) -}
cdbb88590f2e28effb7c16a7eff8cbbe
  $w$c>3 ::
    GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> Types.Defense
    -> GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> Types.Defense
    -> GHC.Types.Bool
  {- Arity: 36, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Double#)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: GHC.Types.Double)
                   (ww3 :: GHC.Types.Double)
                   (ww4 :: GHC.Types.Double)
                   (ww5 :: GHC.Types.Double)
                   (ww6 :: GHC.Types.Double)
                   (ww7 :: GHC.Types.Double)
                   (ww8 :: GHC.Types.Double)
                   (ww9 :: GHC.Types.Double)
                   (ww10 :: GHC.Types.Double)
                   (ww11 :: GHC.Types.Double)
                   (ww12 :: GHC.Types.Double)
                   (ww13 :: GHC.Types.Double)
                   (ww14 :: GHC.Types.Double)
                   (ww15 :: GHC.Types.Double)
                   (ww16 :: GHC.Types.Double)
                   (ww17 :: Types.Defense)
                   (ww18 :: GHC.Prim.Double#)
                   (ww19 :: GHC.Types.Double)
                   (ww20 :: GHC.Types.Double)
                   (ww21 :: GHC.Types.Double)
                   (ww22 :: GHC.Types.Double)
                   (ww23 :: GHC.Types.Double)
                   (ww24 :: GHC.Types.Double)
                   (ww25 :: GHC.Types.Double)
                   (ww26 :: GHC.Types.Double)
                   (ww27 :: GHC.Types.Double)
                   (ww28 :: GHC.Types.Double)
                   (ww29 :: GHC.Types.Double)
                   (ww30 :: GHC.Types.Double)
                   (ww31 :: GHC.Types.Double)
                   (ww32 :: GHC.Types.Double)
                   (ww33 :: GHC.Types.Double)
                   (ww34 :: GHC.Types.Double)
                   (ww35 :: Types.Defense) ->
                 case Types.$w$ccompare2
                        ww
                        ww1
                        ww2
                        ww3
                        ww4
                        ww5
                        ww6
                        ww7
                        ww8
                        ww9
                        ww10
                        ww11
                        ww12
                        ww13
                        ww14
                        ww15
                        ww16
                        ww18
                        ww19
                        ww20
                        ww21
                        ww22
                        ww23
                        ww24
                        ww25
                        ww26
                        ww27
                        ww28
                        ww29
                        ww30
                        ww31
                        ww32
                        ww33
                        ww34 of wild {
                   GHC.Types.LT -> GHC.Types.False
                   GHC.Types.EQ -> Types.$fOrdDefense_$c> ww17 ww35
                   GHC.Types.GT -> GHC.Types.True }) -}
6da9b5e68e42493b28b2f355fd329848
  $w$c>4 ::
    GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
    -> GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
    -> GHC.Types.Bool
  {- Arity: 34, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U><L,1*U><L,1*U><S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Double#)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: GHC.Types.Double)
                   (ww3 :: GHC.Types.Double)
                   (ww4 :: GHC.Types.Double)
                   (ww5 :: GHC.Types.Double)
                   (ww6 :: GHC.Types.Double)
                   (ww7 :: GHC.Types.Double)
                   (ww8 :: GHC.Types.Double)
                   (ww9 :: GHC.Types.Double)
                   (ww10 :: GHC.Types.Double)
                   (ww11 :: GHC.Types.Double)
                   (ww12 :: GHC.Types.Double)
                   (ww13 :: GHC.Types.Double)
                   (ww14 :: [(Types.TeamName, Types.Wins, Types.Losses)])
                   (ww15 :: [(Types.TeamName, Types.Wins, Types.Losses)])
                   (ww16 :: [(Types.TeamName, Types.Wins, Types.Losses)])
                   (ww17 :: GHC.Prim.Double#)
                   (ww18 :: GHC.Types.Double)
                   (ww19 :: GHC.Types.Double)
                   (ww20 :: GHC.Types.Double)
                   (ww21 :: GHC.Types.Double)
                   (ww22 :: GHC.Types.Double)
                   (ww23 :: GHC.Types.Double)
                   (ww24 :: GHC.Types.Double)
                   (ww25 :: GHC.Types.Double)
                   (ww26 :: GHC.Types.Double)
                   (ww27 :: GHC.Types.Double)
                   (ww28 :: GHC.Types.Double)
                   (ww29 :: GHC.Types.Double)
                   (ww30 :: GHC.Types.Double)
                   (ww31 :: [(Types.TeamName, Types.Wins, Types.Losses)])
                   (ww32 :: [(Types.TeamName, Types.Wins, Types.Losses)])
                   (ww33 :: [(Types.TeamName, Types.Wins, Types.Losses)]) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<## ww ww17) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==## ww ww17) of wild3 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True
                        -> case ww1 of wild { GHC.Types.D# x ->
                           case ww18 of wild1 { GHC.Types.D# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<## x y) of wild4 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==## x y) of wild5 {
                                  GHC.Types.False -> GHC.Types.True
                                  GHC.Types.True
                                  -> case ww2 of wild6 { GHC.Types.D# x1 ->
                                     case ww19 of wild7 { GHC.Types.D# y1 ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.<## x1 y1) of wild8 {
                                       GHC.Types.False
                                       -> case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 (GHC.Prim.==## x1 y1) of wild9 {
                                            GHC.Types.False -> GHC.Types.True
                                            GHC.Types.True
                                            -> case ww3 of wild10 { GHC.Types.D# x2 ->
                                               case ww20 of wild11 { GHC.Types.D# y2 ->
                                               case GHC.Prim.tagToEnum#
                                                      @ GHC.Types.Bool
                                                      (GHC.Prim.<## x2 y2) of wild12 {
                                                 GHC.Types.False
                                                 -> case GHC.Prim.tagToEnum#
                                                           @ GHC.Types.Bool
                                                           (GHC.Prim.==## x2 y2) of wild13 {
                                                      GHC.Types.False -> GHC.Types.True
                                                      GHC.Types.True
                                                      -> case ww4 of wild14 { GHC.Types.D# x3 ->
                                                         case ww21 of wild15 { GHC.Types.D# y3 ->
                                                         case GHC.Prim.tagToEnum#
                                                                @ GHC.Types.Bool
                                                                (GHC.Prim.<## x3 y3) of wild16 {
                                                           GHC.Types.False
                                                           -> case GHC.Prim.tagToEnum#
                                                                     @ GHC.Types.Bool
                                                                     (GHC.Prim.==##
                                                                        x3
                                                                        y3) of wild17 {
                                                                GHC.Types.False -> GHC.Types.True
                                                                GHC.Types.True
                                                                -> case ww5 of wild18 { GHC.Types.D# x4 ->
                                                                   case ww22 of wild19 { GHC.Types.D# y4 ->
                                                                   case GHC.Prim.tagToEnum#
                                                                          @ GHC.Types.Bool
                                                                          (GHC.Prim.<##
                                                                             x4
                                                                             y4) of wild20 {
                                                                     GHC.Types.False
                                                                     -> case GHC.Prim.tagToEnum#
                                                                               @ GHC.Types.Bool
                                                                               (GHC.Prim.==##
                                                                                  x4
                                                                                  y4) of wild21 {
                                                                          GHC.Types.False
                                                                          -> GHC.Types.True
                                                                          GHC.Types.True
                                                                          -> case ww6 of wild22 { GHC.Types.D# x5 ->
                                                                             case ww23 of wild23 { GHC.Types.D# y5 ->
                                                                             case GHC.Prim.tagToEnum#
                                                                                    @ GHC.Types.Bool
                                                                                    (GHC.Prim.<##
                                                                                       x5
                                                                                       y5) of wild24 {
                                                                               GHC.Types.False
                                                                               -> case GHC.Prim.tagToEnum#
                                                                                         @ GHC.Types.Bool
                                                                                         (GHC.Prim.==##
                                                                                            x5
                                                                                            y5) of wild25 {
                                                                                    GHC.Types.False
                                                                                    -> GHC.Types.True
                                                                                    GHC.Types.True
                                                                                    -> case ww7 of wild26 { GHC.Types.D# x6 ->
                                                                                       case ww24 of wild27 { GHC.Types.D# y6 ->
                                                                                       case GHC.Prim.tagToEnum#
                                                                                              @ GHC.Types.Bool
                                                                                              (GHC.Prim.<##
                                                                                                 x6
                                                                                                 y6) of wild28 {
                                                                                         GHC.Types.False
                                                                                         -> case GHC.Prim.tagToEnum#
                                                                                                   @ GHC.Types.Bool
                                                                                                   (GHC.Prim.==##
                                                                                                      x6
                                                                                                      y6) of wild29 {
                                                                                              GHC.Types.False
                                                                                              -> GHC.Types.True
                                                                                              GHC.Types.True
                                                                                              -> case ww8 of wild30 { GHC.Types.D# x7 ->
                                                                                                 case ww25 of wild31 { GHC.Types.D# y7 ->
                                                                                                 case GHC.Prim.tagToEnum#
                                                                                                        @ GHC.Types.Bool
                                                                                                        (GHC.Prim.<##
                                                                                                           x7
                                                                                                           y7) of wild32 {
                                                                                                   GHC.Types.False
                                                                                                   -> case GHC.Prim.tagToEnum#
                                                                                                             @ GHC.Types.Bool
                                                                                                             (GHC.Prim.==##
                                                                                                                x7
                                                                                                                y7) of wild33 {
                                                                                                        GHC.Types.False
                                                                                                        -> GHC.Types.True
                                                                                                        GHC.Types.True
                                                                                                        -> case ww9 of wild34 { GHC.Types.D# x8 ->
                                                                                                           case ww26 of wild35 { GHC.Types.D# y8 ->
                                                                                                           case GHC.Prim.tagToEnum#
                                                                                                                  @ GHC.Types.Bool
                                                                                                                  (GHC.Prim.<##
                                                                                                                     x8
                                                                                                                     y8) of wild36 {
                                                                                                             GHC.Types.False
                                                                                                             -> case GHC.Prim.tagToEnum#
                                                                                                                       @ GHC.Types.Bool
                                                                                                                       (GHC.Prim.==##
                                                                                                                          x8
                                                                                                                          y8) of wild37 {
                                                                                                                  GHC.Types.False
                                                                                                                  -> GHC.Types.True
                                                                                                                  GHC.Types.True
                                                                                                                  -> case ww10 of wild38 { GHC.Types.D# x9 ->
                                                                                                                     case ww27 of wild39 { GHC.Types.D# y9 ->
                                                                                                                     case GHC.Prim.tagToEnum#
                                                                                                                            @ GHC.Types.Bool
                                                                                                                            (GHC.Prim.<##
                                                                                                                               x9
                                                                                                                               y9) of wild40 {
                                                                                                                       GHC.Types.False
                                                                                                                       -> case GHC.Prim.tagToEnum#
                                                                                                                                 @ GHC.Types.Bool
                                                                                                                                 (GHC.Prim.==##
                                                                                                                                    x9
                                                                                                                                    y9) of wild41 {
                                                                                                                            GHC.Types.False
                                                                                                                            -> GHC.Types.True
                                                                                                                            GHC.Types.True
                                                                                                                            -> case ww11 of wild42 { GHC.Types.D# x10 ->
                                                                                                                               case ww28 of wild43 { GHC.Types.D# y10 ->
                                                                                                                               case GHC.Prim.tagToEnum#
                                                                                                                                      @ GHC.Types.Bool
                                                                                                                                      (GHC.Prim.<##
                                                                                                                                         x10
                                                                                                                                         y10) of wild44 {
                                                                                                                                 GHC.Types.False
                                                                                                                                 -> case GHC.Prim.tagToEnum#
                                                                                                                                           @ GHC.Types.Bool
                                                                                                                                           (GHC.Prim.==##
                                                                                                                                              x10
                                                                                                                                              y10) of wild45 {
                                                                                                                                      GHC.Types.False
                                                                                                                                      -> GHC.Types.True
                                                                                                                                      GHC.Types.True
                                                                                                                                      -> case ww12 of wild46 { GHC.Types.D# x11 ->
                                                                                                                                         case ww29 of wild47 { GHC.Types.D# y11 ->
                                                                                                                                         case GHC.Prim.tagToEnum#
                                                                                                                                                @ GHC.Types.Bool
                                                                                                                                                (GHC.Prim.<##
                                                                                                                                                   x11
                                                                                                                                                   y11) of wild48 {
                                                                                                                                           GHC.Types.False
                                                                                                                                           -> case GHC.Prim.tagToEnum#
                                                                                                                                                     @ GHC.Types.Bool
                                                                                                                                                     (GHC.Prim.==##
                                                                                                                                                        x11
                                                                                                                                                        y11) of wild49 {
                                                                                                                                                GHC.Types.False
                                                                                                                                                -> GHC.Types.True
                                                                                                                                                GHC.Types.True
                                                                                                                                                -> case ww13 of wild50 { GHC.Types.D# x12 ->
                                                                                                                                                   case ww30 of wild51 { GHC.Types.D# y12 ->
                                                                                                                                                   case GHC.Prim.tagToEnum#
                                                                                                                                                          @ GHC.Types.Bool
                                                                                                                                                          (GHC.Prim.<##
                                                                                                                                                             x12
                                                                                                                                                             y12) of wild52 {
                                                                                                                                                     GHC.Types.False
                                                                                                                                                     -> case GHC.Prim.tagToEnum#
                                                                                                                                                               @ GHC.Types.Bool
                                                                                                                                                               (GHC.Prim.==##
                                                                                                                                                                  x12
                                                                                                                                                                  y12) of wild53 {
                                                                                                                                                          GHC.Types.False
                                                                                                                                                          -> GHC.Types.True
                                                                                                                                                          GHC.Types.True
                                                                                                                                                          -> case GHC.Classes.$fOrd[]_$ccompare
                                                                                                                                                                    @ (Types.TeamName,
                                                                                                                                                                       Types.Wins,
                                                                                                                                                                       Types.Losses)
                                                                                                                                                                    Types.$fOrdWinningTeamStats_$s$fOrd(,,)
                                                                                                                                                                    ww14
                                                                                                                                                                    ww31 of wild54 {
                                                                                                                                                               GHC.Types.LT
                                                                                                                                                               -> GHC.Types.False
                                                                                                                                                               GHC.Types.EQ
                                                                                                                                                               -> case GHC.Classes.$fOrd[]_$ccompare
                                                                                                                                                                         @ (Types.TeamName,
                                                                                                                                                                            Types.Wins,
                                                                                                                                                                            Types.Losses)
                                                                                                                                                                         Types.$fOrdWinningTeamStats_$s$fOrd(,,)
                                                                                                                                                                         ww15
                                                                                                                                                                         ww32 of wild55 {
                                                                                                                                                                    GHC.Types.LT
                                                                                                                                                                    -> GHC.Types.False
                                                                                                                                                                    GHC.Types.EQ
                                                                                                                                                                    -> case GHC.Classes.$fOrd[]_$ccompare
                                                                                                                                                                              @ (Types.TeamName,
                                                                                                                                                                                 Types.Wins,
                                                                                                                                                                                 Types.Losses)
                                                                                                                                                                              Types.$fOrdWinningTeamStats_$s$fOrd(,,)
                                                                                                                                                                              ww16
                                                                                                                                                                              ww33 of wild56 {
                                                                                                                                                                         DEFAULT
                                                                                                                                                                         -> GHC.Types.False
                                                                                                                                                                         GHC.Types.GT
                                                                                                                                                                         -> GHC.Types.True }
                                                                                                                                                                    GHC.Types.GT
                                                                                                                                                                    -> GHC.Types.True }
                                                                                                                                                               GHC.Types.GT
                                                                                                                                                               -> GHC.Types.True } }
                                                                                                                                                     GHC.Types.True
                                                                                                                                                     -> GHC.Types.False } } } }
                                                                                                                                           GHC.Types.True
                                                                                                                                           -> GHC.Types.False } } } }
                                                                                                                                 GHC.Types.True
                                                                                                                                 -> GHC.Types.False } } } }
                                                                                                                       GHC.Types.True
                                                                                                                       -> GHC.Types.False } } } }
                                                                                                             GHC.Types.True
                                                                                                             -> GHC.Types.False } } } }
                                                                                                   GHC.Types.True
                                                                                                   -> GHC.Types.False } } } }
                                                                                         GHC.Types.True
                                                                                         -> GHC.Types.False } } } }
                                                                               GHC.Types.True
                                                                               -> GHC.Types.False } } } }
                                                                     GHC.Types.True
                                                                     -> GHC.Types.False } } } }
                                                           GHC.Types.True -> GHC.Types.False } } } }
                                                 GHC.Types.True -> GHC.Types.False } } } }
                                       GHC.Types.True -> GHC.Types.False } } } }
                             GHC.Types.True -> GHC.Types.False } } } }
                   GHC.Types.True -> GHC.Types.False }) -}
1e6108092190127c9e6bef24268274f5
  $w$c>= ::
    GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Bool
  {- Arity: 34, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Double#)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: GHC.Types.Double)
                   (ww3 :: GHC.Types.Double)
                   (ww4 :: GHC.Types.Double)
                   (ww5 :: GHC.Types.Double)
                   (ww6 :: GHC.Types.Double)
                   (ww7 :: GHC.Types.Double)
                   (ww8 :: GHC.Types.Double)
                   (ww9 :: GHC.Types.Double)
                   (ww10 :: GHC.Types.Double)
                   (ww11 :: GHC.Types.Double)
                   (ww12 :: GHC.Types.Double)
                   (ww13 :: GHC.Types.Double)
                   (ww14 :: GHC.Types.Double)
                   (ww15 :: GHC.Types.Double)
                   (ww16 :: GHC.Types.Double)
                   (ww17 :: GHC.Prim.Double#)
                   (ww18 :: GHC.Types.Double)
                   (ww19 :: GHC.Types.Double)
                   (ww20 :: GHC.Types.Double)
                   (ww21 :: GHC.Types.Double)
                   (ww22 :: GHC.Types.Double)
                   (ww23 :: GHC.Types.Double)
                   (ww24 :: GHC.Types.Double)
                   (ww25 :: GHC.Types.Double)
                   (ww26 :: GHC.Types.Double)
                   (ww27 :: GHC.Types.Double)
                   (ww28 :: GHC.Types.Double)
                   (ww29 :: GHC.Types.Double)
                   (ww30 :: GHC.Types.Double)
                   (ww31 :: GHC.Types.Double)
                   (ww32 :: GHC.Types.Double)
                   (ww33 :: GHC.Types.Double) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<## ww ww17) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==## ww ww17) of wild3 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True
                        -> case ww1 of wild { GHC.Types.D# x ->
                           case ww18 of wild1 { GHC.Types.D# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<## x y) of wild4 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==## x y) of wild5 {
                                  GHC.Types.False -> GHC.Types.True
                                  GHC.Types.True
                                  -> case ww2 of wild6 { GHC.Types.D# x1 ->
                                     case ww19 of wild7 { GHC.Types.D# y1 ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.<## x1 y1) of wild8 {
                                       GHC.Types.False
                                       -> case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 (GHC.Prim.==## x1 y1) of wild9 {
                                            GHC.Types.False -> GHC.Types.True
                                            GHC.Types.True
                                            -> case ww3 of wild10 { GHC.Types.D# x2 ->
                                               case ww20 of wild11 { GHC.Types.D# y2 ->
                                               case GHC.Prim.tagToEnum#
                                                      @ GHC.Types.Bool
                                                      (GHC.Prim.<## x2 y2) of wild12 {
                                                 GHC.Types.False
                                                 -> case GHC.Prim.tagToEnum#
                                                           @ GHC.Types.Bool
                                                           (GHC.Prim.==## x2 y2) of wild13 {
                                                      GHC.Types.False -> GHC.Types.True
                                                      GHC.Types.True
                                                      -> case ww4 of wild14 { GHC.Types.D# x3 ->
                                                         case ww21 of wild15 { GHC.Types.D# y3 ->
                                                         case GHC.Prim.tagToEnum#
                                                                @ GHC.Types.Bool
                                                                (GHC.Prim.<## x3 y3) of wild16 {
                                                           GHC.Types.False
                                                           -> case GHC.Prim.tagToEnum#
                                                                     @ GHC.Types.Bool
                                                                     (GHC.Prim.==##
                                                                        x3
                                                                        y3) of wild17 {
                                                                GHC.Types.False -> GHC.Types.True
                                                                GHC.Types.True
                                                                -> case ww5 of wild18 { GHC.Types.D# x4 ->
                                                                   case ww22 of wild19 { GHC.Types.D# y4 ->
                                                                   case GHC.Prim.tagToEnum#
                                                                          @ GHC.Types.Bool
                                                                          (GHC.Prim.<##
                                                                             x4
                                                                             y4) of wild20 {
                                                                     GHC.Types.False
                                                                     -> case GHC.Prim.tagToEnum#
                                                                               @ GHC.Types.Bool
                                                                               (GHC.Prim.==##
                                                                                  x4
                                                                                  y4) of wild21 {
                                                                          GHC.Types.False
                                                                          -> GHC.Types.True
                                                                          GHC.Types.True
                                                                          -> case ww6 of wild22 { GHC.Types.D# x5 ->
                                                                             case ww23 of wild23 { GHC.Types.D# y5 ->
                                                                             case GHC.Prim.tagToEnum#
                                                                                    @ GHC.Types.Bool
                                                                                    (GHC.Prim.<##
                                                                                       x5
                                                                                       y5) of wild24 {
                                                                               GHC.Types.False
                                                                               -> case GHC.Prim.tagToEnum#
                                                                                         @ GHC.Types.Bool
                                                                                         (GHC.Prim.==##
                                                                                            x5
                                                                                            y5) of wild25 {
                                                                                    GHC.Types.False
                                                                                    -> GHC.Types.True
                                                                                    GHC.Types.True
                                                                                    -> case ww7 of wild26 { GHC.Types.D# x6 ->
                                                                                       case ww24 of wild27 { GHC.Types.D# y6 ->
                                                                                       case GHC.Prim.tagToEnum#
                                                                                              @ GHC.Types.Bool
                                                                                              (GHC.Prim.<##
                                                                                                 x6
                                                                                                 y6) of wild28 {
                                                                                         GHC.Types.False
                                                                                         -> case GHC.Prim.tagToEnum#
                                                                                                   @ GHC.Types.Bool
                                                                                                   (GHC.Prim.==##
                                                                                                      x6
                                                                                                      y6) of wild29 {
                                                                                              GHC.Types.False
                                                                                              -> GHC.Types.True
                                                                                              GHC.Types.True
                                                                                              -> case ww8 of wild30 { GHC.Types.D# x7 ->
                                                                                                 case ww25 of wild31 { GHC.Types.D# y7 ->
                                                                                                 case GHC.Prim.tagToEnum#
                                                                                                        @ GHC.Types.Bool
                                                                                                        (GHC.Prim.<##
                                                                                                           x7
                                                                                                           y7) of wild32 {
                                                                                                   GHC.Types.False
                                                                                                   -> case GHC.Prim.tagToEnum#
                                                                                                             @ GHC.Types.Bool
                                                                                                             (GHC.Prim.==##
                                                                                                                x7
                                                                                                                y7) of wild33 {
                                                                                                        GHC.Types.False
                                                                                                        -> GHC.Types.True
                                                                                                        GHC.Types.True
                                                                                                        -> case ww9 of wild34 { GHC.Types.D# x8 ->
                                                                                                           case ww26 of wild35 { GHC.Types.D# y8 ->
                                                                                                           case GHC.Prim.tagToEnum#
                                                                                                                  @ GHC.Types.Bool
                                                                                                                  (GHC.Prim.<##
                                                                                                                     x8
                                                                                                                     y8) of wild36 {
                                                                                                             GHC.Types.False
                                                                                                             -> case GHC.Prim.tagToEnum#
                                                                                                                       @ GHC.Types.Bool
                                                                                                                       (GHC.Prim.==##
                                                                                                                          x8
                                                                                                                          y8) of wild37 {
                                                                                                                  GHC.Types.False
                                                                                                                  -> GHC.Types.True
                                                                                                                  GHC.Types.True
                                                                                                                  -> case ww10 of wild38 { GHC.Types.D# x9 ->
                                                                                                                     case ww27 of wild39 { GHC.Types.D# y9 ->
                                                                                                                     case GHC.Prim.tagToEnum#
                                                                                                                            @ GHC.Types.Bool
                                                                                                                            (GHC.Prim.<##
                                                                                                                               x9
                                                                                                                               y9) of wild40 {
                                                                                                                       GHC.Types.False
                                                                                                                       -> case GHC.Prim.tagToEnum#
                                                                                                                                 @ GHC.Types.Bool
                                                                                                                                 (GHC.Prim.==##
                                                                                                                                    x9
                                                                                                                                    y9) of wild41 {
                                                                                                                            GHC.Types.False
                                                                                                                            -> GHC.Types.True
                                                                                                                            GHC.Types.True
                                                                                                                            -> case ww11 of wild42 { GHC.Types.D# x10 ->
                                                                                                                               case ww28 of wild43 { GHC.Types.D# y10 ->
                                                                                                                               case GHC.Prim.tagToEnum#
                                                                                                                                      @ GHC.Types.Bool
                                                                                                                                      (GHC.Prim.<##
                                                                                                                                         x10
                                                                                                                                         y10) of wild44 {
                                                                                                                                 GHC.Types.False
                                                                                                                                 -> case GHC.Prim.tagToEnum#
                                                                                                                                           @ GHC.Types.Bool
                                                                                                                                           (GHC.Prim.==##
                                                                                                                                              x10
                                                                                                                                              y10) of wild45 {
                                                                                                                                      GHC.Types.False
                                                                                                                                      -> GHC.Types.True
                                                                                                                                      GHC.Types.True
                                                                                                                                      -> case ww12 of wild46 { GHC.Types.D# x11 ->
                                                                                                                                         case ww29 of wild47 { GHC.Types.D# y11 ->
                                                                                                                                         case GHC.Prim.tagToEnum#
                                                                                                                                                @ GHC.Types.Bool
                                                                                                                                                (GHC.Prim.<##
                                                                                                                                                   x11
                                                                                                                                                   y11) of wild48 {
                                                                                                                                           GHC.Types.False
                                                                                                                                           -> case GHC.Prim.tagToEnum#
                                                                                                                                                     @ GHC.Types.Bool
                                                                                                                                                     (GHC.Prim.==##
                                                                                                                                                        x11
                                                                                                                                                        y11) of wild49 {
                                                                                                                                                GHC.Types.False
                                                                                                                                                -> GHC.Types.True
                                                                                                                                                GHC.Types.True
                                                                                                                                                -> case ww13 of wild50 { GHC.Types.D# x12 ->
                                                                                                                                                   case ww30 of wild51 { GHC.Types.D# y12 ->
                                                                                                                                                   case GHC.Prim.tagToEnum#
                                                                                                                                                          @ GHC.Types.Bool
                                                                                                                                                          (GHC.Prim.<##
                                                                                                                                                             x12
                                                                                                                                                             y12) of wild52 {
                                                                                                                                                     GHC.Types.False
                                                                                                                                                     -> case GHC.Prim.tagToEnum#
                                                                                                                                                               @ GHC.Types.Bool
                                                                                                                                                               (GHC.Prim.==##
                                                                                                                                                                  x12
                                                                                                                                                                  y12) of wild53 {
                                                                                                                                                          GHC.Types.False
                                                                                                                                                          -> GHC.Types.True
                                                                                                                                                          GHC.Types.True
                                                                                                                                                          -> case ww14 of wild54 { GHC.Types.D# x13 ->
                                                                                                                                                             case ww31 of wild55 { GHC.Types.D# y13 ->
                                                                                                                                                             case GHC.Prim.tagToEnum#
                                                                                                                                                                    @ GHC.Types.Bool
                                                                                                                                                                    (GHC.Prim.<##
                                                                                                                                                                       x13
                                                                                                                                                                       y13) of wild56 {
                                                                                                                                                               GHC.Types.False
                                                                                                                                                               -> case GHC.Prim.tagToEnum#
                                                                                                                                                                         @ GHC.Types.Bool
                                                                                                                                                                         (GHC.Prim.==##
                                                                                                                                                                            x13
                                                                                                                                                                            y13) of wild57 {
                                                                                                                                                                    GHC.Types.False
                                                                                                                                                                    -> GHC.Types.True
                                                                                                                                                                    GHC.Types.True
                                                                                                                                                                    -> case ww15 of wild58 { GHC.Types.D# x14 ->
                                                                                                                                                                       case ww32 of wild59 { GHC.Types.D# y14 ->
                                                                                                                                                                       case GHC.Prim.tagToEnum#
                                                                                                                                                                              @ GHC.Types.Bool
                                                                                                                                                                              (GHC.Prim.<##
                                                                                                                                                                                 x14
                                                                                                                                                                                 y14) of wild60 {
                                                                                                                                                                         GHC.Types.False
                                                                                                                                                                         -> case GHC.Prim.tagToEnum#
                                                                                                                                                                                   @ GHC.Types.Bool
                                                                                                                                                                                   (GHC.Prim.==##
                                                                                                                                                                                      x14
                                                                                                                                                                                      y14) of wild61 {
                                                                                                                                                                              GHC.Types.False
                                                                                                                                                                              -> GHC.Types.True
                                                                                                                                                                              GHC.Types.True
                                                                                                                                                                              -> GHC.Classes.$fOrdDouble_$c>=
                                                                                                                                                                                   ww16
                                                                                                                                                                                   ww33 }
                                                                                                                                                                         GHC.Types.True
                                                                                                                                                                         -> GHC.Types.False } } } }
                                                                                                                                                               GHC.Types.True
                                                                                                                                                               -> GHC.Types.False } } } }
                                                                                                                                                     GHC.Types.True
                                                                                                                                                     -> GHC.Types.False } } } }
                                                                                                                                           GHC.Types.True
                                                                                                                                           -> GHC.Types.False } } } }
                                                                                                                                 GHC.Types.True
                                                                                                                                 -> GHC.Types.False } } } }
                                                                                                                       GHC.Types.True
                                                                                                                       -> GHC.Types.False } } } }
                                                                                                             GHC.Types.True
                                                                                                             -> GHC.Types.False } } } }
                                                                                                   GHC.Types.True
                                                                                                   -> GHC.Types.False } } } }
                                                                                         GHC.Types.True
                                                                                         -> GHC.Types.False } } } }
                                                                               GHC.Types.True
                                                                               -> GHC.Types.False } } } }
                                                                     GHC.Types.True
                                                                     -> GHC.Types.False } } } }
                                                           GHC.Types.True -> GHC.Types.False } } } }
                                                 GHC.Types.True -> GHC.Types.False } } } }
                                       GHC.Types.True -> GHC.Types.False } } } }
                             GHC.Types.True -> GHC.Types.False } } } }
                   GHC.Types.True -> GHC.Types.False }) -}
02a59bd5905a436e41d5cf739cc875fc
  $w$c>=1 ::
    GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Char
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Float
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Float
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Float
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Char
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Float
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Float
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Float
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Bool
  {- Arity: 54, HasNoCafRefs,
     Strictness: <S,U><L,1*U><L,1*U><L,1*U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><S,U><L,1*U><L,1*U><L,1*U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0] -}
65f957059b1e73bea36986a12e372204
  $w$c>=2 ::
    GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Bool
  {- Arity: 34, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Double#)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: GHC.Types.Double)
                   (ww3 :: GHC.Types.Double)
                   (ww4 :: GHC.Types.Double)
                   (ww5 :: GHC.Types.Double)
                   (ww6 :: GHC.Types.Double)
                   (ww7 :: GHC.Types.Double)
                   (ww8 :: GHC.Types.Double)
                   (ww9 :: GHC.Types.Double)
                   (ww10 :: GHC.Types.Double)
                   (ww11 :: GHC.Types.Double)
                   (ww12 :: GHC.Types.Double)
                   (ww13 :: GHC.Types.Double)
                   (ww14 :: GHC.Types.Double)
                   (ww15 :: GHC.Types.Double)
                   (ww16 :: GHC.Types.Double)
                   (ww17 :: GHC.Prim.Double#)
                   (ww18 :: GHC.Types.Double)
                   (ww19 :: GHC.Types.Double)
                   (ww20 :: GHC.Types.Double)
                   (ww21 :: GHC.Types.Double)
                   (ww22 :: GHC.Types.Double)
                   (ww23 :: GHC.Types.Double)
                   (ww24 :: GHC.Types.Double)
                   (ww25 :: GHC.Types.Double)
                   (ww26 :: GHC.Types.Double)
                   (ww27 :: GHC.Types.Double)
                   (ww28 :: GHC.Types.Double)
                   (ww29 :: GHC.Types.Double)
                   (ww30 :: GHC.Types.Double)
                   (ww31 :: GHC.Types.Double)
                   (ww32 :: GHC.Types.Double)
                   (ww33 :: GHC.Types.Double) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<## ww ww17) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==## ww ww17) of wild3 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True
                        -> case ww1 of wild { GHC.Types.D# x ->
                           case ww18 of wild1 { GHC.Types.D# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<## x y) of wild4 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==## x y) of wild5 {
                                  GHC.Types.False -> GHC.Types.True
                                  GHC.Types.True
                                  -> case ww2 of wild6 { GHC.Types.D# x1 ->
                                     case ww19 of wild7 { GHC.Types.D# y1 ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.<## x1 y1) of wild8 {
                                       GHC.Types.False
                                       -> case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 (GHC.Prim.==## x1 y1) of wild9 {
                                            GHC.Types.False -> GHC.Types.True
                                            GHC.Types.True
                                            -> case ww3 of wild10 { GHC.Types.D# x2 ->
                                               case ww20 of wild11 { GHC.Types.D# y2 ->
                                               case GHC.Prim.tagToEnum#
                                                      @ GHC.Types.Bool
                                                      (GHC.Prim.<## x2 y2) of wild12 {
                                                 GHC.Types.False
                                                 -> case GHC.Prim.tagToEnum#
                                                           @ GHC.Types.Bool
                                                           (GHC.Prim.==## x2 y2) of wild13 {
                                                      GHC.Types.False -> GHC.Types.True
                                                      GHC.Types.True
                                                      -> case ww4 of wild14 { GHC.Types.D# x3 ->
                                                         case ww21 of wild15 { GHC.Types.D# y3 ->
                                                         case GHC.Prim.tagToEnum#
                                                                @ GHC.Types.Bool
                                                                (GHC.Prim.<## x3 y3) of wild16 {
                                                           GHC.Types.False
                                                           -> case GHC.Prim.tagToEnum#
                                                                     @ GHC.Types.Bool
                                                                     (GHC.Prim.==##
                                                                        x3
                                                                        y3) of wild17 {
                                                                GHC.Types.False -> GHC.Types.True
                                                                GHC.Types.True
                                                                -> case ww5 of wild18 { GHC.Types.D# x4 ->
                                                                   case ww22 of wild19 { GHC.Types.D# y4 ->
                                                                   case GHC.Prim.tagToEnum#
                                                                          @ GHC.Types.Bool
                                                                          (GHC.Prim.<##
                                                                             x4
                                                                             y4) of wild20 {
                                                                     GHC.Types.False
                                                                     -> case GHC.Prim.tagToEnum#
                                                                               @ GHC.Types.Bool
                                                                               (GHC.Prim.==##
                                                                                  x4
                                                                                  y4) of wild21 {
                                                                          GHC.Types.False
                                                                          -> GHC.Types.True
                                                                          GHC.Types.True
                                                                          -> case ww6 of wild22 { GHC.Types.D# x5 ->
                                                                             case ww23 of wild23 { GHC.Types.D# y5 ->
                                                                             case GHC.Prim.tagToEnum#
                                                                                    @ GHC.Types.Bool
                                                                                    (GHC.Prim.<##
                                                                                       x5
                                                                                       y5) of wild24 {
                                                                               GHC.Types.False
                                                                               -> case GHC.Prim.tagToEnum#
                                                                                         @ GHC.Types.Bool
                                                                                         (GHC.Prim.==##
                                                                                            x5
                                                                                            y5) of wild25 {
                                                                                    GHC.Types.False
                                                                                    -> GHC.Types.True
                                                                                    GHC.Types.True
                                                                                    -> case ww7 of wild26 { GHC.Types.D# x6 ->
                                                                                       case ww24 of wild27 { GHC.Types.D# y6 ->
                                                                                       case GHC.Prim.tagToEnum#
                                                                                              @ GHC.Types.Bool
                                                                                              (GHC.Prim.<##
                                                                                                 x6
                                                                                                 y6) of wild28 {
                                                                                         GHC.Types.False
                                                                                         -> case GHC.Prim.tagToEnum#
                                                                                                   @ GHC.Types.Bool
                                                                                                   (GHC.Prim.==##
                                                                                                      x6
                                                                                                      y6) of wild29 {
                                                                                              GHC.Types.False
                                                                                              -> GHC.Types.True
                                                                                              GHC.Types.True
                                                                                              -> case ww8 of wild30 { GHC.Types.D# x7 ->
                                                                                                 case ww25 of wild31 { GHC.Types.D# y7 ->
                                                                                                 case GHC.Prim.tagToEnum#
                                                                                                        @ GHC.Types.Bool
                                                                                                        (GHC.Prim.<##
                                                                                                           x7
                                                                                                           y7) of wild32 {
                                                                                                   GHC.Types.False
                                                                                                   -> case GHC.Prim.tagToEnum#
                                                                                                             @ GHC.Types.Bool
                                                                                                             (GHC.Prim.==##
                                                                                                                x7
                                                                                                                y7) of wild33 {
                                                                                                        GHC.Types.False
                                                                                                        -> GHC.Types.True
                                                                                                        GHC.Types.True
                                                                                                        -> case ww9 of wild34 { GHC.Types.D# x8 ->
                                                                                                           case ww26 of wild35 { GHC.Types.D# y8 ->
                                                                                                           case GHC.Prim.tagToEnum#
                                                                                                                  @ GHC.Types.Bool
                                                                                                                  (GHC.Prim.<##
                                                                                                                     x8
                                                                                                                     y8) of wild36 {
                                                                                                             GHC.Types.False
                                                                                                             -> case GHC.Prim.tagToEnum#
                                                                                                                       @ GHC.Types.Bool
                                                                                                                       (GHC.Prim.==##
                                                                                                                          x8
                                                                                                                          y8) of wild37 {
                                                                                                                  GHC.Types.False
                                                                                                                  -> GHC.Types.True
                                                                                                                  GHC.Types.True
                                                                                                                  -> case ww10 of wild38 { GHC.Types.D# x9 ->
                                                                                                                     case ww27 of wild39 { GHC.Types.D# y9 ->
                                                                                                                     case GHC.Prim.tagToEnum#
                                                                                                                            @ GHC.Types.Bool
                                                                                                                            (GHC.Prim.<##
                                                                                                                               x9
                                                                                                                               y9) of wild40 {
                                                                                                                       GHC.Types.False
                                                                                                                       -> case GHC.Prim.tagToEnum#
                                                                                                                                 @ GHC.Types.Bool
                                                                                                                                 (GHC.Prim.==##
                                                                                                                                    x9
                                                                                                                                    y9) of wild41 {
                                                                                                                            GHC.Types.False
                                                                                                                            -> GHC.Types.True
                                                                                                                            GHC.Types.True
                                                                                                                            -> case ww11 of wild42 { GHC.Types.D# x10 ->
                                                                                                                               case ww28 of wild43 { GHC.Types.D# y10 ->
                                                                                                                               case GHC.Prim.tagToEnum#
                                                                                                                                      @ GHC.Types.Bool
                                                                                                                                      (GHC.Prim.<##
                                                                                                                                         x10
                                                                                                                                         y10) of wild44 {
                                                                                                                                 GHC.Types.False
                                                                                                                                 -> case GHC.Prim.tagToEnum#
                                                                                                                                           @ GHC.Types.Bool
                                                                                                                                           (GHC.Prim.==##
                                                                                                                                              x10
                                                                                                                                              y10) of wild45 {
                                                                                                                                      GHC.Types.False
                                                                                                                                      -> GHC.Types.True
                                                                                                                                      GHC.Types.True
                                                                                                                                      -> case ww12 of wild46 { GHC.Types.D# x11 ->
                                                                                                                                         case ww29 of wild47 { GHC.Types.D# y11 ->
                                                                                                                                         case GHC.Prim.tagToEnum#
                                                                                                                                                @ GHC.Types.Bool
                                                                                                                                                (GHC.Prim.<##
                                                                                                                                                   x11
                                                                                                                                                   y11) of wild48 {
                                                                                                                                           GHC.Types.False
                                                                                                                                           -> case GHC.Prim.tagToEnum#
                                                                                                                                                     @ GHC.Types.Bool
                                                                                                                                                     (GHC.Prim.==##
                                                                                                                                                        x11
                                                                                                                                                        y11) of wild49 {
                                                                                                                                                GHC.Types.False
                                                                                                                                                -> GHC.Types.True
                                                                                                                                                GHC.Types.True
                                                                                                                                                -> case ww13 of wild50 { GHC.Types.D# x12 ->
                                                                                                                                                   case ww30 of wild51 { GHC.Types.D# y12 ->
                                                                                                                                                   case GHC.Prim.tagToEnum#
                                                                                                                                                          @ GHC.Types.Bool
                                                                                                                                                          (GHC.Prim.<##
                                                                                                                                                             x12
                                                                                                                                                             y12) of wild52 {
                                                                                                                                                     GHC.Types.False
                                                                                                                                                     -> case GHC.Prim.tagToEnum#
                                                                                                                                                               @ GHC.Types.Bool
                                                                                                                                                               (GHC.Prim.==##
                                                                                                                                                                  x12
                                                                                                                                                                  y12) of wild53 {
                                                                                                                                                          GHC.Types.False
                                                                                                                                                          -> GHC.Types.True
                                                                                                                                                          GHC.Types.True
                                                                                                                                                          -> case ww14 of wild54 { GHC.Types.D# x13 ->
                                                                                                                                                             case ww31 of wild55 { GHC.Types.D# y13 ->
                                                                                                                                                             case GHC.Prim.tagToEnum#
                                                                                                                                                                    @ GHC.Types.Bool
                                                                                                                                                                    (GHC.Prim.<##
                                                                                                                                                                       x13
                                                                                                                                                                       y13) of wild56 {
                                                                                                                                                               GHC.Types.False
                                                                                                                                                               -> case GHC.Prim.tagToEnum#
                                                                                                                                                                         @ GHC.Types.Bool
                                                                                                                                                                         (GHC.Prim.==##
                                                                                                                                                                            x13
                                                                                                                                                                            y13) of wild57 {
                                                                                                                                                                    GHC.Types.False
                                                                                                                                                                    -> GHC.Types.True
                                                                                                                                                                    GHC.Types.True
                                                                                                                                                                    -> case ww15 of wild58 { GHC.Types.D# x14 ->
                                                                                                                                                                       case ww32 of wild59 { GHC.Types.D# y14 ->
                                                                                                                                                                       case GHC.Prim.tagToEnum#
                                                                                                                                                                              @ GHC.Types.Bool
                                                                                                                                                                              (GHC.Prim.<##
                                                                                                                                                                                 x14
                                                                                                                                                                                 y14) of wild60 {
                                                                                                                                                                         GHC.Types.False
                                                                                                                                                                         -> case GHC.Prim.tagToEnum#
                                                                                                                                                                                   @ GHC.Types.Bool
                                                                                                                                                                                   (GHC.Prim.==##
                                                                                                                                                                                      x14
                                                                                                                                                                                      y14) of wild61 {
                                                                                                                                                                              GHC.Types.False
                                                                                                                                                                              -> GHC.Types.True
                                                                                                                                                                              GHC.Types.True
                                                                                                                                                                              -> GHC.Classes.$fOrdDouble_$c>=
                                                                                                                                                                                   ww16
                                                                                                                                                                                   ww33 }
                                                                                                                                                                         GHC.Types.True
                                                                                                                                                                         -> GHC.Types.False } } } }
                                                                                                                                                               GHC.Types.True
                                                                                                                                                               -> GHC.Types.False } } } }
                                                                                                                                                     GHC.Types.True
                                                                                                                                                     -> GHC.Types.False } } } }
                                                                                                                                           GHC.Types.True
                                                                                                                                           -> GHC.Types.False } } } }
                                                                                                                                 GHC.Types.True
                                                                                                                                 -> GHC.Types.False } } } }
                                                                                                                       GHC.Types.True
                                                                                                                       -> GHC.Types.False } } } }
                                                                                                             GHC.Types.True
                                                                                                             -> GHC.Types.False } } } }
                                                                                                   GHC.Types.True
                                                                                                   -> GHC.Types.False } } } }
                                                                                         GHC.Types.True
                                                                                         -> GHC.Types.False } } } }
                                                                               GHC.Types.True
                                                                               -> GHC.Types.False } } } }
                                                                     GHC.Types.True
                                                                     -> GHC.Types.False } } } }
                                                           GHC.Types.True -> GHC.Types.False } } } }
                                                 GHC.Types.True -> GHC.Types.False } } } }
                                       GHC.Types.True -> GHC.Types.False } } } }
                             GHC.Types.True -> GHC.Types.False } } } }
                   GHC.Types.True -> GHC.Types.False }) -}
df6514d2470bc64b1a323ee92d5089ee
  $w$c>=3 ::
    GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> Types.Defense
    -> GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> Types.Defense
    -> GHC.Types.Bool
  {- Arity: 36, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Double#)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: GHC.Types.Double)
                   (ww3 :: GHC.Types.Double)
                   (ww4 :: GHC.Types.Double)
                   (ww5 :: GHC.Types.Double)
                   (ww6 :: GHC.Types.Double)
                   (ww7 :: GHC.Types.Double)
                   (ww8 :: GHC.Types.Double)
                   (ww9 :: GHC.Types.Double)
                   (ww10 :: GHC.Types.Double)
                   (ww11 :: GHC.Types.Double)
                   (ww12 :: GHC.Types.Double)
                   (ww13 :: GHC.Types.Double)
                   (ww14 :: GHC.Types.Double)
                   (ww15 :: GHC.Types.Double)
                   (ww16 :: GHC.Types.Double)
                   (ww17 :: Types.Defense)
                   (ww18 :: GHC.Prim.Double#)
                   (ww19 :: GHC.Types.Double)
                   (ww20 :: GHC.Types.Double)
                   (ww21 :: GHC.Types.Double)
                   (ww22 :: GHC.Types.Double)
                   (ww23 :: GHC.Types.Double)
                   (ww24 :: GHC.Types.Double)
                   (ww25 :: GHC.Types.Double)
                   (ww26 :: GHC.Types.Double)
                   (ww27 :: GHC.Types.Double)
                   (ww28 :: GHC.Types.Double)
                   (ww29 :: GHC.Types.Double)
                   (ww30 :: GHC.Types.Double)
                   (ww31 :: GHC.Types.Double)
                   (ww32 :: GHC.Types.Double)
                   (ww33 :: GHC.Types.Double)
                   (ww34 :: GHC.Types.Double)
                   (ww35 :: Types.Defense) ->
                 case Types.$w$ccompare2
                        ww
                        ww1
                        ww2
                        ww3
                        ww4
                        ww5
                        ww6
                        ww7
                        ww8
                        ww9
                        ww10
                        ww11
                        ww12
                        ww13
                        ww14
                        ww15
                        ww16
                        ww18
                        ww19
                        ww20
                        ww21
                        ww22
                        ww23
                        ww24
                        ww25
                        ww26
                        ww27
                        ww28
                        ww29
                        ww30
                        ww31
                        ww32
                        ww33
                        ww34 of wild {
                   GHC.Types.LT -> GHC.Types.False
                   GHC.Types.EQ -> Types.$fOrdDefense_$c>= ww17 ww35
                   GHC.Types.GT -> GHC.Types.True }) -}
d330ab64eb76700ddc6f3c5ce83f587b
  $w$c>=4 ::
    GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
    -> GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
    -> GHC.Types.Bool
  {- Arity: 34, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U><L,1*U><L,1*U><S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Double#)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: GHC.Types.Double)
                   (ww3 :: GHC.Types.Double)
                   (ww4 :: GHC.Types.Double)
                   (ww5 :: GHC.Types.Double)
                   (ww6 :: GHC.Types.Double)
                   (ww7 :: GHC.Types.Double)
                   (ww8 :: GHC.Types.Double)
                   (ww9 :: GHC.Types.Double)
                   (ww10 :: GHC.Types.Double)
                   (ww11 :: GHC.Types.Double)
                   (ww12 :: GHC.Types.Double)
                   (ww13 :: GHC.Types.Double)
                   (ww14 :: [(Types.TeamName, Types.Wins, Types.Losses)])
                   (ww15 :: [(Types.TeamName, Types.Wins, Types.Losses)])
                   (ww16 :: [(Types.TeamName, Types.Wins, Types.Losses)])
                   (ww17 :: GHC.Prim.Double#)
                   (ww18 :: GHC.Types.Double)
                   (ww19 :: GHC.Types.Double)
                   (ww20 :: GHC.Types.Double)
                   (ww21 :: GHC.Types.Double)
                   (ww22 :: GHC.Types.Double)
                   (ww23 :: GHC.Types.Double)
                   (ww24 :: GHC.Types.Double)
                   (ww25 :: GHC.Types.Double)
                   (ww26 :: GHC.Types.Double)
                   (ww27 :: GHC.Types.Double)
                   (ww28 :: GHC.Types.Double)
                   (ww29 :: GHC.Types.Double)
                   (ww30 :: GHC.Types.Double)
                   (ww31 :: [(Types.TeamName, Types.Wins, Types.Losses)])
                   (ww32 :: [(Types.TeamName, Types.Wins, Types.Losses)])
                   (ww33 :: [(Types.TeamName, Types.Wins, Types.Losses)]) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<## ww ww17) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==## ww ww17) of wild3 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True
                        -> case ww1 of wild { GHC.Types.D# x ->
                           case ww18 of wild1 { GHC.Types.D# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<## x y) of wild4 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==## x y) of wild5 {
                                  GHC.Types.False -> GHC.Types.True
                                  GHC.Types.True
                                  -> case ww2 of wild6 { GHC.Types.D# x1 ->
                                     case ww19 of wild7 { GHC.Types.D# y1 ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.<## x1 y1) of wild8 {
                                       GHC.Types.False
                                       -> case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 (GHC.Prim.==## x1 y1) of wild9 {
                                            GHC.Types.False -> GHC.Types.True
                                            GHC.Types.True
                                            -> case ww3 of wild10 { GHC.Types.D# x2 ->
                                               case ww20 of wild11 { GHC.Types.D# y2 ->
                                               case GHC.Prim.tagToEnum#
                                                      @ GHC.Types.Bool
                                                      (GHC.Prim.<## x2 y2) of wild12 {
                                                 GHC.Types.False
                                                 -> case GHC.Prim.tagToEnum#
                                                           @ GHC.Types.Bool
                                                           (GHC.Prim.==## x2 y2) of wild13 {
                                                      GHC.Types.False -> GHC.Types.True
                                                      GHC.Types.True
                                                      -> case ww4 of wild14 { GHC.Types.D# x3 ->
                                                         case ww21 of wild15 { GHC.Types.D# y3 ->
                                                         case GHC.Prim.tagToEnum#
                                                                @ GHC.Types.Bool
                                                                (GHC.Prim.<## x3 y3) of wild16 {
                                                           GHC.Types.False
                                                           -> case GHC.Prim.tagToEnum#
                                                                     @ GHC.Types.Bool
                                                                     (GHC.Prim.==##
                                                                        x3
                                                                        y3) of wild17 {
                                                                GHC.Types.False -> GHC.Types.True
                                                                GHC.Types.True
                                                                -> case ww5 of wild18 { GHC.Types.D# x4 ->
                                                                   case ww22 of wild19 { GHC.Types.D# y4 ->
                                                                   case GHC.Prim.tagToEnum#
                                                                          @ GHC.Types.Bool
                                                                          (GHC.Prim.<##
                                                                             x4
                                                                             y4) of wild20 {
                                                                     GHC.Types.False
                                                                     -> case GHC.Prim.tagToEnum#
                                                                               @ GHC.Types.Bool
                                                                               (GHC.Prim.==##
                                                                                  x4
                                                                                  y4) of wild21 {
                                                                          GHC.Types.False
                                                                          -> GHC.Types.True
                                                                          GHC.Types.True
                                                                          -> case ww6 of wild22 { GHC.Types.D# x5 ->
                                                                             case ww23 of wild23 { GHC.Types.D# y5 ->
                                                                             case GHC.Prim.tagToEnum#
                                                                                    @ GHC.Types.Bool
                                                                                    (GHC.Prim.<##
                                                                                       x5
                                                                                       y5) of wild24 {
                                                                               GHC.Types.False
                                                                               -> case GHC.Prim.tagToEnum#
                                                                                         @ GHC.Types.Bool
                                                                                         (GHC.Prim.==##
                                                                                            x5
                                                                                            y5) of wild25 {
                                                                                    GHC.Types.False
                                                                                    -> GHC.Types.True
                                                                                    GHC.Types.True
                                                                                    -> case ww7 of wild26 { GHC.Types.D# x6 ->
                                                                                       case ww24 of wild27 { GHC.Types.D# y6 ->
                                                                                       case GHC.Prim.tagToEnum#
                                                                                              @ GHC.Types.Bool
                                                                                              (GHC.Prim.<##
                                                                                                 x6
                                                                                                 y6) of wild28 {
                                                                                         GHC.Types.False
                                                                                         -> case GHC.Prim.tagToEnum#
                                                                                                   @ GHC.Types.Bool
                                                                                                   (GHC.Prim.==##
                                                                                                      x6
                                                                                                      y6) of wild29 {
                                                                                              GHC.Types.False
                                                                                              -> GHC.Types.True
                                                                                              GHC.Types.True
                                                                                              -> case ww8 of wild30 { GHC.Types.D# x7 ->
                                                                                                 case ww25 of wild31 { GHC.Types.D# y7 ->
                                                                                                 case GHC.Prim.tagToEnum#
                                                                                                        @ GHC.Types.Bool
                                                                                                        (GHC.Prim.<##
                                                                                                           x7
                                                                                                           y7) of wild32 {
                                                                                                   GHC.Types.False
                                                                                                   -> case GHC.Prim.tagToEnum#
                                                                                                             @ GHC.Types.Bool
                                                                                                             (GHC.Prim.==##
                                                                                                                x7
                                                                                                                y7) of wild33 {
                                                                                                        GHC.Types.False
                                                                                                        -> GHC.Types.True
                                                                                                        GHC.Types.True
                                                                                                        -> case ww9 of wild34 { GHC.Types.D# x8 ->
                                                                                                           case ww26 of wild35 { GHC.Types.D# y8 ->
                                                                                                           case GHC.Prim.tagToEnum#
                                                                                                                  @ GHC.Types.Bool
                                                                                                                  (GHC.Prim.<##
                                                                                                                     x8
                                                                                                                     y8) of wild36 {
                                                                                                             GHC.Types.False
                                                                                                             -> case GHC.Prim.tagToEnum#
                                                                                                                       @ GHC.Types.Bool
                                                                                                                       (GHC.Prim.==##
                                                                                                                          x8
                                                                                                                          y8) of wild37 {
                                                                                                                  GHC.Types.False
                                                                                                                  -> GHC.Types.True
                                                                                                                  GHC.Types.True
                                                                                                                  -> case ww10 of wild38 { GHC.Types.D# x9 ->
                                                                                                                     case ww27 of wild39 { GHC.Types.D# y9 ->
                                                                                                                     case GHC.Prim.tagToEnum#
                                                                                                                            @ GHC.Types.Bool
                                                                                                                            (GHC.Prim.<##
                                                                                                                               x9
                                                                                                                               y9) of wild40 {
                                                                                                                       GHC.Types.False
                                                                                                                       -> case GHC.Prim.tagToEnum#
                                                                                                                                 @ GHC.Types.Bool
                                                                                                                                 (GHC.Prim.==##
                                                                                                                                    x9
                                                                                                                                    y9) of wild41 {
                                                                                                                            GHC.Types.False
                                                                                                                            -> GHC.Types.True
                                                                                                                            GHC.Types.True
                                                                                                                            -> case ww11 of wild42 { GHC.Types.D# x10 ->
                                                                                                                               case ww28 of wild43 { GHC.Types.D# y10 ->
                                                                                                                               case GHC.Prim.tagToEnum#
                                                                                                                                      @ GHC.Types.Bool
                                                                                                                                      (GHC.Prim.<##
                                                                                                                                         x10
                                                                                                                                         y10) of wild44 {
                                                                                                                                 GHC.Types.False
                                                                                                                                 -> case GHC.Prim.tagToEnum#
                                                                                                                                           @ GHC.Types.Bool
                                                                                                                                           (GHC.Prim.==##
                                                                                                                                              x10
                                                                                                                                              y10) of wild45 {
                                                                                                                                      GHC.Types.False
                                                                                                                                      -> GHC.Types.True
                                                                                                                                      GHC.Types.True
                                                                                                                                      -> case ww12 of wild46 { GHC.Types.D# x11 ->
                                                                                                                                         case ww29 of wild47 { GHC.Types.D# y11 ->
                                                                                                                                         case GHC.Prim.tagToEnum#
                                                                                                                                                @ GHC.Types.Bool
                                                                                                                                                (GHC.Prim.<##
                                                                                                                                                   x11
                                                                                                                                                   y11) of wild48 {
                                                                                                                                           GHC.Types.False
                                                                                                                                           -> case GHC.Prim.tagToEnum#
                                                                                                                                                     @ GHC.Types.Bool
                                                                                                                                                     (GHC.Prim.==##
                                                                                                                                                        x11
                                                                                                                                                        y11) of wild49 {
                                                                                                                                                GHC.Types.False
                                                                                                                                                -> GHC.Types.True
                                                                                                                                                GHC.Types.True
                                                                                                                                                -> case ww13 of wild50 { GHC.Types.D# x12 ->
                                                                                                                                                   case ww30 of wild51 { GHC.Types.D# y12 ->
                                                                                                                                                   case GHC.Prim.tagToEnum#
                                                                                                                                                          @ GHC.Types.Bool
                                                                                                                                                          (GHC.Prim.<##
                                                                                                                                                             x12
                                                                                                                                                             y12) of wild52 {
                                                                                                                                                     GHC.Types.False
                                                                                                                                                     -> case GHC.Prim.tagToEnum#
                                                                                                                                                               @ GHC.Types.Bool
                                                                                                                                                               (GHC.Prim.==##
                                                                                                                                                                  x12
                                                                                                                                                                  y12) of wild53 {
                                                                                                                                                          GHC.Types.False
                                                                                                                                                          -> GHC.Types.True
                                                                                                                                                          GHC.Types.True
                                                                                                                                                          -> case GHC.Classes.$fOrd[]_$ccompare
                                                                                                                                                                    @ (Types.TeamName,
                                                                                                                                                                       Types.Wins,
                                                                                                                                                                       Types.Losses)
                                                                                                                                                                    Types.$fOrdWinningTeamStats_$s$fOrd(,,)
                                                                                                                                                                    ww14
                                                                                                                                                                    ww31 of wild54 {
                                                                                                                                                               GHC.Types.LT
                                                                                                                                                               -> GHC.Types.False
                                                                                                                                                               GHC.Types.EQ
                                                                                                                                                               -> case GHC.Classes.$fOrd[]_$ccompare
                                                                                                                                                                         @ (Types.TeamName,
                                                                                                                                                                            Types.Wins,
                                                                                                                                                                            Types.Losses)
                                                                                                                                                                         Types.$fOrdWinningTeamStats_$s$fOrd(,,)
                                                                                                                                                                         ww15
                                                                                                                                                                         ww32 of wild55 {
                                                                                                                                                                    GHC.Types.LT
                                                                                                                                                                    -> GHC.Types.False
                                                                                                                                                                    GHC.Types.EQ
                                                                                                                                                                    -> case GHC.Classes.$fOrd[]_$ccompare
                                                                                                                                                                              @ (Types.TeamName,
                                                                                                                                                                                 Types.Wins,
                                                                                                                                                                                 Types.Losses)
                                                                                                                                                                              Types.$fOrdWinningTeamStats_$s$fOrd(,,)
                                                                                                                                                                              ww16
                                                                                                                                                                              ww33 of wild56 {
                                                                                                                                                                         DEFAULT
                                                                                                                                                                         -> GHC.Types.True
                                                                                                                                                                         GHC.Types.LT
                                                                                                                                                                         -> GHC.Types.False }
                                                                                                                                                                    GHC.Types.GT
                                                                                                                                                                    -> GHC.Types.True }
                                                                                                                                                               GHC.Types.GT
                                                                                                                                                               -> GHC.Types.True } }
                                                                                                                                                     GHC.Types.True
                                                                                                                                                     -> GHC.Types.False } } } }
                                                                                                                                           GHC.Types.True
                                                                                                                                           -> GHC.Types.False } } } }
                                                                                                                                 GHC.Types.True
                                                                                                                                 -> GHC.Types.False } } } }
                                                                                                                       GHC.Types.True
                                                                                                                       -> GHC.Types.False } } } }
                                                                                                             GHC.Types.True
                                                                                                             -> GHC.Types.False } } } }
                                                                                                   GHC.Types.True
                                                                                                   -> GHC.Types.False } } } }
                                                                                         GHC.Types.True
                                                                                         -> GHC.Types.False } } } }
                                                                               GHC.Types.True
                                                                               -> GHC.Types.False } } } }
                                                                     GHC.Types.True
                                                                     -> GHC.Types.False } } } }
                                                           GHC.Types.True -> GHC.Types.False } } } }
                                                 GHC.Types.True -> GHC.Types.False } } } }
                                       GHC.Types.True -> GHC.Types.False } } } }
                             GHC.Types.True -> GHC.Types.False } } } }
                   GHC.Types.True -> GHC.Types.False }) -}
202e1708fc325c799705b4513253c7d4
  $w$ccompare ::
    GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Ordering
  {- Arity: 34, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Double#)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: GHC.Types.Double)
                   (ww3 :: GHC.Types.Double)
                   (ww4 :: GHC.Types.Double)
                   (ww5 :: GHC.Types.Double)
                   (ww6 :: GHC.Types.Double)
                   (ww7 :: GHC.Types.Double)
                   (ww8 :: GHC.Types.Double)
                   (ww9 :: GHC.Types.Double)
                   (ww10 :: GHC.Types.Double)
                   (ww11 :: GHC.Types.Double)
                   (ww12 :: GHC.Types.Double)
                   (ww13 :: GHC.Types.Double)
                   (ww14 :: GHC.Types.Double)
                   (ww15 :: GHC.Types.Double)
                   (ww16 :: GHC.Types.Double)
                   (ww17 :: GHC.Prim.Double#)
                   (ww18 :: GHC.Types.Double)
                   (ww19 :: GHC.Types.Double)
                   (ww20 :: GHC.Types.Double)
                   (ww21 :: GHC.Types.Double)
                   (ww22 :: GHC.Types.Double)
                   (ww23 :: GHC.Types.Double)
                   (ww24 :: GHC.Types.Double)
                   (ww25 :: GHC.Types.Double)
                   (ww26 :: GHC.Types.Double)
                   (ww27 :: GHC.Types.Double)
                   (ww28 :: GHC.Types.Double)
                   (ww29 :: GHC.Types.Double)
                   (ww30 :: GHC.Types.Double)
                   (ww31 :: GHC.Types.Double)
                   (ww32 :: GHC.Types.Double)
                   (ww33 :: GHC.Types.Double) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<## ww ww17) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==## ww ww17) of wild3 {
                        GHC.Types.False -> GHC.Types.GT
                        GHC.Types.True
                        -> case ww1 of wild { GHC.Types.D# x ->
                           case ww18 of wild1 { GHC.Types.D# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<## x y) of wild4 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==## x y) of wild5 {
                                  GHC.Types.False -> GHC.Types.GT
                                  GHC.Types.True
                                  -> case ww2 of wild6 { GHC.Types.D# x1 ->
                                     case ww19 of wild7 { GHC.Types.D# y1 ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.<## x1 y1) of wild8 {
                                       GHC.Types.False
                                       -> case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 (GHC.Prim.==## x1 y1) of wild9 {
                                            GHC.Types.False -> GHC.Types.GT
                                            GHC.Types.True
                                            -> case ww3 of wild10 { GHC.Types.D# x2 ->
                                               case ww20 of wild11 { GHC.Types.D# y2 ->
                                               case GHC.Prim.tagToEnum#
                                                      @ GHC.Types.Bool
                                                      (GHC.Prim.<## x2 y2) of wild12 {
                                                 GHC.Types.False
                                                 -> case GHC.Prim.tagToEnum#
                                                           @ GHC.Types.Bool
                                                           (GHC.Prim.==## x2 y2) of wild13 {
                                                      GHC.Types.False -> GHC.Types.GT
                                                      GHC.Types.True
                                                      -> case ww4 of wild14 { GHC.Types.D# x3 ->
                                                         case ww21 of wild15 { GHC.Types.D# y3 ->
                                                         case GHC.Prim.tagToEnum#
                                                                @ GHC.Types.Bool
                                                                (GHC.Prim.<## x3 y3) of wild16 {
                                                           GHC.Types.False
                                                           -> case GHC.Prim.tagToEnum#
                                                                     @ GHC.Types.Bool
                                                                     (GHC.Prim.==##
                                                                        x3
                                                                        y3) of wild17 {
                                                                GHC.Types.False -> GHC.Types.GT
                                                                GHC.Types.True
                                                                -> case ww5 of wild18 { GHC.Types.D# x4 ->
                                                                   case ww22 of wild19 { GHC.Types.D# y4 ->
                                                                   case GHC.Prim.tagToEnum#
                                                                          @ GHC.Types.Bool
                                                                          (GHC.Prim.<##
                                                                             x4
                                                                             y4) of wild20 {
                                                                     GHC.Types.False
                                                                     -> case GHC.Prim.tagToEnum#
                                                                               @ GHC.Types.Bool
                                                                               (GHC.Prim.==##
                                                                                  x4
                                                                                  y4) of wild21 {
                                                                          GHC.Types.False
                                                                          -> GHC.Types.GT
                                                                          GHC.Types.True
                                                                          -> case ww6 of wild22 { GHC.Types.D# x5 ->
                                                                             case ww23 of wild23 { GHC.Types.D# y5 ->
                                                                             case GHC.Prim.tagToEnum#
                                                                                    @ GHC.Types.Bool
                                                                                    (GHC.Prim.<##
                                                                                       x5
                                                                                       y5) of wild24 {
                                                                               GHC.Types.False
                                                                               -> case GHC.Prim.tagToEnum#
                                                                                         @ GHC.Types.Bool
                                                                                         (GHC.Prim.==##
                                                                                            x5
                                                                                            y5) of wild25 {
                                                                                    GHC.Types.False
                                                                                    -> GHC.Types.GT
                                                                                    GHC.Types.True
                                                                                    -> case ww7 of wild26 { GHC.Types.D# x6 ->
                                                                                       case ww24 of wild27 { GHC.Types.D# y6 ->
                                                                                       case GHC.Prim.tagToEnum#
                                                                                              @ GHC.Types.Bool
                                                                                              (GHC.Prim.<##
                                                                                                 x6
                                                                                                 y6) of wild28 {
                                                                                         GHC.Types.False
                                                                                         -> case GHC.Prim.tagToEnum#
                                                                                                   @ GHC.Types.Bool
                                                                                                   (GHC.Prim.==##
                                                                                                      x6
                                                                                                      y6) of wild29 {
                                                                                              GHC.Types.False
                                                                                              -> GHC.Types.GT
                                                                                              GHC.Types.True
                                                                                              -> case ww8 of wild30 { GHC.Types.D# x7 ->
                                                                                                 case ww25 of wild31 { GHC.Types.D# y7 ->
                                                                                                 case GHC.Prim.tagToEnum#
                                                                                                        @ GHC.Types.Bool
                                                                                                        (GHC.Prim.<##
                                                                                                           x7
                                                                                                           y7) of wild32 {
                                                                                                   GHC.Types.False
                                                                                                   -> case GHC.Prim.tagToEnum#
                                                                                                             @ GHC.Types.Bool
                                                                                                             (GHC.Prim.==##
                                                                                                                x7
                                                                                                                y7) of wild33 {
                                                                                                        GHC.Types.False
                                                                                                        -> GHC.Types.GT
                                                                                                        GHC.Types.True
                                                                                                        -> case ww9 of wild34 { GHC.Types.D# x8 ->
                                                                                                           case ww26 of wild35 { GHC.Types.D# y8 ->
                                                                                                           case GHC.Prim.tagToEnum#
                                                                                                                  @ GHC.Types.Bool
                                                                                                                  (GHC.Prim.<##
                                                                                                                     x8
                                                                                                                     y8) of wild36 {
                                                                                                             GHC.Types.False
                                                                                                             -> case GHC.Prim.tagToEnum#
                                                                                                                       @ GHC.Types.Bool
                                                                                                                       (GHC.Prim.==##
                                                                                                                          x8
                                                                                                                          y8) of wild37 {
                                                                                                                  GHC.Types.False
                                                                                                                  -> GHC.Types.GT
                                                                                                                  GHC.Types.True
                                                                                                                  -> case ww10 of wild38 { GHC.Types.D# x9 ->
                                                                                                                     case ww27 of wild39 { GHC.Types.D# y9 ->
                                                                                                                     case GHC.Prim.tagToEnum#
                                                                                                                            @ GHC.Types.Bool
                                                                                                                            (GHC.Prim.<##
                                                                                                                               x9
                                                                                                                               y9) of wild40 {
                                                                                                                       GHC.Types.False
                                                                                                                       -> case GHC.Prim.tagToEnum#
                                                                                                                                 @ GHC.Types.Bool
                                                                                                                                 (GHC.Prim.==##
                                                                                                                                    x9
                                                                                                                                    y9) of wild41 {
                                                                                                                            GHC.Types.False
                                                                                                                            -> GHC.Types.GT
                                                                                                                            GHC.Types.True
                                                                                                                            -> case ww11 of wild42 { GHC.Types.D# x10 ->
                                                                                                                               case ww28 of wild43 { GHC.Types.D# y10 ->
                                                                                                                               case GHC.Prim.tagToEnum#
                                                                                                                                      @ GHC.Types.Bool
                                                                                                                                      (GHC.Prim.<##
                                                                                                                                         x10
                                                                                                                                         y10) of wild44 {
                                                                                                                                 GHC.Types.False
                                                                                                                                 -> case GHC.Prim.tagToEnum#
                                                                                                                                           @ GHC.Types.Bool
                                                                                                                                           (GHC.Prim.==##
                                                                                                                                              x10
                                                                                                                                              y10) of wild45 {
                                                                                                                                      GHC.Types.False
                                                                                                                                      -> GHC.Types.GT
                                                                                                                                      GHC.Types.True
                                                                                                                                      -> case ww12 of wild46 { GHC.Types.D# x11 ->
                                                                                                                                         case ww29 of wild47 { GHC.Types.D# y11 ->
                                                                                                                                         case GHC.Prim.tagToEnum#
                                                                                                                                                @ GHC.Types.Bool
                                                                                                                                                (GHC.Prim.<##
                                                                                                                                                   x11
                                                                                                                                                   y11) of wild48 {
                                                                                                                                           GHC.Types.False
                                                                                                                                           -> case GHC.Prim.tagToEnum#
                                                                                                                                                     @ GHC.Types.Bool
                                                                                                                                                     (GHC.Prim.==##
                                                                                                                                                        x11
                                                                                                                                                        y11) of wild49 {
                                                                                                                                                GHC.Types.False
                                                                                                                                                -> GHC.Types.GT
                                                                                                                                                GHC.Types.True
                                                                                                                                                -> case ww13 of wild50 { GHC.Types.D# x12 ->
                                                                                                                                                   case ww30 of wild51 { GHC.Types.D# y12 ->
                                                                                                                                                   case GHC.Prim.tagToEnum#
                                                                                                                                                          @ GHC.Types.Bool
                                                                                                                                                          (GHC.Prim.<##
                                                                                                                                                             x12
                                                                                                                                                             y12) of wild52 {
                                                                                                                                                     GHC.Types.False
                                                                                                                                                     -> case GHC.Prim.tagToEnum#
                                                                                                                                                               @ GHC.Types.Bool
                                                                                                                                                               (GHC.Prim.==##
                                                                                                                                                                  x12
                                                                                                                                                                  y12) of wild53 {
                                                                                                                                                          GHC.Types.False
                                                                                                                                                          -> GHC.Types.GT
                                                                                                                                                          GHC.Types.True
                                                                                                                                                          -> case ww14 of wild54 { GHC.Types.D# x13 ->
                                                                                                                                                             case ww31 of wild55 { GHC.Types.D# y13 ->
                                                                                                                                                             case GHC.Prim.tagToEnum#
                                                                                                                                                                    @ GHC.Types.Bool
                                                                                                                                                                    (GHC.Prim.<##
                                                                                                                                                                       x13
                                                                                                                                                                       y13) of wild56 {
                                                                                                                                                               GHC.Types.False
                                                                                                                                                               -> case GHC.Prim.tagToEnum#
                                                                                                                                                                         @ GHC.Types.Bool
                                                                                                                                                                         (GHC.Prim.==##
                                                                                                                                                                            x13
                                                                                                                                                                            y13) of wild57 {
                                                                                                                                                                    GHC.Types.False
                                                                                                                                                                    -> GHC.Types.GT
                                                                                                                                                                    GHC.Types.True
                                                                                                                                                                    -> case ww15 of wild58 { GHC.Types.D# x14 ->
                                                                                                                                                                       case ww32 of wild59 { GHC.Types.D# y14 ->
                                                                                                                                                                       case GHC.Prim.tagToEnum#
                                                                                                                                                                              @ GHC.Types.Bool
                                                                                                                                                                              (GHC.Prim.<##
                                                                                                                                                                                 x14
                                                                                                                                                                                 y14) of wild60 {
                                                                                                                                                                         GHC.Types.False
                                                                                                                                                                         -> case GHC.Prim.tagToEnum#
                                                                                                                                                                                   @ GHC.Types.Bool
                                                                                                                                                                                   (GHC.Prim.==##
                                                                                                                                                                                      x14
                                                                                                                                                                                      y14) of wild61 {
                                                                                                                                                                              GHC.Types.False
                                                                                                                                                                              -> GHC.Types.GT
                                                                                                                                                                              GHC.Types.True
                                                                                                                                                                              -> GHC.Classes.$fOrdDouble_$ccompare
                                                                                                                                                                                   ww16
                                                                                                                                                                                   ww33 }
                                                                                                                                                                         GHC.Types.True
                                                                                                                                                                         -> GHC.Types.LT } } } }
                                                                                                                                                               GHC.Types.True
                                                                                                                                                               -> GHC.Types.LT } } } }
                                                                                                                                                     GHC.Types.True
                                                                                                                                                     -> GHC.Types.LT } } } }
                                                                                                                                           GHC.Types.True
                                                                                                                                           -> GHC.Types.LT } } } }
                                                                                                                                 GHC.Types.True
                                                                                                                                 -> GHC.Types.LT } } } }
                                                                                                                       GHC.Types.True
                                                                                                                       -> GHC.Types.LT } } } }
                                                                                                             GHC.Types.True
                                                                                                             -> GHC.Types.LT } } } }
                                                                                                   GHC.Types.True
                                                                                                   -> GHC.Types.LT } } } }
                                                                                         GHC.Types.True
                                                                                         -> GHC.Types.LT } } } }
                                                                               GHC.Types.True
                                                                               -> GHC.Types.LT } } } }
                                                                     GHC.Types.True
                                                                     -> GHC.Types.LT } } } }
                                                           GHC.Types.True -> GHC.Types.LT } } } }
                                                 GHC.Types.True -> GHC.Types.LT } } } }
                                       GHC.Types.True -> GHC.Types.LT } } } }
                             GHC.Types.True -> GHC.Types.LT } } } }
                   GHC.Types.True -> GHC.Types.LT }) -}
c27a898dc2c9dc66ebdb42b2c0d28d64
  $w$ccompare1 ::
    GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Char
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Float
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Float
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Float
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Char
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Float
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Float
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Float
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Ordering
  {- Arity: 54, HasNoCafRefs,
     Strictness: <S,U><L,1*U><L,1*U><L,1*U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><S,U><L,1*U><L,1*U><L,1*U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0] -}
184385ae547f9d0672abb532d289868c
  $w$ccompare2 ::
    GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Ordering
  {- Arity: 34, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Double#)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: GHC.Types.Double)
                   (ww3 :: GHC.Types.Double)
                   (ww4 :: GHC.Types.Double)
                   (ww5 :: GHC.Types.Double)
                   (ww6 :: GHC.Types.Double)
                   (ww7 :: GHC.Types.Double)
                   (ww8 :: GHC.Types.Double)
                   (ww9 :: GHC.Types.Double)
                   (ww10 :: GHC.Types.Double)
                   (ww11 :: GHC.Types.Double)
                   (ww12 :: GHC.Types.Double)
                   (ww13 :: GHC.Types.Double)
                   (ww14 :: GHC.Types.Double)
                   (ww15 :: GHC.Types.Double)
                   (ww16 :: GHC.Types.Double)
                   (ww17 :: GHC.Prim.Double#)
                   (ww18 :: GHC.Types.Double)
                   (ww19 :: GHC.Types.Double)
                   (ww20 :: GHC.Types.Double)
                   (ww21 :: GHC.Types.Double)
                   (ww22 :: GHC.Types.Double)
                   (ww23 :: GHC.Types.Double)
                   (ww24 :: GHC.Types.Double)
                   (ww25 :: GHC.Types.Double)
                   (ww26 :: GHC.Types.Double)
                   (ww27 :: GHC.Types.Double)
                   (ww28 :: GHC.Types.Double)
                   (ww29 :: GHC.Types.Double)
                   (ww30 :: GHC.Types.Double)
                   (ww31 :: GHC.Types.Double)
                   (ww32 :: GHC.Types.Double)
                   (ww33 :: GHC.Types.Double) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<## ww ww17) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==## ww ww17) of wild3 {
                        GHC.Types.False -> GHC.Types.GT
                        GHC.Types.True
                        -> case ww1 of wild { GHC.Types.D# x ->
                           case ww18 of wild1 { GHC.Types.D# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<## x y) of wild4 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==## x y) of wild5 {
                                  GHC.Types.False -> GHC.Types.GT
                                  GHC.Types.True
                                  -> case ww2 of wild6 { GHC.Types.D# x1 ->
                                     case ww19 of wild7 { GHC.Types.D# y1 ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.<## x1 y1) of wild8 {
                                       GHC.Types.False
                                       -> case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 (GHC.Prim.==## x1 y1) of wild9 {
                                            GHC.Types.False -> GHC.Types.GT
                                            GHC.Types.True
                                            -> case ww3 of wild10 { GHC.Types.D# x2 ->
                                               case ww20 of wild11 { GHC.Types.D# y2 ->
                                               case GHC.Prim.tagToEnum#
                                                      @ GHC.Types.Bool
                                                      (GHC.Prim.<## x2 y2) of wild12 {
                                                 GHC.Types.False
                                                 -> case GHC.Prim.tagToEnum#
                                                           @ GHC.Types.Bool
                                                           (GHC.Prim.==## x2 y2) of wild13 {
                                                      GHC.Types.False -> GHC.Types.GT
                                                      GHC.Types.True
                                                      -> case ww4 of wild14 { GHC.Types.D# x3 ->
                                                         case ww21 of wild15 { GHC.Types.D# y3 ->
                                                         case GHC.Prim.tagToEnum#
                                                                @ GHC.Types.Bool
                                                                (GHC.Prim.<## x3 y3) of wild16 {
                                                           GHC.Types.False
                                                           -> case GHC.Prim.tagToEnum#
                                                                     @ GHC.Types.Bool
                                                                     (GHC.Prim.==##
                                                                        x3
                                                                        y3) of wild17 {
                                                                GHC.Types.False -> GHC.Types.GT
                                                                GHC.Types.True
                                                                -> case ww5 of wild18 { GHC.Types.D# x4 ->
                                                                   case ww22 of wild19 { GHC.Types.D# y4 ->
                                                                   case GHC.Prim.tagToEnum#
                                                                          @ GHC.Types.Bool
                                                                          (GHC.Prim.<##
                                                                             x4
                                                                             y4) of wild20 {
                                                                     GHC.Types.False
                                                                     -> case GHC.Prim.tagToEnum#
                                                                               @ GHC.Types.Bool
                                                                               (GHC.Prim.==##
                                                                                  x4
                                                                                  y4) of wild21 {
                                                                          GHC.Types.False
                                                                          -> GHC.Types.GT
                                                                          GHC.Types.True
                                                                          -> case ww6 of wild22 { GHC.Types.D# x5 ->
                                                                             case ww23 of wild23 { GHC.Types.D# y5 ->
                                                                             case GHC.Prim.tagToEnum#
                                                                                    @ GHC.Types.Bool
                                                                                    (GHC.Prim.<##
                                                                                       x5
                                                                                       y5) of wild24 {
                                                                               GHC.Types.False
                                                                               -> case GHC.Prim.tagToEnum#
                                                                                         @ GHC.Types.Bool
                                                                                         (GHC.Prim.==##
                                                                                            x5
                                                                                            y5) of wild25 {
                                                                                    GHC.Types.False
                                                                                    -> GHC.Types.GT
                                                                                    GHC.Types.True
                                                                                    -> case ww7 of wild26 { GHC.Types.D# x6 ->
                                                                                       case ww24 of wild27 { GHC.Types.D# y6 ->
                                                                                       case GHC.Prim.tagToEnum#
                                                                                              @ GHC.Types.Bool
                                                                                              (GHC.Prim.<##
                                                                                                 x6
                                                                                                 y6) of wild28 {
                                                                                         GHC.Types.False
                                                                                         -> case GHC.Prim.tagToEnum#
                                                                                                   @ GHC.Types.Bool
                                                                                                   (GHC.Prim.==##
                                                                                                      x6
                                                                                                      y6) of wild29 {
                                                                                              GHC.Types.False
                                                                                              -> GHC.Types.GT
                                                                                              GHC.Types.True
                                                                                              -> case ww8 of wild30 { GHC.Types.D# x7 ->
                                                                                                 case ww25 of wild31 { GHC.Types.D# y7 ->
                                                                                                 case GHC.Prim.tagToEnum#
                                                                                                        @ GHC.Types.Bool
                                                                                                        (GHC.Prim.<##
                                                                                                           x7
                                                                                                           y7) of wild32 {
                                                                                                   GHC.Types.False
                                                                                                   -> case GHC.Prim.tagToEnum#
                                                                                                             @ GHC.Types.Bool
                                                                                                             (GHC.Prim.==##
                                                                                                                x7
                                                                                                                y7) of wild33 {
                                                                                                        GHC.Types.False
                                                                                                        -> GHC.Types.GT
                                                                                                        GHC.Types.True
                                                                                                        -> case ww9 of wild34 { GHC.Types.D# x8 ->
                                                                                                           case ww26 of wild35 { GHC.Types.D# y8 ->
                                                                                                           case GHC.Prim.tagToEnum#
                                                                                                                  @ GHC.Types.Bool
                                                                                                                  (GHC.Prim.<##
                                                                                                                     x8
                                                                                                                     y8) of wild36 {
                                                                                                             GHC.Types.False
                                                                                                             -> case GHC.Prim.tagToEnum#
                                                                                                                       @ GHC.Types.Bool
                                                                                                                       (GHC.Prim.==##
                                                                                                                          x8
                                                                                                                          y8) of wild37 {
                                                                                                                  GHC.Types.False
                                                                                                                  -> GHC.Types.GT
                                                                                                                  GHC.Types.True
                                                                                                                  -> case ww10 of wild38 { GHC.Types.D# x9 ->
                                                                                                                     case ww27 of wild39 { GHC.Types.D# y9 ->
                                                                                                                     case GHC.Prim.tagToEnum#
                                                                                                                            @ GHC.Types.Bool
                                                                                                                            (GHC.Prim.<##
                                                                                                                               x9
                                                                                                                               y9) of wild40 {
                                                                                                                       GHC.Types.False
                                                                                                                       -> case GHC.Prim.tagToEnum#
                                                                                                                                 @ GHC.Types.Bool
                                                                                                                                 (GHC.Prim.==##
                                                                                                                                    x9
                                                                                                                                    y9) of wild41 {
                                                                                                                            GHC.Types.False
                                                                                                                            -> GHC.Types.GT
                                                                                                                            GHC.Types.True
                                                                                                                            -> case ww11 of wild42 { GHC.Types.D# x10 ->
                                                                                                                               case ww28 of wild43 { GHC.Types.D# y10 ->
                                                                                                                               case GHC.Prim.tagToEnum#
                                                                                                                                      @ GHC.Types.Bool
                                                                                                                                      (GHC.Prim.<##
                                                                                                                                         x10
                                                                                                                                         y10) of wild44 {
                                                                                                                                 GHC.Types.False
                                                                                                                                 -> case GHC.Prim.tagToEnum#
                                                                                                                                           @ GHC.Types.Bool
                                                                                                                                           (GHC.Prim.==##
                                                                                                                                              x10
                                                                                                                                              y10) of wild45 {
                                                                                                                                      GHC.Types.False
                                                                                                                                      -> GHC.Types.GT
                                                                                                                                      GHC.Types.True
                                                                                                                                      -> case ww12 of wild46 { GHC.Types.D# x11 ->
                                                                                                                                         case ww29 of wild47 { GHC.Types.D# y11 ->
                                                                                                                                         case GHC.Prim.tagToEnum#
                                                                                                                                                @ GHC.Types.Bool
                                                                                                                                                (GHC.Prim.<##
                                                                                                                                                   x11
                                                                                                                                                   y11) of wild48 {
                                                                                                                                           GHC.Types.False
                                                                                                                                           -> case GHC.Prim.tagToEnum#
                                                                                                                                                     @ GHC.Types.Bool
                                                                                                                                                     (GHC.Prim.==##
                                                                                                                                                        x11
                                                                                                                                                        y11) of wild49 {
                                                                                                                                                GHC.Types.False
                                                                                                                                                -> GHC.Types.GT
                                                                                                                                                GHC.Types.True
                                                                                                                                                -> case ww13 of wild50 { GHC.Types.D# x12 ->
                                                                                                                                                   case ww30 of wild51 { GHC.Types.D# y12 ->
                                                                                                                                                   case GHC.Prim.tagToEnum#
                                                                                                                                                          @ GHC.Types.Bool
                                                                                                                                                          (GHC.Prim.<##
                                                                                                                                                             x12
                                                                                                                                                             y12) of wild52 {
                                                                                                                                                     GHC.Types.False
                                                                                                                                                     -> case GHC.Prim.tagToEnum#
                                                                                                                                                               @ GHC.Types.Bool
                                                                                                                                                               (GHC.Prim.==##
                                                                                                                                                                  x12
                                                                                                                                                                  y12) of wild53 {
                                                                                                                                                          GHC.Types.False
                                                                                                                                                          -> GHC.Types.GT
                                                                                                                                                          GHC.Types.True
                                                                                                                                                          -> case ww14 of wild54 { GHC.Types.D# x13 ->
                                                                                                                                                             case ww31 of wild55 { GHC.Types.D# y13 ->
                                                                                                                                                             case GHC.Prim.tagToEnum#
                                                                                                                                                                    @ GHC.Types.Bool
                                                                                                                                                                    (GHC.Prim.<##
                                                                                                                                                                       x13
                                                                                                                                                                       y13) of wild56 {
                                                                                                                                                               GHC.Types.False
                                                                                                                                                               -> case GHC.Prim.tagToEnum#
                                                                                                                                                                         @ GHC.Types.Bool
                                                                                                                                                                         (GHC.Prim.==##
                                                                                                                                                                            x13
                                                                                                                                                                            y13) of wild57 {
                                                                                                                                                                    GHC.Types.False
                                                                                                                                                                    -> GHC.Types.GT
                                                                                                                                                                    GHC.Types.True
                                                                                                                                                                    -> case ww15 of wild58 { GHC.Types.D# x14 ->
                                                                                                                                                                       case ww32 of wild59 { GHC.Types.D# y14 ->
                                                                                                                                                                       case GHC.Prim.tagToEnum#
                                                                                                                                                                              @ GHC.Types.Bool
                                                                                                                                                                              (GHC.Prim.<##
                                                                                                                                                                                 x14
                                                                                                                                                                                 y14) of wild60 {
                                                                                                                                                                         GHC.Types.False
                                                                                                                                                                         -> case GHC.Prim.tagToEnum#
                                                                                                                                                                                   @ GHC.Types.Bool
                                                                                                                                                                                   (GHC.Prim.==##
                                                                                                                                                                                      x14
                                                                                                                                                                                      y14) of wild61 {
                                                                                                                                                                              GHC.Types.False
                                                                                                                                                                              -> GHC.Types.GT
                                                                                                                                                                              GHC.Types.True
                                                                                                                                                                              -> GHC.Classes.$fOrdDouble_$ccompare
                                                                                                                                                                                   ww16
                                                                                                                                                                                   ww33 }
                                                                                                                                                                         GHC.Types.True
                                                                                                                                                                         -> GHC.Types.LT } } } }
                                                                                                                                                               GHC.Types.True
                                                                                                                                                               -> GHC.Types.LT } } } }
                                                                                                                                                     GHC.Types.True
                                                                                                                                                     -> GHC.Types.LT } } } }
                                                                                                                                           GHC.Types.True
                                                                                                                                           -> GHC.Types.LT } } } }
                                                                                                                                 GHC.Types.True
                                                                                                                                 -> GHC.Types.LT } } } }
                                                                                                                       GHC.Types.True
                                                                                                                       -> GHC.Types.LT } } } }
                                                                                                             GHC.Types.True
                                                                                                             -> GHC.Types.LT } } } }
                                                                                                   GHC.Types.True
                                                                                                   -> GHC.Types.LT } } } }
                                                                                         GHC.Types.True
                                                                                         -> GHC.Types.LT } } } }
                                                                               GHC.Types.True
                                                                               -> GHC.Types.LT } } } }
                                                                     GHC.Types.True
                                                                     -> GHC.Types.LT } } } }
                                                           GHC.Types.True -> GHC.Types.LT } } } }
                                                 GHC.Types.True -> GHC.Types.LT } } } }
                                       GHC.Types.True -> GHC.Types.LT } } } }
                             GHC.Types.True -> GHC.Types.LT } } } }
                   GHC.Types.True -> GHC.Types.LT }) -}
a6cfa1852f4621fff332a128e0875f10
  $w$ccompare3 ::
    GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> Types.Defense
    -> GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> Types.Defense
    -> GHC.Types.Ordering
  {- Arity: 36, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Double#)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: GHC.Types.Double)
                   (ww3 :: GHC.Types.Double)
                   (ww4 :: GHC.Types.Double)
                   (ww5 :: GHC.Types.Double)
                   (ww6 :: GHC.Types.Double)
                   (ww7 :: GHC.Types.Double)
                   (ww8 :: GHC.Types.Double)
                   (ww9 :: GHC.Types.Double)
                   (ww10 :: GHC.Types.Double)
                   (ww11 :: GHC.Types.Double)
                   (ww12 :: GHC.Types.Double)
                   (ww13 :: GHC.Types.Double)
                   (ww14 :: GHC.Types.Double)
                   (ww15 :: GHC.Types.Double)
                   (ww16 :: GHC.Types.Double)
                   (ww17 :: Types.Defense)
                   (ww18 :: GHC.Prim.Double#)
                   (ww19 :: GHC.Types.Double)
                   (ww20 :: GHC.Types.Double)
                   (ww21 :: GHC.Types.Double)
                   (ww22 :: GHC.Types.Double)
                   (ww23 :: GHC.Types.Double)
                   (ww24 :: GHC.Types.Double)
                   (ww25 :: GHC.Types.Double)
                   (ww26 :: GHC.Types.Double)
                   (ww27 :: GHC.Types.Double)
                   (ww28 :: GHC.Types.Double)
                   (ww29 :: GHC.Types.Double)
                   (ww30 :: GHC.Types.Double)
                   (ww31 :: GHC.Types.Double)
                   (ww32 :: GHC.Types.Double)
                   (ww33 :: GHC.Types.Double)
                   (ww34 :: GHC.Types.Double)
                   (ww35 :: Types.Defense) ->
                 case Types.$w$ccompare2
                        ww
                        ww1
                        ww2
                        ww3
                        ww4
                        ww5
                        ww6
                        ww7
                        ww8
                        ww9
                        ww10
                        ww11
                        ww12
                        ww13
                        ww14
                        ww15
                        ww16
                        ww18
                        ww19
                        ww20
                        ww21
                        ww22
                        ww23
                        ww24
                        ww25
                        ww26
                        ww27
                        ww28
                        ww29
                        ww30
                        ww31
                        ww32
                        ww33
                        ww34 of wild {
                   GHC.Types.LT -> GHC.Types.LT
                   GHC.Types.EQ -> Types.$fOrdDefense_$ccompare ww17 ww35
                   GHC.Types.GT -> GHC.Types.GT }) -}
1b072438a7e122d22613a63b793caba1
  $w$ccompare4 ::
    GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
    -> GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
    -> GHC.Types.Ordering
  {- Arity: 34, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U><L,1*U><L,1*U><S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Double#)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: GHC.Types.Double)
                   (ww3 :: GHC.Types.Double)
                   (ww4 :: GHC.Types.Double)
                   (ww5 :: GHC.Types.Double)
                   (ww6 :: GHC.Types.Double)
                   (ww7 :: GHC.Types.Double)
                   (ww8 :: GHC.Types.Double)
                   (ww9 :: GHC.Types.Double)
                   (ww10 :: GHC.Types.Double)
                   (ww11 :: GHC.Types.Double)
                   (ww12 :: GHC.Types.Double)
                   (ww13 :: GHC.Types.Double)
                   (ww14 :: [(Types.TeamName, Types.Wins, Types.Losses)])
                   (ww15 :: [(Types.TeamName, Types.Wins, Types.Losses)])
                   (ww16 :: [(Types.TeamName, Types.Wins, Types.Losses)])
                   (ww17 :: GHC.Prim.Double#)
                   (ww18 :: GHC.Types.Double)
                   (ww19 :: GHC.Types.Double)
                   (ww20 :: GHC.Types.Double)
                   (ww21 :: GHC.Types.Double)
                   (ww22 :: GHC.Types.Double)
                   (ww23 :: GHC.Types.Double)
                   (ww24 :: GHC.Types.Double)
                   (ww25 :: GHC.Types.Double)
                   (ww26 :: GHC.Types.Double)
                   (ww27 :: GHC.Types.Double)
                   (ww28 :: GHC.Types.Double)
                   (ww29 :: GHC.Types.Double)
                   (ww30 :: GHC.Types.Double)
                   (ww31 :: [(Types.TeamName, Types.Wins, Types.Losses)])
                   (ww32 :: [(Types.TeamName, Types.Wins, Types.Losses)])
                   (ww33 :: [(Types.TeamName, Types.Wins, Types.Losses)]) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<## ww ww17) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==## ww ww17) of wild3 {
                        GHC.Types.False -> GHC.Types.GT
                        GHC.Types.True
                        -> case ww1 of wild { GHC.Types.D# x ->
                           case ww18 of wild1 { GHC.Types.D# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<## x y) of wild4 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==## x y) of wild5 {
                                  GHC.Types.False -> GHC.Types.GT
                                  GHC.Types.True
                                  -> case ww2 of wild6 { GHC.Types.D# x1 ->
                                     case ww19 of wild7 { GHC.Types.D# y1 ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.<## x1 y1) of wild8 {
                                       GHC.Types.False
                                       -> case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 (GHC.Prim.==## x1 y1) of wild9 {
                                            GHC.Types.False -> GHC.Types.GT
                                            GHC.Types.True
                                            -> case ww3 of wild10 { GHC.Types.D# x2 ->
                                               case ww20 of wild11 { GHC.Types.D# y2 ->
                                               case GHC.Prim.tagToEnum#
                                                      @ GHC.Types.Bool
                                                      (GHC.Prim.<## x2 y2) of wild12 {
                                                 GHC.Types.False
                                                 -> case GHC.Prim.tagToEnum#
                                                           @ GHC.Types.Bool
                                                           (GHC.Prim.==## x2 y2) of wild13 {
                                                      GHC.Types.False -> GHC.Types.GT
                                                      GHC.Types.True
                                                      -> case ww4 of wild14 { GHC.Types.D# x3 ->
                                                         case ww21 of wild15 { GHC.Types.D# y3 ->
                                                         case GHC.Prim.tagToEnum#
                                                                @ GHC.Types.Bool
                                                                (GHC.Prim.<## x3 y3) of wild16 {
                                                           GHC.Types.False
                                                           -> case GHC.Prim.tagToEnum#
                                                                     @ GHC.Types.Bool
                                                                     (GHC.Prim.==##
                                                                        x3
                                                                        y3) of wild17 {
                                                                GHC.Types.False -> GHC.Types.GT
                                                                GHC.Types.True
                                                                -> case ww5 of wild18 { GHC.Types.D# x4 ->
                                                                   case ww22 of wild19 { GHC.Types.D# y4 ->
                                                                   case GHC.Prim.tagToEnum#
                                                                          @ GHC.Types.Bool
                                                                          (GHC.Prim.<##
                                                                             x4
                                                                             y4) of wild20 {
                                                                     GHC.Types.False
                                                                     -> case GHC.Prim.tagToEnum#
                                                                               @ GHC.Types.Bool
                                                                               (GHC.Prim.==##
                                                                                  x4
                                                                                  y4) of wild21 {
                                                                          GHC.Types.False
                                                                          -> GHC.Types.GT
                                                                          GHC.Types.True
                                                                          -> case ww6 of wild22 { GHC.Types.D# x5 ->
                                                                             case ww23 of wild23 { GHC.Types.D# y5 ->
                                                                             case GHC.Prim.tagToEnum#
                                                                                    @ GHC.Types.Bool
                                                                                    (GHC.Prim.<##
                                                                                       x5
                                                                                       y5) of wild24 {
                                                                               GHC.Types.False
                                                                               -> case GHC.Prim.tagToEnum#
                                                                                         @ GHC.Types.Bool
                                                                                         (GHC.Prim.==##
                                                                                            x5
                                                                                            y5) of wild25 {
                                                                                    GHC.Types.False
                                                                                    -> GHC.Types.GT
                                                                                    GHC.Types.True
                                                                                    -> case ww7 of wild26 { GHC.Types.D# x6 ->
                                                                                       case ww24 of wild27 { GHC.Types.D# y6 ->
                                                                                       case GHC.Prim.tagToEnum#
                                                                                              @ GHC.Types.Bool
                                                                                              (GHC.Prim.<##
                                                                                                 x6
                                                                                                 y6) of wild28 {
                                                                                         GHC.Types.False
                                                                                         -> case GHC.Prim.tagToEnum#
                                                                                                   @ GHC.Types.Bool
                                                                                                   (GHC.Prim.==##
                                                                                                      x6
                                                                                                      y6) of wild29 {
                                                                                              GHC.Types.False
                                                                                              -> GHC.Types.GT
                                                                                              GHC.Types.True
                                                                                              -> case ww8 of wild30 { GHC.Types.D# x7 ->
                                                                                                 case ww25 of wild31 { GHC.Types.D# y7 ->
                                                                                                 case GHC.Prim.tagToEnum#
                                                                                                        @ GHC.Types.Bool
                                                                                                        (GHC.Prim.<##
                                                                                                           x7
                                                                                                           y7) of wild32 {
                                                                                                   GHC.Types.False
                                                                                                   -> case GHC.Prim.tagToEnum#
                                                                                                             @ GHC.Types.Bool
                                                                                                             (GHC.Prim.==##
                                                                                                                x7
                                                                                                                y7) of wild33 {
                                                                                                        GHC.Types.False
                                                                                                        -> GHC.Types.GT
                                                                                                        GHC.Types.True
                                                                                                        -> case ww9 of wild34 { GHC.Types.D# x8 ->
                                                                                                           case ww26 of wild35 { GHC.Types.D# y8 ->
                                                                                                           case GHC.Prim.tagToEnum#
                                                                                                                  @ GHC.Types.Bool
                                                                                                                  (GHC.Prim.<##
                                                                                                                     x8
                                                                                                                     y8) of wild36 {
                                                                                                             GHC.Types.False
                                                                                                             -> case GHC.Prim.tagToEnum#
                                                                                                                       @ GHC.Types.Bool
                                                                                                                       (GHC.Prim.==##
                                                                                                                          x8
                                                                                                                          y8) of wild37 {
                                                                                                                  GHC.Types.False
                                                                                                                  -> GHC.Types.GT
                                                                                                                  GHC.Types.True
                                                                                                                  -> case ww10 of wild38 { GHC.Types.D# x9 ->
                                                                                                                     case ww27 of wild39 { GHC.Types.D# y9 ->
                                                                                                                     case GHC.Prim.tagToEnum#
                                                                                                                            @ GHC.Types.Bool
                                                                                                                            (GHC.Prim.<##
                                                                                                                               x9
                                                                                                                               y9) of wild40 {
                                                                                                                       GHC.Types.False
                                                                                                                       -> case GHC.Prim.tagToEnum#
                                                                                                                                 @ GHC.Types.Bool
                                                                                                                                 (GHC.Prim.==##
                                                                                                                                    x9
                                                                                                                                    y9) of wild41 {
                                                                                                                            GHC.Types.False
                                                                                                                            -> GHC.Types.GT
                                                                                                                            GHC.Types.True
                                                                                                                            -> case ww11 of wild42 { GHC.Types.D# x10 ->
                                                                                                                               case ww28 of wild43 { GHC.Types.D# y10 ->
                                                                                                                               case GHC.Prim.tagToEnum#
                                                                                                                                      @ GHC.Types.Bool
                                                                                                                                      (GHC.Prim.<##
                                                                                                                                         x10
                                                                                                                                         y10) of wild44 {
                                                                                                                                 GHC.Types.False
                                                                                                                                 -> case GHC.Prim.tagToEnum#
                                                                                                                                           @ GHC.Types.Bool
                                                                                                                                           (GHC.Prim.==##
                                                                                                                                              x10
                                                                                                                                              y10) of wild45 {
                                                                                                                                      GHC.Types.False
                                                                                                                                      -> GHC.Types.GT
                                                                                                                                      GHC.Types.True
                                                                                                                                      -> case ww12 of wild46 { GHC.Types.D# x11 ->
                                                                                                                                         case ww29 of wild47 { GHC.Types.D# y11 ->
                                                                                                                                         case GHC.Prim.tagToEnum#
                                                                                                                                                @ GHC.Types.Bool
                                                                                                                                                (GHC.Prim.<##
                                                                                                                                                   x11
                                                                                                                                                   y11) of wild48 {
                                                                                                                                           GHC.Types.False
                                                                                                                                           -> case GHC.Prim.tagToEnum#
                                                                                                                                                     @ GHC.Types.Bool
                                                                                                                                                     (GHC.Prim.==##
                                                                                                                                                        x11
                                                                                                                                                        y11) of wild49 {
                                                                                                                                                GHC.Types.False
                                                                                                                                                -> GHC.Types.GT
                                                                                                                                                GHC.Types.True
                                                                                                                                                -> case ww13 of wild50 { GHC.Types.D# x12 ->
                                                                                                                                                   case ww30 of wild51 { GHC.Types.D# y12 ->
                                                                                                                                                   case GHC.Prim.tagToEnum#
                                                                                                                                                          @ GHC.Types.Bool
                                                                                                                                                          (GHC.Prim.<##
                                                                                                                                                             x12
                                                                                                                                                             y12) of wild52 {
                                                                                                                                                     GHC.Types.False
                                                                                                                                                     -> case GHC.Prim.tagToEnum#
                                                                                                                                                               @ GHC.Types.Bool
                                                                                                                                                               (GHC.Prim.==##
                                                                                                                                                                  x12
                                                                                                                                                                  y12) of wild53 {
                                                                                                                                                          GHC.Types.False
                                                                                                                                                          -> GHC.Types.GT
                                                                                                                                                          GHC.Types.True
                                                                                                                                                          -> case GHC.Classes.$fOrd[]_$ccompare
                                                                                                                                                                    @ (Types.TeamName,
                                                                                                                                                                       Types.Wins,
                                                                                                                                                                       Types.Losses)
                                                                                                                                                                    Types.$fOrdWinningTeamStats_$s$fOrd(,,)
                                                                                                                                                                    ww14
                                                                                                                                                                    ww31 of wild54 {
                                                                                                                                                               GHC.Types.LT
                                                                                                                                                               -> GHC.Types.LT
                                                                                                                                                               GHC.Types.EQ
                                                                                                                                                               -> case GHC.Classes.$fOrd[]_$ccompare
                                                                                                                                                                         @ (Types.TeamName,
                                                                                                                                                                            Types.Wins,
                                                                                                                                                                            Types.Losses)
                                                                                                                                                                         Types.$fOrdWinningTeamStats_$s$fOrd(,,)
                                                                                                                                                                         ww15
                                                                                                                                                                         ww32 of wild55 {
                                                                                                                                                                    GHC.Types.LT
                                                                                                                                                                    -> GHC.Types.LT
                                                                                                                                                                    GHC.Types.EQ
                                                                                                                                                                    -> GHC.Classes.$fOrd[]_$ccompare
                                                                                                                                                                         @ (Types.TeamName,
                                                                                                                                                                            Types.Wins,
                                                                                                                                                                            Types.Losses)
                                                                                                                                                                         Types.$fOrdWinningTeamStats_$s$fOrd(,,)
                                                                                                                                                                         ww16
                                                                                                                                                                         ww33
                                                                                                                                                                    GHC.Types.GT
                                                                                                                                                                    -> GHC.Types.GT }
                                                                                                                                                               GHC.Types.GT
                                                                                                                                                               -> GHC.Types.GT } }
                                                                                                                                                     GHC.Types.True
                                                                                                                                                     -> GHC.Types.LT } } } }
                                                                                                                                           GHC.Types.True
                                                                                                                                           -> GHC.Types.LT } } } }
                                                                                                                                 GHC.Types.True
                                                                                                                                 -> GHC.Types.LT } } } }
                                                                                                                       GHC.Types.True
                                                                                                                       -> GHC.Types.LT } } } }
                                                                                                             GHC.Types.True
                                                                                                             -> GHC.Types.LT } } } }
                                                                                                   GHC.Types.True
                                                                                                   -> GHC.Types.LT } } } }
                                                                                         GHC.Types.True
                                                                                         -> GHC.Types.LT } } } }
                                                                               GHC.Types.True
                                                                               -> GHC.Types.LT } } } }
                                                                     GHC.Types.True
                                                                     -> GHC.Types.LT } } } }
                                                           GHC.Types.True -> GHC.Types.LT } } } }
                                                 GHC.Types.True -> GHC.Types.LT } } } }
                                       GHC.Types.True -> GHC.Types.LT } } } }
                             GHC.Types.True -> GHC.Types.LT } } } }
                   GHC.Types.True -> GHC.Types.LT }) -}
58970986ed945d71bd632e7ec2fabb85
  $w$cmax ::
    GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> Types.Defense
    -> GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> Types.Defense
    -> (# Types.Offense, Types.Defense #)
  {- Arity: 36, HasNoCafRefs,
     Strictness: <S,U><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U))><S,U><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U))>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Double#)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: GHC.Types.Double)
                   (ww3 :: GHC.Types.Double)
                   (ww4 :: GHC.Types.Double)
                   (ww5 :: GHC.Types.Double)
                   (ww6 :: GHC.Types.Double)
                   (ww7 :: GHC.Types.Double)
                   (ww8 :: GHC.Types.Double)
                   (ww9 :: GHC.Types.Double)
                   (ww10 :: GHC.Types.Double)
                   (ww11 :: GHC.Types.Double)
                   (ww12 :: GHC.Types.Double)
                   (ww13 :: GHC.Types.Double)
                   (ww14 :: GHC.Types.Double)
                   (ww15 :: GHC.Types.Double)
                   (ww16 :: GHC.Types.Double)
                   (ww17 :: Types.Defense)
                   (ww18 :: GHC.Prim.Double#)
                   (ww19 :: GHC.Types.Double)
                   (ww20 :: GHC.Types.Double)
                   (ww21 :: GHC.Types.Double)
                   (ww22 :: GHC.Types.Double)
                   (ww23 :: GHC.Types.Double)
                   (ww24 :: GHC.Types.Double)
                   (ww25 :: GHC.Types.Double)
                   (ww26 :: GHC.Types.Double)
                   (ww27 :: GHC.Types.Double)
                   (ww28 :: GHC.Types.Double)
                   (ww29 :: GHC.Types.Double)
                   (ww30 :: GHC.Types.Double)
                   (ww31 :: GHC.Types.Double)
                   (ww32 :: GHC.Types.Double)
                   (ww33 :: GHC.Types.Double)
                   (ww34 :: GHC.Types.Double)
                   (ww35 :: Types.Defense) ->
                 case Types.$w$ccompare2
                        ww
                        ww1
                        ww2
                        ww3
                        ww4
                        ww5
                        ww6
                        ww7
                        ww8
                        ww9
                        ww10
                        ww11
                        ww12
                        ww13
                        ww14
                        ww15
                        ww16
                        ww18
                        ww19
                        ww20
                        ww21
                        ww22
                        ww23
                        ww24
                        ww25
                        ww26
                        ww27
                        ww28
                        ww29
                        ww30
                        ww31
                        ww32
                        ww33
                        ww34 of wild {
                   GHC.Types.LT
                   -> (# Types.Offense
                           (GHC.Types.D# ww18)
                           ww19
                           ww20
                           ww21
                           ww22
                           ww23
                           ww24
                           ww25
                           ww26
                           ww27
                           ww28
                           ww29
                           ww30
                           ww31
                           ww32
                           ww33
                           ww34,
                         ww35 #)
                   GHC.Types.EQ
                   -> case ww17 of ww36 { Types.Defense ww37 ww38 ww39 ww40 ww41 ww42 ww43 ww44 ww45 ww46 ww47 ww48 ww49 ww50 ww51 ww52 ww53 ->
                      case ww37 of ww54 { GHC.Types.D# ww55 ->
                      case ww35 of ww56 { Types.Defense ww57 ww58 ww59 ww60 ww61 ww62 ww63 ww64 ww65 ww66 ww67 ww68 ww69 ww70 ww71 ww72 ww73 ->
                      case ww57 of ww74 { GHC.Types.D# ww75 ->
                      case Types.$w$c<=
                             ww55
                             ww38
                             ww39
                             ww40
                             ww41
                             ww42
                             ww43
                             ww44
                             ww45
                             ww46
                             ww47
                             ww48
                             ww49
                             ww50
                             ww51
                             ww52
                             ww53
                             ww75
                             ww58
                             ww59
                             ww60
                             ww61
                             ww62
                             ww63
                             ww64
                             ww65
                             ww66
                             ww67
                             ww68
                             ww69
                             ww70
                             ww71
                             ww72
                             ww73 of wild1 {
                        GHC.Types.False
                        -> (# Types.Offense
                                (GHC.Types.D# ww)
                                ww1
                                ww2
                                ww3
                                ww4
                                ww5
                                ww6
                                ww7
                                ww8
                                ww9
                                ww10
                                ww11
                                ww12
                                ww13
                                ww14
                                ww15
                                ww16,
                              ww36 #)
                        GHC.Types.True
                        -> (# Types.Offense
                                (GHC.Types.D# ww18)
                                ww19
                                ww20
                                ww21
                                ww22
                                ww23
                                ww24
                                ww25
                                ww26
                                ww27
                                ww28
                                ww29
                                ww30
                                ww31
                                ww32
                                ww33
                                ww34,
                              ww56 #) } } } } }
                   GHC.Types.GT
                   -> (# Types.Offense
                           (GHC.Types.D# ww)
                           ww1
                           ww2
                           ww3
                           ww4
                           ww5
                           ww6
                           ww7
                           ww8
                           ww9
                           ww10
                           ww11
                           ww12
                           ww13
                           ww14
                           ww15
                           ww16,
                         ww17 #) }) -}
e54a83d5b02ee0c8d42cce33fd9de5a8
  $w$cmin ::
    GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> Types.Defense
    -> GHC.Prim.Double#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> Types.Defense
    -> (# Types.Offense, Types.Defense #)
  {- Arity: 36, HasNoCafRefs,
     Strictness: <S,U><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U))><S,U><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U))>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Double#)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: GHC.Types.Double)
                   (ww3 :: GHC.Types.Double)
                   (ww4 :: GHC.Types.Double)
                   (ww5 :: GHC.Types.Double)
                   (ww6 :: GHC.Types.Double)
                   (ww7 :: GHC.Types.Double)
                   (ww8 :: GHC.Types.Double)
                   (ww9 :: GHC.Types.Double)
                   (ww10 :: GHC.Types.Double)
                   (ww11 :: GHC.Types.Double)
                   (ww12 :: GHC.Types.Double)
                   (ww13 :: GHC.Types.Double)
                   (ww14 :: GHC.Types.Double)
                   (ww15 :: GHC.Types.Double)
                   (ww16 :: GHC.Types.Double)
                   (ww17 :: Types.Defense)
                   (ww18 :: GHC.Prim.Double#)
                   (ww19 :: GHC.Types.Double)
                   (ww20 :: GHC.Types.Double)
                   (ww21 :: GHC.Types.Double)
                   (ww22 :: GHC.Types.Double)
                   (ww23 :: GHC.Types.Double)
                   (ww24 :: GHC.Types.Double)
                   (ww25 :: GHC.Types.Double)
                   (ww26 :: GHC.Types.Double)
                   (ww27 :: GHC.Types.Double)
                   (ww28 :: GHC.Types.Double)
                   (ww29 :: GHC.Types.Double)
                   (ww30 :: GHC.Types.Double)
                   (ww31 :: GHC.Types.Double)
                   (ww32 :: GHC.Types.Double)
                   (ww33 :: GHC.Types.Double)
                   (ww34 :: GHC.Types.Double)
                   (ww35 :: Types.Defense) ->
                 case Types.$w$ccompare2
                        ww
                        ww1
                        ww2
                        ww3
                        ww4
                        ww5
                        ww6
                        ww7
                        ww8
                        ww9
                        ww10
                        ww11
                        ww12
                        ww13
                        ww14
                        ww15
                        ww16
                        ww18
                        ww19
                        ww20
                        ww21
                        ww22
                        ww23
                        ww24
                        ww25
                        ww26
                        ww27
                        ww28
                        ww29
                        ww30
                        ww31
                        ww32
                        ww33
                        ww34 of wild {
                   GHC.Types.LT
                   -> (# Types.Offense
                           (GHC.Types.D# ww)
                           ww1
                           ww2
                           ww3
                           ww4
                           ww5
                           ww6
                           ww7
                           ww8
                           ww9
                           ww10
                           ww11
                           ww12
                           ww13
                           ww14
                           ww15
                           ww16,
                         ww17 #)
                   GHC.Types.EQ
                   -> case ww17 of ww36 { Types.Defense ww37 ww38 ww39 ww40 ww41 ww42 ww43 ww44 ww45 ww46 ww47 ww48 ww49 ww50 ww51 ww52 ww53 ->
                      case ww37 of ww54 { GHC.Types.D# ww55 ->
                      case ww35 of ww56 { Types.Defense ww57 ww58 ww59 ww60 ww61 ww62 ww63 ww64 ww65 ww66 ww67 ww68 ww69 ww70 ww71 ww72 ww73 ->
                      case ww57 of ww74 { GHC.Types.D# ww75 ->
                      case Types.$w$c<=
                             ww55
                             ww38
                             ww39
                             ww40
                             ww41
                             ww42
                             ww43
                             ww44
                             ww45
                             ww46
                             ww47
                             ww48
                             ww49
                             ww50
                             ww51
                             ww52
                             ww53
                             ww75
                             ww58
                             ww59
                             ww60
                             ww61
                             ww62
                             ww63
                             ww64
                             ww65
                             ww66
                             ww67
                             ww68
                             ww69
                             ww70
                             ww71
                             ww72
                             ww73 of wild1 {
                        GHC.Types.False
                        -> (# Types.Offense
                                (GHC.Types.D# ww18)
                                ww19
                                ww20
                                ww21
                                ww22
                                ww23
                                ww24
                                ww25
                                ww26
                                ww27
                                ww28
                                ww29
                                ww30
                                ww31
                                ww32
                                ww33
                                ww34,
                              ww56 #)
                        GHC.Types.True
                        -> (# Types.Offense
                                (GHC.Types.D# ww)
                                ww1
                                ww2
                                ww3
                                ww4
                                ww5
                                ww6
                                ww7
                                ww8
                                ww9
                                ww10
                                ww11
                                ww12
                                ww13
                                ww14
                                ww15
                                ww16,
                              ww36 #) } } } } }
                   GHC.Types.GT
                   -> (# Types.Offense
                           (GHC.Types.D# ww18)
                           ww19
                           ww20
                           ww21
                           ww22
                           ww23
                           ww24
                           ww25
                           ww26
                           ww27
                           ww28
                           ww29
                           ww30
                           ww31
                           ww32
                           ww33
                           ww34,
                         ww35 #) }) -}
b51f5ec8fe45da6d5c4e1c522ef1294f
  $w$creadPrec ::
    GHC.Prim.Int#
    -> forall b.
       (Types.Defense -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,C(U)>, Inline: [0] -}
2d8324793dbdb79a8c778099a20ae0ac
  $w$creadPrec1 ::
    GHC.Prim.Int#
    -> forall b.
       (Types.GameLogsByTeam -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,C(U)>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   @ b
                   (w :: Types.GameLogsByTeam -> Text.ParserCombinators.ReadP.P b) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# ww 10#) of wild2 {
                   GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                   GHC.Types.True
                   -> let {
                        lvl203 :: Text.ParserCombinators.ReadP.P b
                        = let {
                            lvl204 :: Text.ParserCombinators.ReadP.P b
                            = GHC.Read.$wlist
                                @ (GHC.Types.Int, [Types.GameResult])
                                Types.$fReadGameLogsByTeam5
                                  `cast`
                                (Trans
                                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                                      ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                                    <(GHC.Types.Int, [Types.GameResult])>_R))
                                     (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                               <(GHC.Types.Int, [Types.GameResult])>_R)))
                                @ b
                                (\ (a1 :: [(Types.Team_ID, [Types.GameResult])]) ->
                                 w (Types.GameLogsByTeam a1))
                          } in
                          Text.Read.Lex.expect2
                            @ b
                            (\ (a1 :: Text.Read.Lex.Lexeme) ->
                             case a1 of wild {
                               DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                               Text.Read.Lex.Ident a2
                               -> case GHC.Base.eqString a2 Types.$fReadGameLogsByTeam4 of wild1 {
                                    GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                                    GHC.Types.True -> lvl204 } })
                      } in
                      let {
                        k :: () -> Text.ParserCombinators.ReadP.P b
                          {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                             Unfolding: InlineRule (1, True, True) (\ (w4 :: ()) -> lvl203) -}
                        = \ (w4 :: ()) -> lvl203
                      } in
                      Text.ParserCombinators.ReadP.Look
                        @ b
                        (\ (a :: GHC.Base.String) ->
                         (Text.ParserCombinators.ReadP.skipSpaces_skip a)
                           `cast`
                         (Text.ParserCombinators.ReadP.N:ReadP[0] <()>_R)
                           @ b
                           k) }) -}
9965cd3fb4a9830c83bfa78bfc630eec
  $w$creadPrec2 ::
    GHC.Prim.Int#
    -> forall b.
       (Types.GameResult -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,C(U)>, Inline: [0] -}
f6c970fdfe1dfab2838262c0307998c8
  $w$creadPrec3 ::
    GHC.Prim.Int#
    -> forall b.
       (Types.Offense -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,C(U)>, Inline: [0] -}
57bc393b2aaecd16055f7506d52795b9
  $w$creadPrec4 ::
    GHC.Prim.Int#
    -> forall b.
       (Types.TeamStats -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,C(U)>, Inline: [0] -}
d22d45b904ef4ac038fed1728f0be333
  $w$creadPrec5 ::
    GHC.Prim.Int#
    -> forall b.
       (Types.WinningTeamStats -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,C(U)>, Inline: [0] -}
fb32fb61c250d2408788de415c082e6c
  $w$cshow ::
    [(Types.Team_ID, [Types.GameResult])] -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: [(Types.Team_ID, [Types.GameResult])]) ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   Types.$fShowGameLogsByTeam4
                   (GHC.Show.showList__
                      @ (GHC.Types.Int, [Types.GameResult])
                      Types.$fShowGameLogsByTeam2
                      ww
                      (GHC.Types.[] @ GHC.Types.Char))) -}
ec5fdbd626989c957220d74c756bb5e6
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Show.ShowS
  {- Arity: 18,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0] -}
2b2071d713c3c124bc9e5809280c9055
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> [(Types.Team_ID, [Types.GameResult])]
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><L,1*U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: [(Types.Team_ID, [Types.GameResult])])
                   (w :: GHC.Base.String) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Types.$fShowGameLogsByTeam4
                        (GHC.Show.showList__
                           @ (GHC.Types.Int, [Types.GameResult])
                           Types.$fShowGameLogsByTeam2
                           ww1
                           w)
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows9
                        (GHC.Base.++
                           @ GHC.Types.Char
                           Types.$fShowGameLogsByTeam4
                           (GHC.Show.showList__
                              @ (GHC.Types.Int, [Types.GameResult])
                              Types.$fShowGameLogsByTeam2
                              ww1
                              (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 w))) }) -}
bdbdaf17104698706d2d159f809e264c
  $w$cshowsPrec2 ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Char
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Float
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Float
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Float
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Show.ShowS
  {- Arity: 28,
     Strictness: <S,U><L,U(U)><L,U><L,U><L,U><L,U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0] -}
b1077926c9a2571627e78348a763a79b
  $w$cshowsPrec3 ::
    GHC.Prim.Int#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Show.ShowS
  {- Arity: 18,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0] -}
892d93e47cd653fb3b5b8447ad384f14
  $w$cshowsPrec4 ::
    GHC.Prim.Int# -> Types.Offense -> Types.Defense -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S,U><L,1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><L,1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Types.Offense)
                   (ww2 :: Types.Defense) ->
                 let {
                   f :: GHC.Base.String -> GHC.Base.String
                   = case ww1 of ww3 { Types.Offense ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ->
                     Types.$w$cshowsPrec3
                       0#
                       ww4
                       ww5
                       ww6
                       ww7
                       ww8
                       ww9
                       ww10
                       ww11
                       ww12
                       ww13
                       ww14
                       ww15
                       ww16
                       ww17
                       ww18
                       ww19
                       ww20 }
                 } in
                 let {
                   f1 :: GHC.Base.String -> GHC.Base.String
                   = case ww2 of ww3 { Types.Defense ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ->
                     Types.$w$cshowsPrec
                       0#
                       ww4
                       ww5
                       ww6
                       ww7
                       ww8
                       ww9
                       ww10
                       ww11
                       ww12
                       ww13
                       ww14
                       ww15
                       ww16
                       ww17
                       ww18
                       ww19
                       ww20 }
                 } in
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String) ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Types.$fShowTeamStats6
                       (GHC.Base.++
                          @ GHC.Types.Char
                          Types.$fShowTeamStats5
                          (f (GHC.Base.++
                                @ GHC.Types.Char
                                Types.$fShowTeamStats4
                                (GHC.Base.++
                                   @ GHC.Types.Char
                                   Types.$fShowTeamStats3
                                   (f1 (GHC.Base.++ @ GHC.Types.Char Types.$fShowTeamStats2 x))))))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p
                   GHC.Types.True
                   -> \ (x :: GHC.Base.String) ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows9
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 x)) }) -}
3064dbd88aed92d25477b49748dec288
  $w$cshowsPrec5 ::
    GHC.Prim.Int#
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> GHC.Types.Double
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
    -> GHC.Show.ShowS
  {- Arity: 18,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,U><L,U><L,U>,
     Inline: [0] -}
63a7289379457ddc39464243f56f7993
  type AwayTeamGameResult = Types.GameResult
7b33e7db93482fc07aa66ff00966b730
  type BoxScore =
    (Types.WinningTeamGameResult, Types.LosingTeamGameResult)
bb35b49f74cc1d810e139ef880e8ee92
  type DayDiff = GHC.Integer.Type.Integer
b51f5ec8fe45da6d5c4e1c522ef1294f
  data Defense
    = Defense {oppWins :: GHC.Types.Double,
               oppLosses :: GHC.Types.Double,
               oppFGM :: GHC.Types.Double,
               oppFGA :: GHC.Types.Double,
               oppFGP :: GHC.Types.Double,
               opp3FGM :: GHC.Types.Double,
               opp3FGA :: GHC.Types.Double,
               oppFTM :: GHC.Types.Double,
               oppFTA :: GHC.Types.Double,
               oppOREB :: GHC.Types.Double,
               oppREB :: GHC.Types.Double,
               oppAST :: GHC.Types.Double,
               oppSTL :: GHC.Types.Double,
               oppBLK :: GHC.Types.Double,
               oppTOV :: GHC.Types.Double,
               oppPF :: GHC.Types.Double,
               oppPTS :: GHC.Types.Double}
3b93c766a88f70c74b0a10d2bd2f31dd
  type GameDate = GHC.Base.String
2d8324793dbdb79a8c778099a20ae0ac
  data GameLogsByTeam
    = GameLogsByTeam [(Types.Team_ID, [Types.GameResult])]
9965cd3fb4a9830c83bfa78bfc630eec
  data GameResult
    = GameResult {team_ID :: GHC.Types.Int,
                  game_ID :: GHC.Base.String,
                  game_date :: GHC.Base.String,
                  matchup :: GHC.Base.String,
                  wl :: GHC.Types.Char,
                  wi :: GHC.Types.Double,
                  lo :: GHC.Types.Double,
                  w_pct :: GHC.Types.Float,
                  minutes :: GHC.Types.Double,
                  fgm :: GHC.Types.Double,
                  fga :: GHC.Types.Double,
                  fg_pct :: GHC.Types.Double,
                  fg3m :: GHC.Types.Double,
                  fg3a :: GHC.Types.Double,
                  fg3_pct :: GHC.Types.Float,
                  ftm :: GHC.Types.Double,
                  fta :: GHC.Types.Double,
                  ft_pct :: GHC.Types.Float,
                  oreb :: GHC.Types.Double,
                  dreb :: GHC.Types.Double,
                  reb :: GHC.Types.Double,
                  ast :: GHC.Types.Double,
                  stl :: GHC.Types.Double,
                  blk :: GHC.Types.Double,
                  tov :: GHC.Types.Double,
                  pf :: GHC.Types.Double,
                  pts :: GHC.Types.Double}
769e699cb65a09f0892704ef7fb906ef
  type Game_ID = GHC.Base.String
2b15f5c7314c632a03df9bf5219fd9b7
  type HomeTeamGameResult = Types.GameResult
8ee909b95dc66c41c686b701b2d0c49a
  type LosingTeamGameResult = Types.GameResult
2641e74f9c451fe55cd2dd05dfe3914a
  type Losses = GHC.Types.Int
51ff151c748568059e3807ac8fec55d9
  type NumGamesPlayed = GHC.Types.Int
f6c970fdfe1dfab2838262c0307998c8
  data Offense
    = Offense {wins :: GHC.Types.Double,
               losses :: GHC.Types.Double,
               fieldGoalsMade :: GHC.Types.Double,
               fieldGoalsAttempted :: GHC.Types.Double,
               fieldGoalPercentage :: GHC.Types.Double,
               threePointersMade :: GHC.Types.Double,
               threePointersAttempted :: GHC.Types.Double,
               freeThrowsMade :: GHC.Types.Double,
               freeThrowsAttempted :: GHC.Types.Double,
               oRebounds :: GHC.Types.Double,
               totalRebounds :: GHC.Types.Double,
               assist :: GHC.Types.Double,
               stealsMade :: GHC.Types.Double,
               blockedShots :: GHC.Types.Double,
               turnoversCommitted :: GHC.Types.Double,
               personalFouls :: GHC.Types.Double,
               points :: GHC.Types.Double}
059802e8822d4dde8c69b3e7b153628e
  type TeamABBR = GHC.Base.String
1d549ac4b892a72864d11837bddeba7f
  type TeamName = GHC.Base.String
57bc393b2aaecd16055f7506d52795b9
  data TeamStats
    = TeamStats {totalOffense :: Types.Offense,
                 totalDefense :: Types.Defense}
2a1f548bd3c14a73a5ad22224027dae8
  type Team_ID = GHC.Types.Int
b0e0b359a3fe649a806f6b9dc72a9392
  type Teams = (Types.TeamName, Types.Team_ID, Types.TeamABBR)
6cded5470f499fae83fc869e139d21cc
  type TotalGames = GHC.Types.Double
3d2cdf2ae0beb6884ebfcb7f3fe266db
  type WinPct = GHC.Types.Double
facac5ba4eb6456a0fe1f9a4026a6cee
  type WinningTeamGameResult = Types.GameResult
a6098eb3a7fa68c996fa1886168655b0
  type WinningTeamID = GHC.Types.Int
d22d45b904ef4ac038fed1728f0be333
  data WinningTeamStats
    = WinningTeamStats {pointDiff :: GHC.Types.Double,
                        fieldGoalPct :: GHC.Types.Double,
                        rebounds :: GHC.Types.Double,
                        assists :: GHC.Types.Double,
                        steals :: GHC.Types.Double,
                        offReb :: GHC.Types.Double,
                        turnovers :: GHC.Types.Double,
                        threeFGA :: GHC.Types.Double,
                        threeFGM :: GHC.Types.Double,
                        freeTAtt :: GHC.Types.Double,
                        freeTMade :: GHC.Types.Double,
                        blocks :: GHC.Types.Double,
                        eFGPct :: GHC.Types.Double,
                        home :: GHC.Types.Double,
                        b2b :: [(Types.TeamName, Types.Wins, Types.Losses)],
                        threeInFour :: [(Types.TeamName, Types.Wins, Types.Losses)],
                        fourInSix :: [(Types.TeamName, Types.Wins, Types.Losses)]}
fb6a1ed813d13544ccc8c2cd681eb41e
  type Wins = GHC.Types.Int
5dfd5f67177239048ab3877ff034041a
  assist :: Types.Offense -> GHC.Types.Double
  RecSel Left Types.Offense
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLSLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Offense) ->
                 case ds of wild { Types.Offense ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds12 }) -}
19d507dbc3359d31318a34aac4475067
  assists :: Types.WinningTeamStats -> GHC.Types.Double
  RecSel Left Types.WinningTeamStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLLLLLLLLL),1*U(A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.WinningTeamStats) ->
                 case ds of wild { Types.WinningTeamStats ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds4 }) -}
50c1c64dafb2f7351d2cbe6a49d262a9
  ast :: Types.GameResult -> GHC.Types.Double
  RecSel Left Types.GameResult
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLSLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.GameResult) ->
                 case ds of wild { Types.GameResult ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ->
                 ds22 }) -}
c1159f129501f69627e10a019450e823
  b2b ::
    Types.WinningTeamStats
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
  RecSel Left Types.WinningTeamStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLSLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.WinningTeamStats) ->
                 case ds of wild { Types.WinningTeamStats ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds15 }) -}
fdec46f6af8e995460ff214b588a439d
  blk :: Types.GameResult -> GHC.Types.Double
  RecSel Left Types.GameResult
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLSLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.GameResult) ->
                 case ds of wild { Types.GameResult ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ->
                 ds24 }) -}
ad87bc4a9827f8a421bc23f233aef23b
  blockedShots :: Types.Offense -> GHC.Types.Double
  RecSel Left Types.Offense
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLSLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Offense) ->
                 case ds of wild { Types.Offense ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds14 }) -}
81183c2a5416e95d5d104b7082b94fb7
  blocks :: Types.WinningTeamStats -> GHC.Types.Double
  RecSel Left Types.WinningTeamStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLSLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.WinningTeamStats) ->
                 case ds of wild { Types.WinningTeamStats ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds12 }) -}
33302277175b9c131157c44872218c09
  dreb :: Types.GameResult -> GHC.Types.Double
  RecSel Left Types.GameResult
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLSLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.GameResult) ->
                 case ds of wild { Types.GameResult ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ->
                 ds20 }) -}
83955cee4d660d79960e1e7ef3efb63a
  eFGPct :: Types.WinningTeamStats -> GHC.Types.Double
  RecSel Left Types.WinningTeamStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLSLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.WinningTeamStats) ->
                 case ds of wild { Types.WinningTeamStats ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds13 }) -}
264e4239678b5d67d76431fdf49ac8f3
  fg3_pct :: Types.GameResult -> GHC.Types.Float
  RecSel Left Types.GameResult
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLSLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.GameResult) ->
                 case ds of wild { Types.GameResult ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ->
                 ds15 }) -}
7fe053eabfef88d9be1ffcdec641613f
  fg3a :: Types.GameResult -> GHC.Types.Double
  RecSel Left Types.GameResult
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLSLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.GameResult) ->
                 case ds of wild { Types.GameResult ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ->
                 ds14 }) -}
0c1c3b0ee6168c8261a10520b6a44a8a
  fg3m :: Types.GameResult -> GHC.Types.Double
  RecSel Left Types.GameResult
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLSLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.GameResult) ->
                 case ds of wild { Types.GameResult ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ->
                 ds13 }) -}
92494e406eb184504d0d9c810256309b
  fg_pct :: Types.GameResult -> GHC.Types.Double
  RecSel Left Types.GameResult
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLSLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.GameResult) ->
                 case ds of wild { Types.GameResult ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ->
                 ds12 }) -}
ad86ebcd6c40c29b3364be9f0245af0b
  fga :: Types.GameResult -> GHC.Types.Double
  RecSel Left Types.GameResult
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLSLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.GameResult) ->
                 case ds of wild { Types.GameResult ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ->
                 ds11 }) -}
1ffbb3ec894ccfcbfe417a6564acc5ae
  fgm :: Types.GameResult -> GHC.Types.Double
  RecSel Left Types.GameResult
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLSLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.GameResult) ->
                 case ds of wild { Types.GameResult ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ->
                 ds10 }) -}
23447c22cf71e43e5fd10bce3d6e3900
  fieldGoalPct :: Types.WinningTeamStats -> GHC.Types.Double
  RecSel Left Types.WinningTeamStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLLLLLLLLL),1*U(A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.WinningTeamStats) ->
                 case ds of wild { Types.WinningTeamStats ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds2 }) -}
8c970448ecca1eaf73ca96bb77381929
  fieldGoalPercentage :: Types.Offense -> GHC.Types.Double
  RecSel Left Types.Offense
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLLLLLLLLL),1*U(A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Offense) ->
                 case ds of wild { Types.Offense ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds5 }) -}
51ef3dfb4b592a2fc743f7076fdda22c
  fieldGoalsAttempted :: Types.Offense -> GHC.Types.Double
  RecSel Left Types.Offense
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLLLLLLLLL),1*U(A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Offense) ->
                 case ds of wild { Types.Offense ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds4 }) -}
09ce8e971590a4042779367f29789ad0
  fieldGoalsMade :: Types.Offense -> GHC.Types.Double
  RecSel Left Types.Offense
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLL),1*U(A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Offense) ->
                 case ds of wild { Types.Offense ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds3 }) -}
74a436c313df920acd0698db757cf6c7
  fourInSix ::
    Types.WinningTeamStats
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
  RecSel Left Types.WinningTeamStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.WinningTeamStats) ->
                 case ds of wild { Types.WinningTeamStats ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds17 }) -}
4c8df88f2b59d35d8fc5f373db22e4a3
  freeTAtt :: Types.WinningTeamStats -> GHC.Types.Double
  RecSel Left Types.WinningTeamStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLSLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.WinningTeamStats) ->
                 case ds of wild { Types.WinningTeamStats ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds10 }) -}
ae348f1fb9c49b575cf734df8299c842
  freeTMade :: Types.WinningTeamStats -> GHC.Types.Double
  RecSel Left Types.WinningTeamStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLSLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.WinningTeamStats) ->
                 case ds of wild { Types.WinningTeamStats ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds11 }) -}
7e484c81fff3dc04f3d39caf3135903f
  freeThrowsAttempted :: Types.Offense -> GHC.Types.Double
  RecSel Left Types.Offense
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSLLLLLLLL),1*U(A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Offense) ->
                 case ds of wild { Types.Offense ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds9 }) -}
7bb42fea4a772cf67a32fec21741e4e6
  freeThrowsMade :: Types.Offense -> GHC.Types.Double
  RecSel Left Types.Offense
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLLLLLLLLL),1*U(A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Offense) ->
                 case ds of wild { Types.Offense ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds8 }) -}
a076cf44ae960cd8642f221ac5b434da
  ft_pct :: Types.GameResult -> GHC.Types.Float
  RecSel Left Types.GameResult
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLSLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.GameResult) ->
                 case ds of wild { Types.GameResult ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ->
                 ds18 }) -}
163e8a9c9b7d0e6654fd0fadc31ba851
  fta :: Types.GameResult -> GHC.Types.Double
  RecSel Left Types.GameResult
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLSLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.GameResult) ->
                 case ds of wild { Types.GameResult ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ->
                 ds17 }) -}
5afec20dfffe80124210727bc3908cbc
  ftm :: Types.GameResult -> GHC.Types.Double
  RecSel Left Types.GameResult
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLSLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.GameResult) ->
                 case ds of wild { Types.GameResult ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ->
                 ds16 }) -}
77e36dd5b6631a9e23fb9ed3f92a1135
  game_ID :: Types.GameResult -> GHC.Base.String
  RecSel Left Types.GameResult
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.GameResult) ->
                 case ds of wild { Types.GameResult ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ->
                 ds2 }) -}
ce36ad5a9d0ab2dcfe0daf0da17fe46b
  game_date :: Types.GameResult -> GHC.Base.String
  RecSel Left Types.GameResult
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.GameResult) ->
                 case ds of wild { Types.GameResult ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ->
                 ds3 }) -}
5c900c27b00c6922bd30840dd38cc034
  home :: Types.WinningTeamStats -> GHC.Types.Double
  RecSel Left Types.WinningTeamStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLSLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.WinningTeamStats) ->
                 case ds of wild { Types.WinningTeamStats ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds14 }) -}
1705268aea44ebf7a833786527f811da
  lo :: Types.GameResult -> GHC.Types.Double
  RecSel Left Types.GameResult
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.GameResult) ->
                 case ds of wild { Types.GameResult ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ->
                 ds7 }) -}
f25f78d26dc6e7f8505ff54a0eb95347
  losses :: Types.Offense -> GHC.Types.Double
  RecSel Left Types.Offense
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLLLLLLLLL),1*U(A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Offense) ->
                 case ds of wild { Types.Offense ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds2 }) -}
1ab3dfd7366f9e9bc96c5f6dfc9cb69e
  matchup :: Types.GameResult -> GHC.Base.String
  RecSel Left Types.GameResult
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.GameResult) ->
                 case ds of wild { Types.GameResult ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ->
                 ds4 }) -}
e806c9482b00cf85d4bc84ee0b1c3f9d
  minutes :: Types.GameResult -> GHC.Types.Double
  RecSel Left Types.GameResult
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.GameResult) ->
                 case ds of wild { Types.GameResult ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ->
                 ds9 }) -}
fa7873ac67bb6ced81a095220d4c8144
  oRebounds :: Types.Offense -> GHC.Types.Double
  RecSel Left Types.Offense
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLSLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Offense) ->
                 case ds of wild { Types.Offense ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds10 }) -}
65306e9262c08e457a975c04be0e0fd4
  offReb :: Types.WinningTeamStats -> GHC.Types.Double
  RecSel Left Types.WinningTeamStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLLLLLLLLL),1*U(A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.WinningTeamStats) ->
                 case ds of wild { Types.WinningTeamStats ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds6 }) -}
8b452e7efcff1b609260e206c108bb1a
  opp3FGA :: Types.Defense -> GHC.Types.Double
  RecSel Left Types.Defense
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLLLLLLLLL),1*U(A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Defense) ->
                 case ds of wild { Types.Defense ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds7 }) -}
dfecc3fb1c226b984fbb80e0ca7834e5
  opp3FGM :: Types.Defense -> GHC.Types.Double
  RecSel Left Types.Defense
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLLLLLLLLL),1*U(A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Defense) ->
                 case ds of wild { Types.Defense ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds6 }) -}
e3a62582a1ba7f4b9ab450582cbe82ea
  oppAST :: Types.Defense -> GHC.Types.Double
  RecSel Left Types.Defense
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLSLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Defense) ->
                 case ds of wild { Types.Defense ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds12 }) -}
1d2705adf665ca0b6faf162af770d562
  oppBLK :: Types.Defense -> GHC.Types.Double
  RecSel Left Types.Defense
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLSLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Defense) ->
                 case ds of wild { Types.Defense ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds14 }) -}
1ca9a19e8264a9c45c76130b28250405
  oppFGA :: Types.Defense -> GHC.Types.Double
  RecSel Left Types.Defense
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLLLLLLLLL),1*U(A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Defense) ->
                 case ds of wild { Types.Defense ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds4 }) -}
2fa7468358d5e261aefab1dc4e6d5812
  oppFGM :: Types.Defense -> GHC.Types.Double
  RecSel Left Types.Defense
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLL),1*U(A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Defense) ->
                 case ds of wild { Types.Defense ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds3 }) -}
1886bd481462f95601c15da17d5ee860
  oppFGP :: Types.Defense -> GHC.Types.Double
  RecSel Left Types.Defense
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLLLLLLLLL),1*U(A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Defense) ->
                 case ds of wild { Types.Defense ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds5 }) -}
f9931e126a21a8ecbaa1cf0e7218cd72
  oppFTA :: Types.Defense -> GHC.Types.Double
  RecSel Left Types.Defense
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSLLLLLLLL),1*U(A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Defense) ->
                 case ds of wild { Types.Defense ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds9 }) -}
accd683ca51be76ec052b023c3089e3d
  oppFTM :: Types.Defense -> GHC.Types.Double
  RecSel Left Types.Defense
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLLLLLLLLL),1*U(A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Defense) ->
                 case ds of wild { Types.Defense ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds8 }) -}
eec0943b8cc2dd2e4d5915b47958490d
  oppLosses :: Types.Defense -> GHC.Types.Double
  RecSel Left Types.Defense
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLLLLLLLLL),1*U(A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Defense) ->
                 case ds of wild { Types.Defense ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds2 }) -}
a654dfef25497a7dc83dca4c12381be3
  oppOREB :: Types.Defense -> GHC.Types.Double
  RecSel Left Types.Defense
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLSLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Defense) ->
                 case ds of wild { Types.Defense ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds10 }) -}
04a98ab053e69ee87163147521bc67be
  oppPF :: Types.Defense -> GHC.Types.Double
  RecSel Left Types.Defense
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Defense) ->
                 case ds of wild { Types.Defense ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds16 }) -}
1b45f8a5f63113723cc67406f73d2284
  oppPTS :: Types.Defense -> GHC.Types.Double
  RecSel Left Types.Defense
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Defense) ->
                 case ds of wild { Types.Defense ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds17 }) -}
df3120e12d7e5f730985e82057701119
  oppREB :: Types.Defense -> GHC.Types.Double
  RecSel Left Types.Defense
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLSLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Defense) ->
                 case ds of wild { Types.Defense ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds11 }) -}
ca016fb4c08a4c74f4c7eca374794c3b
  oppSTL :: Types.Defense -> GHC.Types.Double
  RecSel Left Types.Defense
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLSLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Defense) ->
                 case ds of wild { Types.Defense ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds13 }) -}
124ecc4cb238f6f9108034892c84c4a2
  oppTOV :: Types.Defense -> GHC.Types.Double
  RecSel Left Types.Defense
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLSLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Defense) ->
                 case ds of wild { Types.Defense ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds15 }) -}
463957cb83f0e72f8d86e13fe3ff538f
  oppWins :: Types.Defense -> GHC.Types.Double
  RecSel Left Types.Defense
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLLLLLLL),1*U(1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Defense) ->
                 case ds of wild { Types.Defense ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds1 }) -}
9ddd6e4cb34893370515ccda05f7dcc5
  oreb :: Types.GameResult -> GHC.Types.Double
  RecSel Left Types.GameResult
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLSLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.GameResult) ->
                 case ds of wild { Types.GameResult ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ->
                 ds19 }) -}
6a5bca22a98f304e9bbaf1bf59aa84b6
  personalFouls :: Types.Offense -> GHC.Types.Double
  RecSel Left Types.Offense
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Offense) ->
                 case ds of wild { Types.Offense ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds16 }) -}
30ea71a5259db77e290a1f9cad57fe62
  pf :: Types.GameResult -> GHC.Types.Double
  RecSel Left Types.GameResult
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.GameResult) ->
                 case ds of wild { Types.GameResult ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ->
                 ds26 }) -}
b4f1ef8b72a0b33cacea69e2f72a8f1c
  pointDiff :: Types.WinningTeamStats -> GHC.Types.Double
  RecSel Left Types.WinningTeamStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLLLLLLL),1*U(1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.WinningTeamStats) ->
                 case ds of wild { Types.WinningTeamStats ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds1 }) -}
56402b64bd2e2947e9f5a2a9f5eec1b3
  points :: Types.Offense -> GHC.Types.Double
  RecSel Left Types.Offense
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Offense) ->
                 case ds of wild { Types.Offense ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds17 }) -}
b2f98c69c073826a21b9459fd8434c49
  pts :: Types.GameResult -> GHC.Types.Double
  RecSel Left Types.GameResult
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.GameResult) ->
                 case ds of wild { Types.GameResult ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ->
                 ds27 }) -}
fe402a131d88b48fb06cce41cd1d319f
  reb :: Types.GameResult -> GHC.Types.Double
  RecSel Left Types.GameResult
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLSLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.GameResult) ->
                 case ds of wild { Types.GameResult ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ->
                 ds21 }) -}
9029dc31176dbb36d24fff6f82e2024b
  rebounds :: Types.WinningTeamStats -> GHC.Types.Double
  RecSel Left Types.WinningTeamStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLL),1*U(A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.WinningTeamStats) ->
                 case ds of wild { Types.WinningTeamStats ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds3 }) -}
a9e6cfd39f47e6bf6d3fd6a745166f42
  steals :: Types.WinningTeamStats -> GHC.Types.Double
  RecSel Left Types.WinningTeamStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLLLLLLLLL),1*U(A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.WinningTeamStats) ->
                 case ds of wild { Types.WinningTeamStats ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds5 }) -}
4619d389603e015eac4aa9082e9bb4ab
  stealsMade :: Types.Offense -> GHC.Types.Double
  RecSel Left Types.Offense
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLSLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Offense) ->
                 case ds of wild { Types.Offense ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds13 }) -}
8faf6bc4eb5318a8fbd5de99ad1e5800
  stl :: Types.GameResult -> GHC.Types.Double
  RecSel Left Types.GameResult
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLSLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.GameResult) ->
                 case ds of wild { Types.GameResult ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ->
                 ds23 }) -}
4ea965d34b57ba44bbff8fdf849b24e0
  team_ID :: Types.GameResult -> GHC.Types.Int
  RecSel Left Types.GameResult
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.GameResult) ->
                 case ds of wild { Types.GameResult ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ->
                 ds1 }) -}
1519a97f1d5dc903076e4d698a7df16d
  teams :: [Types.Teams]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Teams
                   Types.teams146
                   Types.teams1) -}
5d8a55d4c50363020536bdf9fd4d003f
  teams1 :: [Types.Teams]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Teams
                   Types.teams142
                   Types.teams2) -}
b7821c244166889683a68e8cfd5dfb32
  teams10 :: [Types.Teams]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Teams
                   Types.teams106
                   Types.teams11) -}
f50d218b27545b37c18e98d257e51d5f
  teams100 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.I# 1610612746#) -}
c3cb4a2c148465ba116985f87af858ec
  teams101 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Los Angeles Clippers"#) -}
a0ff043fc0106f147fce72c5d4c39bb3
  teams102 :: ([GHC.Types.Char], GHC.Types.Int, [GHC.Types.Char])
  {- Strictness: m,
     Unfolding: ((Types.teams105, Types.teams104, Types.teams103)) -}
0d8bf30f48199e4b137f97b25fe8777f
  teams103 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "IND"#) -}
2bcdcb321bab894bc8b33daab652fb50
  teams104 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.I# 1610612754#) -}
2c78459a6aa6ee203725de391e222a64
  teams105 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Indiana Pacers"#) -}
00b540f2453d8783ae884d8f409ba1d1
  teams106 :: ([GHC.Types.Char], GHC.Types.Int, [GHC.Types.Char])
  {- Strictness: m,
     Unfolding: ((Types.teams109, Types.teams108, Types.teams107)) -}
62dbb9d84fab21fb4cd5139632b69265
  teams107 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "HOU"#) -}
882a4832c328715e1de8d450ec4f668a
  teams108 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.I# 1610612745#) -}
0bc0c6997cf1de1314bf230ae36cb706
  teams109 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Houston Rockets"#) -}
0b294c80b6a6ddd2873264e2aa5a9588
  teams11 :: [Types.Teams]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Teams
                   Types.teams102
                   Types.teams12) -}
224b36203364e8d26faafd5dd719bfa5
  teams110 :: ([GHC.Types.Char], GHC.Types.Int, [GHC.Types.Char])
  {- Strictness: m,
     Unfolding: ((Types.teams113, Types.teams112, Types.teams111)) -}
f7748c18bb1d7348c15c4611003ad8c1
  teams111 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "GSW"#) -}
ee8e2e2bd3d3e46626795e184bcce8f1
  teams112 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.I# 1610612744#) -}
a94b6503b5f3b8ac639890e0db83c40a
  teams113 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Golden State Warriors"#) -}
ca808cb82dfae1d18752ffd9d1f041e1
  teams114 :: ([GHC.Types.Char], GHC.Types.Int, [GHC.Types.Char])
  {- Strictness: m,
     Unfolding: ((Types.teams117, Types.teams116, Types.teams115)) -}
dcdbcf10922d735da68d540c60f1c0ee
  teams115 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "DET"#) -}
06fdb914247029d70c80aa8a1d5de9f1
  teams116 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.I# 1610612765#) -}
a6ec175faba22563bcbc05993c9c7920
  teams117 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Detroit Pistons"#) -}
113aa49b4ae419d8588741eb1f667383
  teams118 :: ([GHC.Types.Char], GHC.Types.Int, [GHC.Types.Char])
  {- Strictness: m,
     Unfolding: ((Types.teams121, Types.teams120, Types.teams119)) -}
c57ab2a441345269fb0e5cce0a64df15
  teams119 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "DEN"#) -}
7d5f0abeaaec0f4359415f53cd5784c6
  teams12 :: [Types.Teams]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Teams
                   Types.teams98
                   Types.teams13) -}
9b33c8662ce0013d2ff99a25f2a005d8
  teams120 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.I# 1610612743#) -}
39e18ec0d231c7645dda0fe82d0afdfd
  teams121 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Denver Nuggets"#) -}
fd9edf91668736f8697d9e77e74d2616
  teams122 :: ([GHC.Types.Char], GHC.Types.Int, [GHC.Types.Char])
  {- Strictness: m,
     Unfolding: ((Types.teams125, Types.teams124, Types.teams123)) -}
682773fa8ba44cc40ec35bc605bbf6f7
  teams123 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "DAL"#) -}
b4d9c03aed87e771f49815ea3cd2c171
  teams124 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.I# 1610612742#) -}
d13bc68b9e0ad3834b997eb95fccb1f3
  teams125 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Dallas Mavericks"#) -}
ffd8706c5413fa327f2b55dbd3eef2a9
  teams126 :: ([GHC.Types.Char], GHC.Types.Int, [GHC.Types.Char])
  {- Strictness: m,
     Unfolding: ((Types.teams129, Types.teams128, Types.teams127)) -}
a239740f2713cec5f4967b91c3f21b24
  teams127 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "CLE"#) -}
278f2d2113ed7f035fe9d6d2d27c7cfe
  teams128 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.I# 1610612739#) -}
55777b5de6b9222111b68324934ff500
  teams129 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Cleveland Cavaliers"#) -}
ebbe28dc83757f12eaa518974b5f4a52
  teams13 :: [Types.Teams]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Teams
                   Types.teams94
                   Types.teams14) -}
50967c1a42189c253faef826d92a0040
  teams130 :: ([GHC.Types.Char], GHC.Types.Int, [GHC.Types.Char])
  {- Strictness: m,
     Unfolding: ((Types.teams133, Types.teams132, Types.teams131)) -}
7e28f68f0b63721ffef90839a2a2f766
  teams131 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "CHI"#) -}
35eff5fbfe5659fc0550a2172db83410
  teams132 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.I# 1610612741#) -}
9a65e4184070cc972a6308a5737097bf
  teams133 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Chicago Bulls"#) -}
995d80dd6d5d5752fe2c1272ae1b218f
  teams134 :: ([GHC.Types.Char], GHC.Types.Int, [GHC.Types.Char])
  {- Strictness: m,
     Unfolding: ((Types.teams137, Types.teams136, Types.teams135)) -}
163b77c70004d70396c3af12a0ecbe6d
  teams135 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "CHA"#) -}
2663b8cb907bba354b4181bb788476b6
  teams136 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.I# 1610612766#) -}
9dc3ef022c06d9c1b747412945485ba6
  teams137 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Charlotte Hornets"#) -}
8fb6c4e066025dd9f6da70aeb6fc7001
  teams138 :: ([GHC.Types.Char], GHC.Types.Int, [GHC.Types.Char])
  {- Strictness: m,
     Unfolding: ((Types.teams141, Types.teams140, Types.teams139)) -}
78c072c36efdebe04a12294ec647afa1
  teams139 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "BKN"#) -}
bde45f94ded2a4053fbfde645b8e60be
  teams14 :: [Types.Teams]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Teams
                   Types.teams90
                   Types.teams15) -}
f84bdd5284b61f949cc7b291e38b2e58
  teams140 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.I# 1610612751#) -}
7f6d1d34b578cbe060061fcfcddc1af5
  teams141 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Brooklyn Nets"#) -}
17efbae2ca0c26b2bc340ef8bc927826
  teams142 :: ([GHC.Types.Char], GHC.Types.Int, [GHC.Types.Char])
  {- Strictness: m,
     Unfolding: ((Types.teams145, Types.teams144, Types.teams143)) -}
e49f9ab7235c288559714bc4cb09c4f7
  teams143 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "BOS"#) -}
48499ff6716558d11f4951c458ebcfa4
  teams144 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.I# 1610612738#) -}
78b9fed83149af96f19b51a5763048c4
  teams145 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Boston Celtics"#) -}
d1da23e1206ba61db0e3dabb3dcb781c
  teams146 :: ([GHC.Types.Char], GHC.Types.Int, [GHC.Types.Char])
  {- Strictness: m,
     Unfolding: ((Types.teams149, Types.teams148, Types.teams147)) -}
861989eabfe4bdb45392ff1b21dee9b2
  teams147 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ATL"#) -}
2eeb0675d1544590fa6955538792cff7
  teams148 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.I# 1610612737#) -}
c1eba030703fc3586c35eec080bb9dc6
  teams149 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Atlanta Hawks"#) -}
76c532cf18270fc0999c36ce5d2cccd7
  teams15 :: [Types.Teams]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Teams
                   Types.teams86
                   Types.teams16) -}
e51f1862959d418a81f040760cd57e44
  teams16 :: [Types.Teams]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Teams
                   Types.teams82
                   Types.teams17) -}
e6ef1f8509981a2e4c6ef1f420b27739
  teams17 :: [Types.Teams]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Teams
                   Types.teams78
                   Types.teams18) -}
3b61d191c7cd878298801e99ed1ed981
  teams18 :: [Types.Teams]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Teams
                   Types.teams74
                   Types.teams19) -}
ca98c5693269976a49a1dc73b57b8e4f
  teams19 :: [Types.Teams]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Teams
                   Types.teams70
                   Types.teams20) -}
aa43a0fe61b2b48228a1fd22bfb657bd
  teams2 :: [Types.Teams]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Teams
                   Types.teams138
                   Types.teams3) -}
685ce76cad7b956313558b3fc76f411e
  teams20 :: [Types.Teams]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Teams
                   Types.teams66
                   Types.teams21) -}
42abae08180183c10f6858c5ae2648d4
  teams21 :: [Types.Teams]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Teams
                   Types.teams62
                   Types.teams22) -}
01ebf6cb52642202496e224aefb71424
  teams22 :: [Types.Teams]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Teams
                   Types.teams58
                   Types.teams23) -}
df44791e9126b0b058bd35e1b674577b
  teams23 :: [Types.Teams]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Teams
                   Types.teams54
                   Types.teams24) -}
a12ab2875de6df5878db7caa0e0be534
  teams24 :: [Types.Teams]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Teams
                   Types.teams50
                   Types.teams25) -}
632998d97f0d72d2a8a4b244c5f44c89
  teams25 :: [Types.Teams]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Teams
                   Types.teams46
                   Types.teams26) -}
ea4e1c15032feef606339effcdaec769
  teams26 :: [Types.Teams]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Teams
                   Types.teams42
                   Types.teams27) -}
d8ef3f0e2d89a9c1a01e42ae7431cc2a
  teams27 :: [Types.Teams]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Teams
                   Types.teams38
                   Types.teams28) -}
bf2ada98c7dde77410ebf0520a66cbd8
  teams28 :: [Types.Teams]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Teams
                   Types.teams34
                   Types.teams29) -}
792aa7613eea78e465f0714bfb305776
  teams29 :: [Types.Teams]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Teams
                   Types.teams30
                   (GHC.Types.[] @ Types.Teams)) -}
2358ad72322ee4e404c7fefc578d7777
  teams3 :: [Types.Teams]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Teams
                   Types.teams134
                   Types.teams4) -}
ef1fc66f7df99fbc7e0f5724c421d066
  teams30 :: ([GHC.Types.Char], GHC.Types.Int, [GHC.Types.Char])
  {- Strictness: m,
     Unfolding: ((Types.teams33, Types.teams32, Types.teams31)) -}
8b93b8f56ea88fc8d90785ee48161d24
  teams31 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "WAS"#) -}
05a1db282c7b9ae6bb1c3cb52f8c4d82
  teams32 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.I# 1610612764#) -}
effdae654b6c3ec879d64d0b4a08b990
  teams33 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Washington Wizards"#) -}
4e13a45abcb8953b98c69306d72eb2bd
  teams34 :: ([GHC.Types.Char], GHC.Types.Int, [GHC.Types.Char])
  {- Strictness: m,
     Unfolding: ((Types.teams37, Types.teams36, Types.teams35)) -}
b211f5783713de0099084001bb6af123
  teams35 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "UTA"#) -}
bea970875ca1604dd555693d65c40c67
  teams36 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.I# 1610612762#) -}
587c29a8663a7993b12a95d55495a7dc
  teams37 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Utah Jazz"#) -}
9a8133f8d8a175311261ce71495da571
  teams38 :: ([GHC.Types.Char], GHC.Types.Int, [GHC.Types.Char])
  {- Strictness: m,
     Unfolding: ((Types.teams41, Types.teams40, Types.teams39)) -}
66b6166aa970864fd8ed09e2e5029894
  teams39 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TOR"#) -}
cbe24ee0a2488f4905a0be52bd338666
  teams4 :: [Types.Teams]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Teams
                   Types.teams130
                   Types.teams5) -}
b23d8d468d768c0f6e621ab2e1bc282d
  teams40 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.I# 1610612761#) -}
8e233eb31330d2e7b94cad7d29e1e0a1
  teams41 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Toronto Raptors"#) -}
f98f7416785dc378cb9d7b175b057516
  teams42 :: ([GHC.Types.Char], GHC.Types.Int, [GHC.Types.Char])
  {- Strictness: m,
     Unfolding: ((Types.teams45, Types.teams44, Types.teams43)) -}
417f2ee225ce0e5082a1a5d31f36d6f8
  teams43 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "SAS"#) -}
5377d6da37b862a67424cb3dc0244769
  teams44 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.I# 1610612759#) -}
ac574fc8a20af047a05b23e42fa78fc3
  teams45 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "San Antonio Spurs"#) -}
5bfa1f93a7fbadff2fd47a37b73d7264
  teams46 :: ([GHC.Types.Char], GHC.Types.Int, [GHC.Types.Char])
  {- Strictness: m,
     Unfolding: ((Types.teams49, Types.teams48, Types.teams47)) -}
32d2760926736ba68bf7b09f6369d410
  teams47 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "SAC"#) -}
06970d8511f45976b057e8559df41e21
  teams48 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.I# 1610612758#) -}
8fed7dc60ddaf6e42731e63531aa336a
  teams49 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Sacramento Kings"#) -}
c84d739ce78c7ddc5096526121030f0b
  teams5 :: [Types.Teams]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Teams
                   Types.teams126
                   Types.teams6) -}
3ef4124a67e2d19ed587e1fc8f7724a9
  teams50 :: ([GHC.Types.Char], GHC.Types.Int, [GHC.Types.Char])
  {- Strictness: m,
     Unfolding: ((Types.teams53, Types.teams52, Types.teams51)) -}
0eeeef21a6a94f32527a290840816d7f
  teams51 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "POR"#) -}
36658da5132ae8b67832e383e36b0108
  teams52 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.I# 1610612757#) -}
a15fa86bef548053b4f7c048dcd03df0
  teams53 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Portland Trail Blazers"#) -}
c7618604df39aa7c6faf6039b652d34f
  teams54 :: ([GHC.Types.Char], GHC.Types.Int, [GHC.Types.Char])
  {- Strictness: m,
     Unfolding: ((Types.teams57, Types.teams56, Types.teams55)) -}
ecb43044e34e70cb227d40e555f2f44e
  teams55 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PHX"#) -}
09e07dd169c33bb6b9f7f57e636378d3
  teams56 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.I# 1610612756#) -}
d9b638ec6ad43cd53303713e05f0cde4
  teams57 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Phoenix Suns"#) -}
4bf99a6eebc6611192706396d562276b
  teams58 :: ([GHC.Types.Char], GHC.Types.Int, [GHC.Types.Char])
  {- Strictness: m,
     Unfolding: ((Types.teams61, Types.teams60, Types.teams59)) -}
5e334f3777ed20cb4526610ef3dd04b3
  teams59 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PHI"#) -}
c4e43f8b8be80e5e56953a85376f47e9
  teams6 :: [Types.Teams]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Teams
                   Types.teams122
                   Types.teams7) -}
24031a306dd8f2a95c7f0454b7366b73
  teams60 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.I# 1610612755#) -}
34ca828b02f4c7983819e8970aafe87b
  teams61 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Philadelphia 76ers"#) -}
c3210ec27426c2161ae58a72b533bb84
  teams62 :: ([GHC.Types.Char], GHC.Types.Int, [GHC.Types.Char])
  {- Strictness: m,
     Unfolding: ((Types.teams65, Types.teams64, Types.teams63)) -}
5ae9936c90d7c29408f29a25dcf173a2
  teams63 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ORL"#) -}
bc89a0e0b5640d1a4a01c07b89e86dae
  teams64 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.I# 1610612753#) -}
4fbab47bd44ab9126767430516310b10
  teams65 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Orlando Magic"#) -}
ffcfc9d48b108d41f53a39946e0144f2
  teams66 :: ([GHC.Types.Char], GHC.Types.Int, [GHC.Types.Char])
  {- Strictness: m,
     Unfolding: ((Types.teams69, Types.teams68, Types.teams67)) -}
aeaa43fa13a1d1b0bb0da778ccafd4a3
  teams67 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "OKC"#) -}
96afc9cf2e2cd82a9311c962b2be72d9
  teams68 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.I# 1610612760#) -}
0ccec4f978f608b5f636d4a25a755372
  teams69 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Oklahoma City Thunder"#) -}
3497a8394d27075205a2f344e96394bc
  teams7 :: [Types.Teams]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Teams
                   Types.teams118
                   Types.teams8) -}
69acbf8aa4924e9ab2b5e57d8720195b
  teams70 :: ([GHC.Types.Char], GHC.Types.Int, [GHC.Types.Char])
  {- Strictness: m,
     Unfolding: ((Types.teams73, Types.teams72, Types.teams71)) -}
8cf6c26b430e78ca76054fa8e28d8515
  teams71 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "NYK"#) -}
b1cb237e489172b3ced70597041fdac5
  teams72 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.I# 1610612752#) -}
f22d3286a86fa531a079c5817834864c
  teams73 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "New York Knicks"#) -}
5b4a668623b3611336bf60926a73b670
  teams74 :: ([GHC.Types.Char], GHC.Types.Int, [GHC.Types.Char])
  {- Strictness: m,
     Unfolding: ((Types.teams77, Types.teams76, Types.teams75)) -}
3a239e780c236ace180c33dd7a84d020
  teams75 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "NOP"#) -}
1ab7152f01164105ca23aeafb0adc168
  teams76 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.I# 1610612740#) -}
32c4df60f2b88573c2b836e3daf72650
  teams77 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "New Orleans Pelicans"#) -}
af8644ef492e71f81a89a0e5e9de90ae
  teams78 :: ([GHC.Types.Char], GHC.Types.Int, [GHC.Types.Char])
  {- Strictness: m,
     Unfolding: ((Types.teams81, Types.teams80, Types.teams79)) -}
bca332b699b83dd4eef23ee17d92f850
  teams79 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "MIN"#) -}
3302d0ba3c8fa7a6a42b3d7ca7c4e18a
  teams8 :: [Types.Teams]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Teams
                   Types.teams114
                   Types.teams9) -}
ef2e3451e618f9ab17b0a8100e50f88c
  teams80 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.I# 1610612750#) -}
64acdbddba3de3dd4626cf6e988e00f2
  teams81 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Minnesota Timberwolves"#) -}
55ced14a886fbffa484cd5e3b415b164
  teams82 :: ([GHC.Types.Char], GHC.Types.Int, [GHC.Types.Char])
  {- Strictness: m,
     Unfolding: ((Types.teams85, Types.teams84, Types.teams83)) -}
66bd89fc0a59eb06c4c001675773191e
  teams83 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "MIL"#) -}
32fac23cee939f839a7035ba27eeec01
  teams84 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.I# 1610612749#) -}
cac2969d11a6026a30ba6a2f86d84581
  teams85 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Milwaukee Bucks"#) -}
8a0db7cb6fa4d604a423f74677a0cd17
  teams86 :: ([GHC.Types.Char], GHC.Types.Int, [GHC.Types.Char])
  {- Strictness: m,
     Unfolding: ((Types.teams89, Types.teams88, Types.teams87)) -}
c7dfa457d45698ec7de0c4010849f7ce
  teams87 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "MIA"#) -}
5f7a6fc6bee755c9b87d5c7a52887349
  teams88 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.I# 1610612748#) -}
88884f105f8cc754d8bd68253a5ac38c
  teams89 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Miami Heat"#) -}
8ad86158feb0ccec42e891e2336f604e
  teams9 :: [Types.Teams]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Types.Teams
                   Types.teams110
                   Types.teams10) -}
68741a8f0e92051757860c778c8077e6
  teams90 :: ([GHC.Types.Char], GHC.Types.Int, [GHC.Types.Char])
  {- Strictness: m,
     Unfolding: ((Types.teams93, Types.teams92, Types.teams91)) -}
3ae5fa14f9b8bb4fe7c7a6ea4408fc3c
  teams91 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "MEM"#) -}
388fc0d07c77e025ae2b634a94579daf
  teams92 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.I# 1610612763#) -}
aab5aef5da109f97a219bd31d2024da4
  teams93 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Memphis Grizzlies"#) -}
9f52548c4e1c213346c11f33742bc123
  teams94 :: ([GHC.Types.Char], GHC.Types.Int, [GHC.Types.Char])
  {- Strictness: m,
     Unfolding: ((Types.teams97, Types.teams96, Types.teams95)) -}
0dbdbd9af5b286a8ef1a71da2057c2e2
  teams95 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "LAL"#) -}
d4886d7c86573b69086dcf0b501a45ad
  teams96 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.I# 1610612747#) -}
c5d3823648193e44c35b17e9255a35f3
  teams97 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Los Angeles Lakers"#) -}
cddd993d2e8cf64b4a44ba567b7e2b19
  teams98 :: ([GHC.Types.Char], GHC.Types.Int, [GHC.Types.Char])
  {- Strictness: m,
     Unfolding: ((Types.teams101, Types.teams100, Types.teams99)) -}
2774922730aa92df1991c229c4126e2f
  teams99 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "LAC"#) -}
df59dff5d583e53da5a1b3b4a5360968
  threeFGA :: Types.WinningTeamStats -> GHC.Types.Double
  RecSel Left Types.WinningTeamStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLLLLLLLLL),1*U(A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.WinningTeamStats) ->
                 case ds of wild { Types.WinningTeamStats ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds8 }) -}
c18710bfa1f2e8d570d4e8c19c7bd1e0
  threeFGM :: Types.WinningTeamStats -> GHC.Types.Double
  RecSel Left Types.WinningTeamStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSLLLLLLLL),1*U(A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.WinningTeamStats) ->
                 case ds of wild { Types.WinningTeamStats ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds9 }) -}
14584a513cb260065424e0d210c87c79
  threeInFour ::
    Types.WinningTeamStats
    -> [(Types.TeamName, Types.Wins, Types.Losses)]
  RecSel Left Types.WinningTeamStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.WinningTeamStats) ->
                 case ds of wild { Types.WinningTeamStats ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds16 }) -}
d270ae4d2985935290affd36096b9f80
  threePointersAttempted :: Types.Offense -> GHC.Types.Double
  RecSel Left Types.Offense
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLLLLLLLLL),1*U(A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Offense) ->
                 case ds of wild { Types.Offense ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds7 }) -}
5e8748dd1ab7bb405923f4cd3340e41b
  threePointersMade :: Types.Offense -> GHC.Types.Double
  RecSel Left Types.Offense
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLLLLLLLLL),1*U(A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Offense) ->
                 case ds of wild { Types.Offense ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds6 }) -}
45b90ce74b68e916499c55cf2bbd2f46
  totalDefense :: Types.TeamStats -> Types.Defense
  RecSel Left Types.TeamStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LS),1*U(A,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.TeamStats) ->
                 case ds of wild { Types.TeamStats ds1 ds2 -> ds2 }) -}
828c3de3aa0a8e1d37bb26580fac4f75
  totalOffense :: Types.TeamStats -> Types.Offense
  RecSel Left Types.TeamStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.TeamStats) ->
                 case ds of wild { Types.TeamStats ds1 ds2 -> ds1 }) -}
69153ffc32eeb5b26b48111d9b4dc041
  totalRebounds :: Types.Offense -> GHC.Types.Double
  RecSel Left Types.Offense
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLSLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Offense) ->
                 case ds of wild { Types.Offense ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds11 }) -}
a2af1bce4b220f68160638c1ffed7ff4
  tov :: Types.GameResult -> GHC.Types.Double
  RecSel Left Types.GameResult
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLLLSLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.GameResult) ->
                 case ds of wild { Types.GameResult ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ->
                 ds25 }) -}
72b53591c218aafcb80b1ce4f24c6671
  turnovers :: Types.WinningTeamStats -> GHC.Types.Double
  RecSel Left Types.WinningTeamStats
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLLLLLLLLL),1*U(A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.WinningTeamStats) ->
                 case ds of wild { Types.WinningTeamStats ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds7 }) -}
7669e76a829242d7ce691208a8ca5a8f
  turnoversCommitted :: Types.Offense -> GHC.Types.Double
  RecSel Left Types.Offense
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLSLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Offense) ->
                 case ds of wild { Types.Offense ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds15 }) -}
82713c83d86437b89e04b27896cb64a0
  w_pct :: Types.GameResult -> GHC.Types.Float
  RecSel Left Types.GameResult
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.GameResult) ->
                 case ds of wild { Types.GameResult ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ->
                 ds8 }) -}
3323daa646864c7adf7ae17993954de1
  wi :: Types.GameResult -> GHC.Types.Double
  RecSel Left Types.GameResult
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.GameResult) ->
                 case ds of wild { Types.GameResult ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ->
                 ds6 }) -}
10e598335b6b2c54323cabb3a6012120
  winningTeamDefault :: Types.WinningTeamStats
  {- Unfolding: (Types.WinningTeamStats
                   Types.winningTeamDefault6
                   Types.winningTeamDefault6
                   Types.winningTeamDefault6
                   Types.winningTeamDefault6
                   Types.winningTeamDefault6
                   Types.winningTeamDefault6
                   Types.winningTeamDefault6
                   Types.winningTeamDefault6
                   Types.winningTeamDefault6
                   Types.winningTeamDefault6
                   Types.winningTeamDefault6
                   Types.winningTeamDefault6
                   Types.winningTeamDefault6
                   Types.winningTeamDefault6
                   Types.winningTeamDefault1
                   Types.winningTeamDefault1
                   Types.winningTeamDefault1) -}
cf6c0c9d10469675b4a65359312b2257
  winningTeamDefault1 :: [(Types.TeamName, Types.Wins, Types.Losses)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Types.TeamName, Types.Wins, Types.Losses)
                   Types.winningTeamDefault3
                   Types.winningTeamDefault2) -}
2e5d81185d7c19099b80e5c1f8c7b8f4
  winningTeamDefault2 :: [(Types.TeamName, Types.Wins, Types.Losses)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Types.TeamName, Types.Wins, Types.Losses)
                   Types.winningTeamDefault3
                   (GHC.Types.[] @ (Types.TeamName, Types.Wins, Types.Losses))) -}
c53ff3c3ac3cf3e84021dfc91ce3fed2
  winningTeamDefault3 ::
    ([GHC.Types.Char], GHC.Types.Int, GHC.Types.Int)
  {- Strictness: m,
     Unfolding: ((Types.teams97, Types.winningTeamDefault5,
                  Types.winningTeamDefault4)) -}
e76d87ab94a6270592cd835bec7ff631
  winningTeamDefault4 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
17acd2b6b381bff6b595c2beebb59646
  winningTeamDefault5 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 82#) -}
e7b79eb6e84d6388571c7939d3f65c37
  winningTeamDefault6 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 0.0##) -}
2d4321382185795e96e077ca96284f31
  wins :: Types.Offense -> GHC.Types.Double
  RecSel Left Types.Offense
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLLLLLLL),1*U(1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Offense) ->
                 case ds of wild { Types.Offense ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds1 }) -}
183a1af88f149d9f5d2a27d59555e69f
  wl :: Types.GameResult -> GHC.Types.Char
  RecSel Left Types.GameResult
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLLLLLLLLLLLLLLLLLLL),1*U(A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.GameResult) ->
                 case ds of wild { Types.GameResult ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ->
                 ds5 }) -}
instance [safe] GHC.Classes.Eq [Types.Defense] = Types.$fEqDefense
instance [safe] GHC.Classes.Eq [Types.GameLogsByTeam]
  = Types.$fEqGameLogsByTeam
instance [safe] GHC.Classes.Eq [Types.GameResult]
  = Types.$fEqGameResult
instance [safe] GHC.Classes.Eq [Types.Offense] = Types.$fEqOffense
instance [safe] GHC.Classes.Eq [Types.TeamStats]
  = Types.$fEqTeamStats
instance [safe] GHC.Classes.Eq [Types.WinningTeamStats]
  = Types.$fEqWinningTeamStats
instance [safe] GHC.Classes.Ord [Types.Defense]
  = Types.$fOrdDefense
instance [safe] GHC.Classes.Ord [Types.GameLogsByTeam]
  = Types.$fOrdGameLogsByTeam
instance [safe] GHC.Classes.Ord [Types.GameResult]
  = Types.$fOrdGameResult
instance [safe] GHC.Classes.Ord [Types.Offense]
  = Types.$fOrdOffense
instance [safe] GHC.Classes.Ord [Types.TeamStats]
  = Types.$fOrdTeamStats
instance [safe] GHC.Classes.Ord [Types.WinningTeamStats]
  = Types.$fOrdWinningTeamStats
instance [safe] GHC.Read.Read [Types.Defense] = Types.$fReadDefense
instance [safe] GHC.Read.Read [Types.GameLogsByTeam]
  = Types.$fReadGameLogsByTeam
instance [safe] GHC.Read.Read [Types.GameResult]
  = Types.$fReadGameResult
instance [safe] GHC.Read.Read [Types.Offense] = Types.$fReadOffense
instance [safe] GHC.Read.Read [Types.TeamStats]
  = Types.$fReadTeamStats
instance [safe] GHC.Read.Read [Types.WinningTeamStats]
  = Types.$fReadWinningTeamStats
instance [safe] GHC.Show.Show [Types.Defense] = Types.$fShowDefense
instance [safe] GHC.Show.Show [Types.GameLogsByTeam]
  = Types.$fShowGameLogsByTeam
instance [safe] GHC.Show.Show [Types.GameResult]
  = Types.$fShowGameResult
instance [safe] GHC.Show.Show [Types.Offense] = Types.$fShowOffense
instance [safe] GHC.Show.Show [Types.TeamStats]
  = Types.$fShowTeamStats
instance [safe] GHC.Show.Show [Types.WinningTeamStats]
  = Types.$fShowWinningTeamStats
"SPEC/Types $fEq(,) @ Int @ [GameResult]" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                                     GHC.Types.Int)
                                                          ($dEq1 :: GHC.Classes.Eq
                                                                      [Types.GameResult])
  GHC.Classes.$fEq(,) @ GHC.Types.Int @ [Types.GameResult] $dEq $dEq1
  = Types.$fEqGameLogsByTeam_$s$fEq(,)
"SPEC/Types $fEq(,,) @ [Char] @ Int @ Int" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                                      [GHC.Types.Char])
                                                           ($dEq1 :: GHC.Classes.Eq GHC.Types.Int)
                                                           ($dEq2 :: GHC.Classes.Eq GHC.Types.Int)
  GHC.Classes.$fEq(,,) @ [GHC.Types.Char]
                       @ GHC.Types.Int
                       @ GHC.Types.Int
                       $dEq
                       $dEq1
                       $dEq2
  = Types.$fEqWinningTeamStats_$s$fEq(,,)
"SPEC/Types $fEq(,,)_$c/= @ [Char] @ Int @ Int" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                                           [GHC.Types.Char])
                                                                ($dEq1 :: GHC.Classes.Eq
                                                                            GHC.Types.Int)
                                                                ($dEq2 :: GHC.Classes.Eq
                                                                            GHC.Types.Int)
  GHC.Classes.$fEq(,,)_$c/= @ [GHC.Types.Char]
                            @ GHC.Types.Int
                            @ GHC.Types.Int
                            $dEq
                            $dEq1
                            $dEq2
  = Types.$fEqWinningTeamStats_$s$fEq(,,)_$c/=
"SPEC/Types $fEq[] @ GameResult" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                            Types.GameResult)
  GHC.Classes.$fEq[] @ Types.GameResult $dEq
  = Types.$fEqGameLogsByTeam_$s$fEq[]
"SPEC/Types $fEq[]_$c/= @ GameResult" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                                 Types.GameResult)
  GHC.Classes.$fEq[]_$c/= @ Types.GameResult $dEq
  = Types.$fEqGameLogsByTeam_$s$fEq[]_$c/=
"SPEC/Types $fOrd(,) @ Int @ [GameResult]" [ALWAYS] forall ($dOrd :: GHC.Classes.Ord
                                                                       GHC.Types.Int)
                                                           ($dOrd1 :: GHC.Classes.Ord
                                                                        [Types.GameResult])
  GHC.Classes.$fOrd(,) @ GHC.Types.Int
                       @ [Types.GameResult]
                       $dOrd
                       $dOrd1
  = Types.$fOrdGameLogsByTeam_$s$fOrd(,)
"SPEC/Types $fOrd(,)_$cp1Ord @ Int @ [GameResult]" [ALWAYS] forall ($dOrd :: GHC.Classes.Ord
                                                                               GHC.Types.Int)
                                                                   ($dOrd1 :: GHC.Classes.Ord
                                                                                [Types.GameResult])
  GHC.Classes.$fOrd(,)_$cp1Ord @ GHC.Types.Int
                               @ [Types.GameResult]
                               $dOrd
                               $dOrd1
  = Types.$fOrdGameLogsByTeam_$s$fOrd(,)_$cp1Ord
"SPEC/Types $fOrd(,,) @ [Char] @ Int @ Int" [ALWAYS] forall ($dOrd :: GHC.Classes.Ord
                                                                        [GHC.Types.Char])
                                                            ($dOrd1 :: GHC.Classes.Ord
                                                                         GHC.Types.Int)
                                                            ($dOrd2 :: GHC.Classes.Ord
                                                                         GHC.Types.Int)
  GHC.Classes.$fOrd(,,) @ [GHC.Types.Char]
                        @ GHC.Types.Int
                        @ GHC.Types.Int
                        $dOrd
                        $dOrd1
                        $dOrd2
  = Types.$fOrdWinningTeamStats_$s$fOrd(,,)
"SPEC/Types $fOrd(,,)_$cmax @ [Char] @ Int @ Int" [ALWAYS] forall ($dOrd :: GHC.Classes.Ord
                                                                              [GHC.Types.Char])
                                                                  ($dOrd1 :: GHC.Classes.Ord
                                                                               GHC.Types.Int)
                                                                  ($dOrd2 :: GHC.Classes.Ord
                                                                               GHC.Types.Int)
  GHC.Classes.$fOrd(,,)_$cmax @ [GHC.Types.Char]
                              @ GHC.Types.Int
                              @ GHC.Types.Int
                              $dOrd
                              $dOrd1
                              $dOrd2
  = Types.$fOrdWinningTeamStats_$s$fOrd(,,)_$cmax
"SPEC/Types $fOrd(,,)_$cmin @ [Char] @ Int @ Int" [ALWAYS] forall ($dOrd :: GHC.Classes.Ord
                                                                              [GHC.Types.Char])
                                                                  ($dOrd1 :: GHC.Classes.Ord
                                                                               GHC.Types.Int)
                                                                  ($dOrd2 :: GHC.Classes.Ord
                                                                               GHC.Types.Int)
  GHC.Classes.$fOrd(,,)_$cmin @ [GHC.Types.Char]
                              @ GHC.Types.Int
                              @ GHC.Types.Int
                              $dOrd
                              $dOrd1
                              $dOrd2
  = Types.$fOrdWinningTeamStats_$s$fOrd(,,)_$cmin
"SPEC/Types $fOrd(,,)_$cp1Ord @ [Char] @ Int @ Int" [ALWAYS] forall ($dOrd :: GHC.Classes.Ord
                                                                                [GHC.Types.Char])
                                                                    ($dOrd1 :: GHC.Classes.Ord
                                                                                 GHC.Types.Int)
                                                                    ($dOrd2 :: GHC.Classes.Ord
                                                                                 GHC.Types.Int)
  GHC.Classes.$fOrd(,,)_$cp1Ord @ [GHC.Types.Char]
                                @ GHC.Types.Int
                                @ GHC.Types.Int
                                $dOrd
                                $dOrd1
                                $dOrd2
  = Types.$fOrdWinningTeamStats_$s$fOrd(,,)_$cp1Ord
"SPEC/Types $fOrd[] @ GameResult" [ALWAYS] forall ($dOrd :: GHC.Classes.Ord
                                                              Types.GameResult)
  GHC.Classes.$fOrd[] @ Types.GameResult $dOrd
  = Types.$fOrdGameLogsByTeam_$s$fOrd[]
"SPEC/Types $fOrd[]_$c< @ GameResult" [ALWAYS] forall ($dOrd :: GHC.Classes.Ord
                                                                  Types.GameResult)
  GHC.Classes.$fOrd[]_$c< @ Types.GameResult $dOrd
  = Types.$fOrdGameLogsByTeam_$s$fOrd[]_$c<
"SPEC/Types $fOrd[]_$c<= @ GameResult" [ALWAYS] forall ($dOrd :: GHC.Classes.Ord
                                                                   Types.GameResult)
  GHC.Classes.$fOrd[]_$c<= @ Types.GameResult $dOrd
  = Types.$fOrdGameLogsByTeam_$s$fOrd[]_$c<=
"SPEC/Types $fOrd[]_$c> @ GameResult" [ALWAYS] forall ($dOrd :: GHC.Classes.Ord
                                                                  Types.GameResult)
  GHC.Classes.$fOrd[]_$c> @ Types.GameResult $dOrd
  = Types.$fOrdGameLogsByTeam_$s$fOrd[]_$c>
"SPEC/Types $fOrd[]_$c>= @ GameResult" [ALWAYS] forall ($dOrd :: GHC.Classes.Ord
                                                                   Types.GameResult)
  GHC.Classes.$fOrd[]_$c>= @ Types.GameResult $dOrd
  = Types.$fOrdGameLogsByTeam_$s$fOrd[]_$c>=
"SPEC/Types $fOrd[]_$cmax @ GameResult" [ALWAYS] forall ($dOrd :: GHC.Classes.Ord
                                                                    Types.GameResult)
  GHC.Classes.$fOrd[]_$cmax @ Types.GameResult $dOrd
  = Types.$fOrdGameLogsByTeam_$s$fOrd[]_$cmax
"SPEC/Types $fOrd[]_$cmin @ GameResult" [ALWAYS] forall ($dOrd :: GHC.Classes.Ord
                                                                    Types.GameResult)
  GHC.Classes.$fOrd[]_$cmin @ Types.GameResult $dOrd
  = Types.$fOrdGameLogsByTeam_$s$fOrd[]_$cmin
"SPEC/Types $fOrd[]_$cp1Ord @ GameResult" [ALWAYS] forall ($dOrd :: GHC.Classes.Ord
                                                                      Types.GameResult)
  GHC.Classes.$fOrd[]_$cp1Ord @ Types.GameResult $dOrd
  = Types.$fEqGameLogsByTeam_$s$fOrd[]_$cp1Ord
"SPEC/Types $fRead[] @ GameResult" [ALWAYS] forall ($dRead :: GHC.Read.Read
                                                                Types.GameResult)
  GHC.Read.$fRead[] @ Types.GameResult $dRead
  = Types.$fReadGameLogsByTeam_$s$fRead[]
"SPEC/Types $fRead[]_$creadList @ GameResult" [ALWAYS] forall ($dRead :: GHC.Read.Read
                                                                           Types.GameResult)
  GHC.Read.$fRead[]_$creadList @ Types.GameResult $dRead
  = Types.$fReadGameLogsByTeam_$s$fRead[]_$creadList
"SPEC/Types $fRead[]_$creadsPrec @ GameResult" [ALWAYS] forall ($dRead :: GHC.Read.Read
                                                                            Types.GameResult)
  GHC.Read.$fRead[]_$creadsPrec @ Types.GameResult $dRead
  = Types.$fReadGameLogsByTeam_$s$fRead[]_$creadsPrec
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

